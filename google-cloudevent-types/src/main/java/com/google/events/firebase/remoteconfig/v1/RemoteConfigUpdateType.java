/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/remoteconfig/v1/data.proto

package com.google.events.firebase.remoteconfig.v1;

/**
 *
 *
 * <pre>
 * Where the Remote Config update action originated.
 * </pre>
 *
 * Protobuf enum {@code google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType}
 */
public enum RemoteConfigUpdateType implements com.google.protobuf.ProtocolMessageEnum {
  /**
   *
   *
   * <pre>
   * Catch-all for unrecognized enum values.
   * </pre>
   *
   * <code>REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED = 0;</code>
   */
  REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED(0),
  /**
   *
   *
   * <pre>
   * A regular incremental update.
   * </pre>
   *
   * <code>INCREMENTAL_UPDATE = 1;</code>
   */
  INCREMENTAL_UPDATE(1),
  /**
   *
   *
   * <pre>
   * A forced update.
   * The ETag was specified as "*" in an UpdateRemoteConfigRequest
   * request or the "Force Update" button was pressed on the console.
   * </pre>
   *
   * <code>FORCED_UPDATE = 2;</code>
   */
  FORCED_UPDATE(2),
  /**
   *
   *
   * <pre>
   * A rollback to a previous Remote Config template.
   * </pre>
   *
   * <code>ROLLBACK = 3;</code>
   */
  ROLLBACK(3),
  UNRECOGNIZED(-1),
  ;

  /**
   *
   *
   * <pre>
   * Catch-all for unrecognized enum values.
   * </pre>
   *
   * <code>REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   *
   *
   * <pre>
   * A regular incremental update.
   * </pre>
   *
   * <code>INCREMENTAL_UPDATE = 1;</code>
   */
  public static final int INCREMENTAL_UPDATE_VALUE = 1;
  /**
   *
   *
   * <pre>
   * A forced update.
   * The ETag was specified as "*" in an UpdateRemoteConfigRequest
   * request or the "Force Update" button was pressed on the console.
   * </pre>
   *
   * <code>FORCED_UPDATE = 2;</code>
   */
  public static final int FORCED_UPDATE_VALUE = 2;
  /**
   *
   *
   * <pre>
   * A rollback to a previous Remote Config template.
   * </pre>
   *
   * <code>ROLLBACK = 3;</code>
   */
  public static final int ROLLBACK_VALUE = 3;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RemoteConfigUpdateType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RemoteConfigUpdateType forNumber(int value) {
    switch (value) {
      case 0:
        return REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED;
      case 1:
        return INCREMENTAL_UPDATE;
      case 2:
        return FORCED_UPDATE;
      case 3:
        return ROLLBACK;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RemoteConfigUpdateType>
      internalGetValueMap() {
    return internalValueMap;
  }

  private static final com.google.protobuf.Internal.EnumLiteMap<RemoteConfigUpdateType>
      internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RemoteConfigUpdateType>() {
            public RemoteConfigUpdateType findValueByNumber(int number) {
              return RemoteConfigUpdateType.forNumber(number);
            }
          };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }

  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }

  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return com.google.events.firebase.remoteconfig.v1.Data.getDescriptor().getEnumTypes().get(1);
  }

  private static final RemoteConfigUpdateType[] VALUES = values();

  public static RemoteConfigUpdateType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RemoteConfigUpdateType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType)
}
