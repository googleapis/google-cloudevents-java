/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/dataconnect/v1/data.proto

package com.google.events.firebase.dataconnect.v1;

public interface GraphqlErrorOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.events.firebase.dataconnect.v1.GraphqlError)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The detailed error message.
   * The message should help developer understand the underlying problem without
   * leaking internal data.
   * </pre>
   *
   * <code>string message = 1;</code>
   *
   * @return The message.
   */
  java.lang.String getMessage();

  /**
   *
   *
   * <pre>
   * The detailed error message.
   * The message should help developer understand the underlying problem without
   * leaking internal data.
   * </pre>
   *
   * <code>string message = 1;</code>
   *
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString getMessageBytes();

  /**
   *
   *
   * <pre>
   * The source locations where the error occurred.
   * Locations should help developers and toolings identify the source of error
   * quickly.
   * Included in admin endpoints (`ExecuteGraphql`, `ExecuteGraphqlRead`,
   * `UpdateSchema` and `UpdateConnector`) to reference the provided GraphQL
   * GQL document.
   * Omitted in `ExecuteMutation` and `ExecuteQuery` since the caller shouldn't
   * have access access the underlying GQL source.
   * </pre>
   *
   * <code>repeated .google.events.firebase.dataconnect.v1.SourceLocation locations = 2;</code>
   */
  java.util.List<com.google.events.firebase.dataconnect.v1.SourceLocation> getLocationsList();

  /**
   *
   *
   * <pre>
   * The source locations where the error occurred.
   * Locations should help developers and toolings identify the source of error
   * quickly.
   * Included in admin endpoints (`ExecuteGraphql`, `ExecuteGraphqlRead`,
   * `UpdateSchema` and `UpdateConnector`) to reference the provided GraphQL
   * GQL document.
   * Omitted in `ExecuteMutation` and `ExecuteQuery` since the caller shouldn't
   * have access access the underlying GQL source.
   * </pre>
   *
   * <code>repeated .google.events.firebase.dataconnect.v1.SourceLocation locations = 2;</code>
   */
  com.google.events.firebase.dataconnect.v1.SourceLocation getLocations(int index);

  /**
   *
   *
   * <pre>
   * The source locations where the error occurred.
   * Locations should help developers and toolings identify the source of error
   * quickly.
   * Included in admin endpoints (`ExecuteGraphql`, `ExecuteGraphqlRead`,
   * `UpdateSchema` and `UpdateConnector`) to reference the provided GraphQL
   * GQL document.
   * Omitted in `ExecuteMutation` and `ExecuteQuery` since the caller shouldn't
   * have access access the underlying GQL source.
   * </pre>
   *
   * <code>repeated .google.events.firebase.dataconnect.v1.SourceLocation locations = 2;</code>
   */
  int getLocationsCount();

  /**
   *
   *
   * <pre>
   * The source locations where the error occurred.
   * Locations should help developers and toolings identify the source of error
   * quickly.
   * Included in admin endpoints (`ExecuteGraphql`, `ExecuteGraphqlRead`,
   * `UpdateSchema` and `UpdateConnector`) to reference the provided GraphQL
   * GQL document.
   * Omitted in `ExecuteMutation` and `ExecuteQuery` since the caller shouldn't
   * have access access the underlying GQL source.
   * </pre>
   *
   * <code>repeated .google.events.firebase.dataconnect.v1.SourceLocation locations = 2;</code>
   */
  java.util.List<? extends com.google.events.firebase.dataconnect.v1.SourceLocationOrBuilder>
      getLocationsOrBuilderList();

  /**
   *
   *
   * <pre>
   * The source locations where the error occurred.
   * Locations should help developers and toolings identify the source of error
   * quickly.
   * Included in admin endpoints (`ExecuteGraphql`, `ExecuteGraphqlRead`,
   * `UpdateSchema` and `UpdateConnector`) to reference the provided GraphQL
   * GQL document.
   * Omitted in `ExecuteMutation` and `ExecuteQuery` since the caller shouldn't
   * have access access the underlying GQL source.
   * </pre>
   *
   * <code>repeated .google.events.firebase.dataconnect.v1.SourceLocation locations = 2;</code>
   */
  com.google.events.firebase.dataconnect.v1.SourceLocationOrBuilder getLocationsOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * The result field which could not be populated due to error.
   * Clients can use path to identify whether a null result is intentional or
   * caused by a runtime error.
   * It should be a list of string or index from the root of GraphQL query
   * document.
   * </pre>
   *
   * <code>.google.protobuf.ListValue path = 3;</code>
   *
   * @return Whether the path field is set.
   */
  boolean hasPath();

  /**
   *
   *
   * <pre>
   * The result field which could not be populated due to error.
   * Clients can use path to identify whether a null result is intentional or
   * caused by a runtime error.
   * It should be a list of string or index from the root of GraphQL query
   * document.
   * </pre>
   *
   * <code>.google.protobuf.ListValue path = 3;</code>
   *
   * @return The path.
   */
  com.google.protobuf.ListValue getPath();

  /**
   *
   *
   * <pre>
   * The result field which could not be populated due to error.
   * Clients can use path to identify whether a null result is intentional or
   * caused by a runtime error.
   * It should be a list of string or index from the root of GraphQL query
   * document.
   * </pre>
   *
   * <code>.google.protobuf.ListValue path = 3;</code>
   */
  com.google.protobuf.ListValueOrBuilder getPathOrBuilder();

  /**
   *
   *
   * <pre>
   * Additional error information.
   * </pre>
   *
   * <code>.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions extensions = 4;</code>
   *
   * @return Whether the extensions field is set.
   */
  boolean hasExtensions();

  /**
   *
   *
   * <pre>
   * Additional error information.
   * </pre>
   *
   * <code>.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions extensions = 4;</code>
   *
   * @return The extensions.
   */
  com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions getExtensions();

  /**
   *
   *
   * <pre>
   * Additional error information.
   * </pre>
   *
   * <code>.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions extensions = 4;</code>
   */
  com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensionsOrBuilder
      getExtensionsOrBuilder();
}
