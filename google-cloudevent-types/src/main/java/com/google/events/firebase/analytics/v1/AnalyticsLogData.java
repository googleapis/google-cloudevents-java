/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/analytics/v1/data.proto

package com.google.events.firebase.analytics.v1;

/**
 *
 *
 * <pre>
 * The data within Firebase Analytics log events.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.analytics.v1.AnalyticsLogData}
 */
public final class AnalyticsLogData extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.analytics.v1.AnalyticsLogData)
    AnalyticsLogDataOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AnalyticsLogData.newBuilder() to construct.
  private AnalyticsLogData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AnalyticsLogData() {
    eventDim_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AnalyticsLogData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.events.firebase.analytics.v1.Data
        .internal_static_google_events_firebase_analytics_v1_AnalyticsLogData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.events.firebase.analytics.v1.Data
        .internal_static_google_events_firebase_analytics_v1_AnalyticsLogData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.events.firebase.analytics.v1.AnalyticsLogData.class,
            com.google.events.firebase.analytics.v1.AnalyticsLogData.Builder.class);
  }

  public static final int USER_DIM_FIELD_NUMBER = 1;
  private com.google.events.firebase.analytics.v1.UserDimensions userDim_;
  /**
   *
   *
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   *
   * @return Whether the userDim field is set.
   */
  @java.lang.Override
  public boolean hasUserDim() {
    return userDim_ != null;
  }
  /**
   *
   *
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   *
   * @return The userDim.
   */
  @java.lang.Override
  public com.google.events.firebase.analytics.v1.UserDimensions getUserDim() {
    return userDim_ == null
        ? com.google.events.firebase.analytics.v1.UserDimensions.getDefaultInstance()
        : userDim_;
  }
  /**
   *
   *
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   */
  @java.lang.Override
  public com.google.events.firebase.analytics.v1.UserDimensionsOrBuilder getUserDimOrBuilder() {
    return userDim_ == null
        ? com.google.events.firebase.analytics.v1.UserDimensions.getDefaultInstance()
        : userDim_;
  }

  public static final int EVENT_DIM_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.events.firebase.analytics.v1.EventDimensions> eventDim_;
  /**
   *
   *
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.events.firebase.analytics.v1.EventDimensions> getEventDimList() {
    return eventDim_;
  }
  /**
   *
   *
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder>
      getEventDimOrBuilderList() {
    return eventDim_;
  }
  /**
   *
   *
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public int getEventDimCount() {
    return eventDim_.size();
  }
  /**
   *
   *
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public com.google.events.firebase.analytics.v1.EventDimensions getEventDim(int index) {
    return eventDim_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder getEventDimOrBuilder(
      int index) {
    return eventDim_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (userDim_ != null) {
      output.writeMessage(1, getUserDim());
    }
    for (int i = 0; i < eventDim_.size(); i++) {
      output.writeMessage(2, eventDim_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (userDim_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getUserDim());
    }
    for (int i = 0; i < eventDim_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, eventDim_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.events.firebase.analytics.v1.AnalyticsLogData)) {
      return super.equals(obj);
    }
    com.google.events.firebase.analytics.v1.AnalyticsLogData other =
        (com.google.events.firebase.analytics.v1.AnalyticsLogData) obj;

    if (hasUserDim() != other.hasUserDim()) return false;
    if (hasUserDim()) {
      if (!getUserDim().equals(other.getUserDim())) return false;
    }
    if (!getEventDimList().equals(other.getEventDimList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasUserDim()) {
      hash = (37 * hash) + USER_DIM_FIELD_NUMBER;
      hash = (53 * hash) + getUserDim().hashCode();
    }
    if (getEventDimCount() > 0) {
      hash = (37 * hash) + EVENT_DIM_FIELD_NUMBER;
      hash = (53 * hash) + getEventDimList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.events.firebase.analytics.v1.AnalyticsLogData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * The data within Firebase Analytics log events.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.analytics.v1.AnalyticsLogData}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.analytics.v1.AnalyticsLogData)
      com.google.events.firebase.analytics.v1.AnalyticsLogDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.events.firebase.analytics.v1.Data
          .internal_static_google_events_firebase_analytics_v1_AnalyticsLogData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.firebase.analytics.v1.Data
          .internal_static_google_events_firebase_analytics_v1_AnalyticsLogData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.firebase.analytics.v1.AnalyticsLogData.class,
              com.google.events.firebase.analytics.v1.AnalyticsLogData.Builder.class);
    }

    // Construct using com.google.events.firebase.analytics.v1.AnalyticsLogData.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      userDim_ = null;
      if (userDimBuilder_ != null) {
        userDimBuilder_.dispose();
        userDimBuilder_ = null;
      }
      if (eventDimBuilder_ == null) {
        eventDim_ = java.util.Collections.emptyList();
      } else {
        eventDim_ = null;
        eventDimBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.events.firebase.analytics.v1.Data
          .internal_static_google_events_firebase_analytics_v1_AnalyticsLogData_descriptor;
    }

    @java.lang.Override
    public com.google.events.firebase.analytics.v1.AnalyticsLogData getDefaultInstanceForType() {
      return com.google.events.firebase.analytics.v1.AnalyticsLogData.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.events.firebase.analytics.v1.AnalyticsLogData build() {
      com.google.events.firebase.analytics.v1.AnalyticsLogData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.events.firebase.analytics.v1.AnalyticsLogData buildPartial() {
      com.google.events.firebase.analytics.v1.AnalyticsLogData result =
          new com.google.events.firebase.analytics.v1.AnalyticsLogData(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.events.firebase.analytics.v1.AnalyticsLogData result) {
      if (eventDimBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          eventDim_ = java.util.Collections.unmodifiableList(eventDim_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.eventDim_ = eventDim_;
      } else {
        result.eventDim_ = eventDimBuilder_.build();
      }
    }

    private void buildPartial0(com.google.events.firebase.analytics.v1.AnalyticsLogData result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.userDim_ = userDimBuilder_ == null ? userDim_ : userDimBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.events.firebase.analytics.v1.AnalyticsLogData) {
        return mergeFrom((com.google.events.firebase.analytics.v1.AnalyticsLogData) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.events.firebase.analytics.v1.AnalyticsLogData other) {
      if (other == com.google.events.firebase.analytics.v1.AnalyticsLogData.getDefaultInstance())
        return this;
      if (other.hasUserDim()) {
        mergeUserDim(other.getUserDim());
      }
      if (eventDimBuilder_ == null) {
        if (!other.eventDim_.isEmpty()) {
          if (eventDim_.isEmpty()) {
            eventDim_ = other.eventDim_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEventDimIsMutable();
            eventDim_.addAll(other.eventDim_);
          }
          onChanged();
        }
      } else {
        if (!other.eventDim_.isEmpty()) {
          if (eventDimBuilder_.isEmpty()) {
            eventDimBuilder_.dispose();
            eventDimBuilder_ = null;
            eventDim_ = other.eventDim_;
            bitField0_ = (bitField0_ & ~0x00000002);
            eventDimBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getEventDimFieldBuilder()
                    : null;
          } else {
            eventDimBuilder_.addAllMessages(other.eventDim_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getUserDimFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                com.google.events.firebase.analytics.v1.EventDimensions m =
                    input.readMessage(
                        com.google.events.firebase.analytics.v1.EventDimensions.parser(),
                        extensionRegistry);
                if (eventDimBuilder_ == null) {
                  ensureEventDimIsMutable();
                  eventDim_.add(m);
                } else {
                  eventDimBuilder_.addMessage(m);
                }
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.events.firebase.analytics.v1.UserDimensions userDim_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.firebase.analytics.v1.UserDimensions,
            com.google.events.firebase.analytics.v1.UserDimensions.Builder,
            com.google.events.firebase.analytics.v1.UserDimensionsOrBuilder>
        userDimBuilder_;
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     *
     * @return Whether the userDim field is set.
     */
    public boolean hasUserDim() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     *
     * @return The userDim.
     */
    public com.google.events.firebase.analytics.v1.UserDimensions getUserDim() {
      if (userDimBuilder_ == null) {
        return userDim_ == null
            ? com.google.events.firebase.analytics.v1.UserDimensions.getDefaultInstance()
            : userDim_;
      } else {
        return userDimBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder setUserDim(com.google.events.firebase.analytics.v1.UserDimensions value) {
      if (userDimBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userDim_ = value;
      } else {
        userDimBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder setUserDim(
        com.google.events.firebase.analytics.v1.UserDimensions.Builder builderForValue) {
      if (userDimBuilder_ == null) {
        userDim_ = builderForValue.build();
      } else {
        userDimBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder mergeUserDim(com.google.events.firebase.analytics.v1.UserDimensions value) {
      if (userDimBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && userDim_ != null
            && userDim_
                != com.google.events.firebase.analytics.v1.UserDimensions.getDefaultInstance()) {
          getUserDimBuilder().mergeFrom(value);
        } else {
          userDim_ = value;
        }
      } else {
        userDimBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder clearUserDim() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userDim_ = null;
      if (userDimBuilder_ != null) {
        userDimBuilder_.dispose();
        userDimBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public com.google.events.firebase.analytics.v1.UserDimensions.Builder getUserDimBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getUserDimFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public com.google.events.firebase.analytics.v1.UserDimensionsOrBuilder getUserDimOrBuilder() {
      if (userDimBuilder_ != null) {
        return userDimBuilder_.getMessageOrBuilder();
      } else {
        return userDim_ == null
            ? com.google.events.firebase.analytics.v1.UserDimensions.getDefaultInstance()
            : userDim_;
      }
    }
    /**
     *
     *
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.firebase.analytics.v1.UserDimensions,
            com.google.events.firebase.analytics.v1.UserDimensions.Builder,
            com.google.events.firebase.analytics.v1.UserDimensionsOrBuilder>
        getUserDimFieldBuilder() {
      if (userDimBuilder_ == null) {
        userDimBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.firebase.analytics.v1.UserDimensions,
                com.google.events.firebase.analytics.v1.UserDimensions.Builder,
                com.google.events.firebase.analytics.v1.UserDimensionsOrBuilder>(
                getUserDim(), getParentForChildren(), isClean());
        userDim_ = null;
      }
      return userDimBuilder_;
    }

    private java.util.List<com.google.events.firebase.analytics.v1.EventDimensions> eventDim_ =
        java.util.Collections.emptyList();

    private void ensureEventDimIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        eventDim_ =
            new java.util.ArrayList<com.google.events.firebase.analytics.v1.EventDimensions>(
                eventDim_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.events.firebase.analytics.v1.EventDimensions,
            com.google.events.firebase.analytics.v1.EventDimensions.Builder,
            com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder>
        eventDimBuilder_;

    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public java.util.List<com.google.events.firebase.analytics.v1.EventDimensions>
        getEventDimList() {
      if (eventDimBuilder_ == null) {
        return java.util.Collections.unmodifiableList(eventDim_);
      } else {
        return eventDimBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public int getEventDimCount() {
      if (eventDimBuilder_ == null) {
        return eventDim_.size();
      } else {
        return eventDimBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public com.google.events.firebase.analytics.v1.EventDimensions getEventDim(int index) {
      if (eventDimBuilder_ == null) {
        return eventDim_.get(index);
      } else {
        return eventDimBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder setEventDim(
        int index, com.google.events.firebase.analytics.v1.EventDimensions value) {
      if (eventDimBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventDimIsMutable();
        eventDim_.set(index, value);
        onChanged();
      } else {
        eventDimBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder setEventDim(
        int index,
        com.google.events.firebase.analytics.v1.EventDimensions.Builder builderForValue) {
      if (eventDimBuilder_ == null) {
        ensureEventDimIsMutable();
        eventDim_.set(index, builderForValue.build());
        onChanged();
      } else {
        eventDimBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(com.google.events.firebase.analytics.v1.EventDimensions value) {
      if (eventDimBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventDimIsMutable();
        eventDim_.add(value);
        onChanged();
      } else {
        eventDimBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(
        int index, com.google.events.firebase.analytics.v1.EventDimensions value) {
      if (eventDimBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventDimIsMutable();
        eventDim_.add(index, value);
        onChanged();
      } else {
        eventDimBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(
        com.google.events.firebase.analytics.v1.EventDimensions.Builder builderForValue) {
      if (eventDimBuilder_ == null) {
        ensureEventDimIsMutable();
        eventDim_.add(builderForValue.build());
        onChanged();
      } else {
        eventDimBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(
        int index,
        com.google.events.firebase.analytics.v1.EventDimensions.Builder builderForValue) {
      if (eventDimBuilder_ == null) {
        ensureEventDimIsMutable();
        eventDim_.add(index, builderForValue.build());
        onChanged();
      } else {
        eventDimBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addAllEventDim(
        java.lang.Iterable<? extends com.google.events.firebase.analytics.v1.EventDimensions>
            values) {
      if (eventDimBuilder_ == null) {
        ensureEventDimIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, eventDim_);
        onChanged();
      } else {
        eventDimBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder clearEventDim() {
      if (eventDimBuilder_ == null) {
        eventDim_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        eventDimBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder removeEventDim(int index) {
      if (eventDimBuilder_ == null) {
        ensureEventDimIsMutable();
        eventDim_.remove(index);
        onChanged();
      } else {
        eventDimBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public com.google.events.firebase.analytics.v1.EventDimensions.Builder getEventDimBuilder(
        int index) {
      return getEventDimFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder getEventDimOrBuilder(
        int index) {
      if (eventDimBuilder_ == null) {
        return eventDim_.get(index);
      } else {
        return eventDimBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public java.util.List<
            ? extends com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder>
        getEventDimOrBuilderList() {
      if (eventDimBuilder_ != null) {
        return eventDimBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(eventDim_);
      }
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public com.google.events.firebase.analytics.v1.EventDimensions.Builder addEventDimBuilder() {
      return getEventDimFieldBuilder()
          .addBuilder(com.google.events.firebase.analytics.v1.EventDimensions.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public com.google.events.firebase.analytics.v1.EventDimensions.Builder addEventDimBuilder(
        int index) {
      return getEventDimFieldBuilder()
          .addBuilder(
              index, com.google.events.firebase.analytics.v1.EventDimensions.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public java.util.List<com.google.events.firebase.analytics.v1.EventDimensions.Builder>
        getEventDimBuilderList() {
      return getEventDimFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.events.firebase.analytics.v1.EventDimensions,
            com.google.events.firebase.analytics.v1.EventDimensions.Builder,
            com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder>
        getEventDimFieldBuilder() {
      if (eventDimBuilder_ == null) {
        eventDimBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.events.firebase.analytics.v1.EventDimensions,
                com.google.events.firebase.analytics.v1.EventDimensions.Builder,
                com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder>(
                eventDim_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
        eventDim_ = null;
      }
      return eventDimBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.analytics.v1.AnalyticsLogData)
  }

  // @@protoc_insertion_point(class_scope:google.events.firebase.analytics.v1.AnalyticsLogData)
  private static final com.google.events.firebase.analytics.v1.AnalyticsLogData DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.events.firebase.analytics.v1.AnalyticsLogData();
  }

  public static com.google.events.firebase.analytics.v1.AnalyticsLogData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AnalyticsLogData> PARSER =
      new com.google.protobuf.AbstractParser<AnalyticsLogData>() {
        @java.lang.Override
        public AnalyticsLogData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AnalyticsLogData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AnalyticsLogData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.events.firebase.analytics.v1.AnalyticsLogData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
