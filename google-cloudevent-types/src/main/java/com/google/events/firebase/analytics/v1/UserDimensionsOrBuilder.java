// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/analytics/v1/data.proto

package com.google.events.firebase.analytics.v1;

public interface UserDimensionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.events.firebase.analytics.v1.UserDimensions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The user ID set via the setUserId API.
   * </pre>
   *
   * <code>string user_id = 1;</code>
   * @return The userId.
   */
  java.lang.String getUserId();
  /**
   * <pre>
   * The user ID set via the setUserId API.
   * </pre>
   *
   * <code>string user_id = 1;</code>
   * @return The bytes for userId.
   */
  com.google.protobuf.ByteString
      getUserIdBytes();

  /**
   * <pre>
   * The time (in microseconds) at which the user first opened the app.
   * </pre>
   *
   * <code>int64 first_open_timestamp_micros = 2;</code>
   * @return The firstOpenTimestampMicros.
   */
  long getFirstOpenTimestampMicros();

  /**
   * <pre>
   * A repeated record of user properties set with the setUserProperty API.
   * https://firebase.google.com/docs/analytics/android/properties
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.UserPropertyValue&gt; user_properties = 3;</code>
   */
  int getUserPropertiesCount();
  /**
   * <pre>
   * A repeated record of user properties set with the setUserProperty API.
   * https://firebase.google.com/docs/analytics/android/properties
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.UserPropertyValue&gt; user_properties = 3;</code>
   */
  boolean containsUserProperties(
      java.lang.String key);
  /**
   * Use {@link #getUserPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.UserPropertyValue>
  getUserProperties();
  /**
   * <pre>
   * A repeated record of user properties set with the setUserProperty API.
   * https://firebase.google.com/docs/analytics/android/properties
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.UserPropertyValue&gt; user_properties = 3;</code>
   */
  java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.UserPropertyValue>
  getUserPropertiesMap();
  /**
   * <pre>
   * A repeated record of user properties set with the setUserProperty API.
   * https://firebase.google.com/docs/analytics/android/properties
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.UserPropertyValue&gt; user_properties = 3;</code>
   */

  /* nullable */
com.google.events.firebase.analytics.v1.UserPropertyValue getUserPropertiesOrDefault(
      java.lang.String key,
      /* nullable */
com.google.events.firebase.analytics.v1.UserPropertyValue defaultValue);
  /**
   * <pre>
   * A repeated record of user properties set with the setUserProperty API.
   * https://firebase.google.com/docs/analytics/android/properties
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.UserPropertyValue&gt; user_properties = 3;</code>
   */

  com.google.events.firebase.analytics.v1.UserPropertyValue getUserPropertiesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Device information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.DeviceInfo device_info = 4;</code>
   * @return Whether the deviceInfo field is set.
   */
  boolean hasDeviceInfo();
  /**
   * <pre>
   * Device information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.DeviceInfo device_info = 4;</code>
   * @return The deviceInfo.
   */
  com.google.events.firebase.analytics.v1.DeviceInfo getDeviceInfo();
  /**
   * <pre>
   * Device information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.DeviceInfo device_info = 4;</code>
   */
  com.google.events.firebase.analytics.v1.DeviceInfoOrBuilder getDeviceInfoOrBuilder();

  /**
   * <pre>
   * User's geographic information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.GeoInfo geo_info = 5;</code>
   * @return Whether the geoInfo field is set.
   */
  boolean hasGeoInfo();
  /**
   * <pre>
   * User's geographic information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.GeoInfo geo_info = 5;</code>
   * @return The geoInfo.
   */
  com.google.events.firebase.analytics.v1.GeoInfo getGeoInfo();
  /**
   * <pre>
   * User's geographic information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.GeoInfo geo_info = 5;</code>
   */
  com.google.events.firebase.analytics.v1.GeoInfoOrBuilder getGeoInfoOrBuilder();

  /**
   * <pre>
   * App information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.AppInfo app_info = 6;</code>
   * @return Whether the appInfo field is set.
   */
  boolean hasAppInfo();
  /**
   * <pre>
   * App information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.AppInfo app_info = 6;</code>
   * @return The appInfo.
   */
  com.google.events.firebase.analytics.v1.AppInfo getAppInfo();
  /**
   * <pre>
   * App information.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.AppInfo app_info = 6;</code>
   */
  com.google.events.firebase.analytics.v1.AppInfoOrBuilder getAppInfoOrBuilder();

  /**
   * <pre>
   * Information about marketing campaign which acquired the user.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.TrafficSource traffic_source = 7;</code>
   * @return Whether the trafficSource field is set.
   */
  boolean hasTrafficSource();
  /**
   * <pre>
   * Information about marketing campaign which acquired the user.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.TrafficSource traffic_source = 7;</code>
   * @return The trafficSource.
   */
  com.google.events.firebase.analytics.v1.TrafficSource getTrafficSource();
  /**
   * <pre>
   * Information about marketing campaign which acquired the user.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.TrafficSource traffic_source = 7;</code>
   */
  com.google.events.firebase.analytics.v1.TrafficSourceOrBuilder getTrafficSourceOrBuilder();

  /**
   * <pre>
   * Information regarding the bundle in which these events were uploaded.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.ExportBundleInfo bundle_info = 8;</code>
   * @return Whether the bundleInfo field is set.
   */
  boolean hasBundleInfo();
  /**
   * <pre>
   * Information regarding the bundle in which these events were uploaded.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.ExportBundleInfo bundle_info = 8;</code>
   * @return The bundleInfo.
   */
  com.google.events.firebase.analytics.v1.ExportBundleInfo getBundleInfo();
  /**
   * <pre>
   * Information regarding the bundle in which these events were uploaded.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.ExportBundleInfo bundle_info = 8;</code>
   */
  com.google.events.firebase.analytics.v1.ExportBundleInfoOrBuilder getBundleInfoOrBuilder();

  /**
   * <pre>
   * Lifetime Value information about this user.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.LtvInfo ltv_info = 9;</code>
   * @return Whether the ltvInfo field is set.
   */
  boolean hasLtvInfo();
  /**
   * <pre>
   * Lifetime Value information about this user.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.LtvInfo ltv_info = 9;</code>
   * @return The ltvInfo.
   */
  com.google.events.firebase.analytics.v1.LtvInfo getLtvInfo();
  /**
   * <pre>
   * Lifetime Value information about this user.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.LtvInfo ltv_info = 9;</code>
   */
  com.google.events.firebase.analytics.v1.LtvInfoOrBuilder getLtvInfoOrBuilder();
}
