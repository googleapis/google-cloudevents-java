/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/dataconnect/v1/data.proto

package com.google.events.firebase.dataconnect.v1;

/**
 *
 *
 * <pre>
 * GraphqlErrorExtensions contains additional information of `GraphqlError`.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.dataconnect.v1.GraphqlErrorExtensions}
 */
public final class GraphqlErrorExtensions extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.dataconnect.v1.GraphqlErrorExtensions)
    GraphqlErrorExtensionsOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use GraphqlErrorExtensions.newBuilder() to construct.
  private GraphqlErrorExtensions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GraphqlErrorExtensions() {
    file_ = "";
    code_ = 0;
    debugDetails_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GraphqlErrorExtensions();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.events.firebase.dataconnect.v1.Data
        .internal_static_google_events_firebase_dataconnect_v1_GraphqlErrorExtensions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.events.firebase.dataconnect.v1.Data
        .internal_static_google_events_firebase_dataconnect_v1_GraphqlErrorExtensions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions.class,
            com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions.Builder.class);
  }

  public static final int FILE_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object file_ = "";

  /**
   *
   *
   * <pre>
   * The source file name where the error occurred.
   * Included only for `UpdateSchema` and `UpdateConnector`, it corresponds
   * to `File.path` of the provided `Source`.
   * </pre>
   *
   * <code>string file = 1;</code>
   *
   * @return The file.
   */
  @java.lang.Override
  public java.lang.String getFile() {
    java.lang.Object ref = file_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      file_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * The source file name where the error occurred.
   * Included only for `UpdateSchema` and `UpdateConnector`, it corresponds
   * to `File.path` of the provided `Source`.
   * </pre>
   *
   * <code>string file = 1;</code>
   *
   * @return The bytes for file.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getFileBytes() {
    java.lang.Object ref = file_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      file_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CODE_FIELD_NUMBER = 2;
  private int code_ = 0;

  /**
   *
   *
   * <pre>
   * Maps to canonical gRPC codes.
   * If not specified, it represents `Code.INTERNAL`.
   * </pre>
   *
   * <code>.google.rpc.Code code = 2;</code>
   *
   * @return The enum numeric value on the wire for code.
   */
  @java.lang.Override
  public int getCodeValue() {
    return code_;
  }

  /**
   *
   *
   * <pre>
   * Maps to canonical gRPC codes.
   * If not specified, it represents `Code.INTERNAL`.
   * </pre>
   *
   * <code>.google.rpc.Code code = 2;</code>
   *
   * @return The code.
   */
  @java.lang.Override
  public com.google.rpc.Code getCode() {
    com.google.rpc.Code result = com.google.rpc.Code.forNumber(code_);
    return result == null ? com.google.rpc.Code.UNRECOGNIZED : result;
  }

  public static final int DEBUG_DETAILS_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object debugDetails_ = "";

  /**
   *
   *
   * <pre>
   * More detailed error message to assist debugging.
   * It contains application business logic that are inappropriate to leak
   * publicly.
   * In the emulator, Data Connect API always includes it to assist local
   * development and debugging.
   * In the backend, ConnectorService always hides it.
   * GraphqlService without impersonation always include it.
   * GraphqlService with impersonation includes it only if explicitly opted-in
   * with `include_debug_details` in `GraphqlRequestExtensions`.
   * </pre>
   *
   * <code>string debug_details = 3;</code>
   *
   * @return The debugDetails.
   */
  @java.lang.Override
  public java.lang.String getDebugDetails() {
    java.lang.Object ref = debugDetails_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      debugDetails_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * More detailed error message to assist debugging.
   * It contains application business logic that are inappropriate to leak
   * publicly.
   * In the emulator, Data Connect API always includes it to assist local
   * development and debugging.
   * In the backend, ConnectorService always hides it.
   * GraphqlService without impersonation always include it.
   * GraphqlService with impersonation includes it only if explicitly opted-in
   * with `include_debug_details` in `GraphqlRequestExtensions`.
   * </pre>
   *
   * <code>string debug_details = 3;</code>
   *
   * @return The bytes for debugDetails.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDebugDetailsBytes() {
    java.lang.Object ref = debugDetails_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      debugDetails_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(file_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, file_);
    }
    if (code_ != com.google.rpc.Code.OK.getNumber()) {
      output.writeEnum(2, code_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(debugDetails_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, debugDetails_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(file_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, file_);
    }
    if (code_ != com.google.rpc.Code.OK.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, code_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(debugDetails_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, debugDetails_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions)) {
      return super.equals(obj);
    }
    com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions other =
        (com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions) obj;

    if (!getFile().equals(other.getFile())) return false;
    if (code_ != other.code_) return false;
    if (!getDebugDetails().equals(other.getDebugDetails())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FILE_FIELD_NUMBER;
    hash = (53 * hash) + getFile().hashCode();
    hash = (37 * hash) + CODE_FIELD_NUMBER;
    hash = (53 * hash) + code_;
    hash = (37 * hash) + DEBUG_DETAILS_FIELD_NUMBER;
    hash = (53 * hash) + getDebugDetails().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * GraphqlErrorExtensions contains additional information of `GraphqlError`.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.dataconnect.v1.GraphqlErrorExtensions}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.dataconnect.v1.GraphqlErrorExtensions)
      com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.events.firebase.dataconnect.v1.Data
          .internal_static_google_events_firebase_dataconnect_v1_GraphqlErrorExtensions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.firebase.dataconnect.v1.Data
          .internal_static_google_events_firebase_dataconnect_v1_GraphqlErrorExtensions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions.class,
              com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions.Builder.class);
    }

    // Construct using com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      file_ = "";
      code_ = 0;
      debugDetails_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.events.firebase.dataconnect.v1.Data
          .internal_static_google_events_firebase_dataconnect_v1_GraphqlErrorExtensions_descriptor;
    }

    @java.lang.Override
    public com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions
        getDefaultInstanceForType() {
      return com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions build() {
      com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions buildPartial() {
      com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions result =
          new com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.file_ = file_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.code_ = code_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.debugDetails_ = debugDetails_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions) {
        return mergeFrom((com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions other) {
      if (other
          == com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions.getDefaultInstance())
        return this;
      if (!other.getFile().isEmpty()) {
        file_ = other.file_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.code_ != 0) {
        setCodeValue(other.getCodeValue());
      }
      if (!other.getDebugDetails().isEmpty()) {
        debugDetails_ = other.debugDetails_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                file_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                code_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 26:
              {
                debugDetails_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object file_ = "";

    /**
     *
     *
     * <pre>
     * The source file name where the error occurred.
     * Included only for `UpdateSchema` and `UpdateConnector`, it corresponds
     * to `File.path` of the provided `Source`.
     * </pre>
     *
     * <code>string file = 1;</code>
     *
     * @return The file.
     */
    public java.lang.String getFile() {
      java.lang.Object ref = file_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        file_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * The source file name where the error occurred.
     * Included only for `UpdateSchema` and `UpdateConnector`, it corresponds
     * to `File.path` of the provided `Source`.
     * </pre>
     *
     * <code>string file = 1;</code>
     *
     * @return The bytes for file.
     */
    public com.google.protobuf.ByteString getFileBytes() {
      java.lang.Object ref = file_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        file_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * The source file name where the error occurred.
     * Included only for `UpdateSchema` and `UpdateConnector`, it corresponds
     * to `File.path` of the provided `Source`.
     * </pre>
     *
     * <code>string file = 1;</code>
     *
     * @param value The file to set.
     * @return This builder for chaining.
     */
    public Builder setFile(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      file_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The source file name where the error occurred.
     * Included only for `UpdateSchema` and `UpdateConnector`, it corresponds
     * to `File.path` of the provided `Source`.
     * </pre>
     *
     * <code>string file = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFile() {
      file_ = getDefaultInstance().getFile();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The source file name where the error occurred.
     * Included only for `UpdateSchema` and `UpdateConnector`, it corresponds
     * to `File.path` of the provided `Source`.
     * </pre>
     *
     * <code>string file = 1;</code>
     *
     * @param value The bytes for file to set.
     * @return This builder for chaining.
     */
    public Builder setFileBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      file_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int code_ = 0;

    /**
     *
     *
     * <pre>
     * Maps to canonical gRPC codes.
     * If not specified, it represents `Code.INTERNAL`.
     * </pre>
     *
     * <code>.google.rpc.Code code = 2;</code>
     *
     * @return The enum numeric value on the wire for code.
     */
    @java.lang.Override
    public int getCodeValue() {
      return code_;
    }

    /**
     *
     *
     * <pre>
     * Maps to canonical gRPC codes.
     * If not specified, it represents `Code.INTERNAL`.
     * </pre>
     *
     * <code>.google.rpc.Code code = 2;</code>
     *
     * @param value The enum numeric value on the wire for code to set.
     * @return This builder for chaining.
     */
    public Builder setCodeValue(int value) {
      code_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Maps to canonical gRPC codes.
     * If not specified, it represents `Code.INTERNAL`.
     * </pre>
     *
     * <code>.google.rpc.Code code = 2;</code>
     *
     * @return The code.
     */
    @java.lang.Override
    public com.google.rpc.Code getCode() {
      com.google.rpc.Code result = com.google.rpc.Code.forNumber(code_);
      return result == null ? com.google.rpc.Code.UNRECOGNIZED : result;
    }

    /**
     *
     *
     * <pre>
     * Maps to canonical gRPC codes.
     * If not specified, it represents `Code.INTERNAL`.
     * </pre>
     *
     * <code>.google.rpc.Code code = 2;</code>
     *
     * @param value The code to set.
     * @return This builder for chaining.
     */
    public Builder setCode(com.google.rpc.Code value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      code_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Maps to canonical gRPC codes.
     * If not specified, it represents `Code.INTERNAL`.
     * </pre>
     *
     * <code>.google.rpc.Code code = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      code_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object debugDetails_ = "";

    /**
     *
     *
     * <pre>
     * More detailed error message to assist debugging.
     * It contains application business logic that are inappropriate to leak
     * publicly.
     * In the emulator, Data Connect API always includes it to assist local
     * development and debugging.
     * In the backend, ConnectorService always hides it.
     * GraphqlService without impersonation always include it.
     * GraphqlService with impersonation includes it only if explicitly opted-in
     * with `include_debug_details` in `GraphqlRequestExtensions`.
     * </pre>
     *
     * <code>string debug_details = 3;</code>
     *
     * @return The debugDetails.
     */
    public java.lang.String getDebugDetails() {
      java.lang.Object ref = debugDetails_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        debugDetails_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * More detailed error message to assist debugging.
     * It contains application business logic that are inappropriate to leak
     * publicly.
     * In the emulator, Data Connect API always includes it to assist local
     * development and debugging.
     * In the backend, ConnectorService always hides it.
     * GraphqlService without impersonation always include it.
     * GraphqlService with impersonation includes it only if explicitly opted-in
     * with `include_debug_details` in `GraphqlRequestExtensions`.
     * </pre>
     *
     * <code>string debug_details = 3;</code>
     *
     * @return The bytes for debugDetails.
     */
    public com.google.protobuf.ByteString getDebugDetailsBytes() {
      java.lang.Object ref = debugDetails_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        debugDetails_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * More detailed error message to assist debugging.
     * It contains application business logic that are inappropriate to leak
     * publicly.
     * In the emulator, Data Connect API always includes it to assist local
     * development and debugging.
     * In the backend, ConnectorService always hides it.
     * GraphqlService without impersonation always include it.
     * GraphqlService with impersonation includes it only if explicitly opted-in
     * with `include_debug_details` in `GraphqlRequestExtensions`.
     * </pre>
     *
     * <code>string debug_details = 3;</code>
     *
     * @param value The debugDetails to set.
     * @return This builder for chaining.
     */
    public Builder setDebugDetails(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      debugDetails_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * More detailed error message to assist debugging.
     * It contains application business logic that are inappropriate to leak
     * publicly.
     * In the emulator, Data Connect API always includes it to assist local
     * development and debugging.
     * In the backend, ConnectorService always hides it.
     * GraphqlService without impersonation always include it.
     * GraphqlService with impersonation includes it only if explicitly opted-in
     * with `include_debug_details` in `GraphqlRequestExtensions`.
     * </pre>
     *
     * <code>string debug_details = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDebugDetails() {
      debugDetails_ = getDefaultInstance().getDebugDetails();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * More detailed error message to assist debugging.
     * It contains application business logic that are inappropriate to leak
     * publicly.
     * In the emulator, Data Connect API always includes it to assist local
     * development and debugging.
     * In the backend, ConnectorService always hides it.
     * GraphqlService without impersonation always include it.
     * GraphqlService with impersonation includes it only if explicitly opted-in
     * with `include_debug_details` in `GraphqlRequestExtensions`.
     * </pre>
     *
     * <code>string debug_details = 3;</code>
     *
     * @param value The bytes for debugDetails to set.
     * @return This builder for chaining.
     */
    public Builder setDebugDetailsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      debugDetails_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.dataconnect.v1.GraphqlErrorExtensions)
  }

  // @@protoc_insertion_point(class_scope:google.events.firebase.dataconnect.v1.GraphqlErrorExtensions)
  private static final com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions();
  }

  public static com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GraphqlErrorExtensions> PARSER =
      new com.google.protobuf.AbstractParser<GraphqlErrorExtensions>() {
        @java.lang.Override
        public GraphqlErrorExtensions parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GraphqlErrorExtensions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GraphqlErrorExtensions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.events.firebase.dataconnect.v1.GraphqlErrorExtensions
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
