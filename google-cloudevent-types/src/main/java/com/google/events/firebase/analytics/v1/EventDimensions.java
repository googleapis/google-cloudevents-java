// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/analytics/v1/data.proto

package com.google.events.firebase.analytics.v1;

/**
 * <pre>
 * Message containing information pertaining to the event.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.analytics.v1.EventDimensions}
 */
public final class EventDimensions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.analytics.v1.EventDimensions)
    EventDimensionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EventDimensions.newBuilder() to construct.
  private EventDimensions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EventDimensions() {
    date_ = "";
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EventDimensions();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_EventDimensions_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetParams();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_EventDimensions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.events.firebase.analytics.v1.EventDimensions.class, com.google.events.firebase.analytics.v1.EventDimensions.Builder.class);
  }

  public static final int DATE_FIELD_NUMBER = 6;
  private volatile java.lang.Object date_;
  /**
   * <pre>
   * The date on which this event was logged.
   * (YYYYMMDD format in the registered timezone of your app.)
   * </pre>
   *
   * <code>string date = 6;</code>
   * @return The date.
   */
  @java.lang.Override
  public java.lang.String getDate() {
    java.lang.Object ref = date_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      date_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The date on which this event was logged.
   * (YYYYMMDD format in the registered timezone of your app.)
   * </pre>
   *
   * <code>string date = 6;</code>
   * @return The bytes for date.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDateBytes() {
    java.lang.Object ref = date_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      date_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * The name of this event.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of this event.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PARAMS_FIELD_NUMBER = 2;
  private static final class ParamsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue>newDefaultInstance(
                com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_EventDimensions_ParamsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.events.firebase.analytics.v1.AnalyticsValue.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> params_;
  private com.google.protobuf.MapField<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue>
  internalGetParams() {
    if (params_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ParamsDefaultEntryHolder.defaultEntry);
    }
    return params_;
  }

  public int getParamsCount() {
    return internalGetParams().getMap().size();
  }
  /**
   * <pre>
   * A repeated record of the parameters associated with this event.
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
   */

  @java.lang.Override
  public boolean containsParams(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetParams().getMap().containsKey(key);
  }
  /**
   * Use {@link #getParamsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> getParams() {
    return getParamsMap();
  }
  /**
   * <pre>
   * A repeated record of the parameters associated with this event.
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> getParamsMap() {
    return internalGetParams().getMap();
  }
  /**
   * <pre>
   * A repeated record of the parameters associated with this event.
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
   */
  @java.lang.Override

  public com.google.events.firebase.analytics.v1.AnalyticsValue getParamsOrDefault(
      java.lang.String key,
      com.google.events.firebase.analytics.v1.AnalyticsValue defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> map =
        internalGetParams().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A repeated record of the parameters associated with this event.
   * </pre>
   *
   * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
   */
  @java.lang.Override

  public com.google.events.firebase.analytics.v1.AnalyticsValue getParamsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> map =
        internalGetParams().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TIMESTAMP_MICROS_FIELD_NUMBER = 4;
  private long timestampMicros_;
  /**
   * <pre>
   * UTC client time when the event happened.
   * </pre>
   *
   * <code>int64 timestamp_micros = 4;</code>
   * @return The timestampMicros.
   */
  @java.lang.Override
  public long getTimestampMicros() {
    return timestampMicros_;
  }

  public static final int PREVIOUS_TIMESTAMP_MICROS_FIELD_NUMBER = 5;
  private long previousTimestampMicros_;
  /**
   * <pre>
   * UTC client time when the previous event happened.
   * </pre>
   *
   * <code>int64 previous_timestamp_micros = 5;</code>
   * @return The previousTimestampMicros.
   */
  @java.lang.Override
  public long getPreviousTimestampMicros() {
    return previousTimestampMicros_;
  }

  public static final int VALUE_IN_USD_FIELD_NUMBER = 7;
  private double valueInUsd_;
  /**
   * <pre>
   * Value param in USD.
   * </pre>
   *
   * <code>double value_in_usd = 7;</code>
   * @return The valueInUsd.
   */
  @java.lang.Override
  public double getValueInUsd() {
    return valueInUsd_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetParams(),
        ParamsDefaultEntryHolder.defaultEntry,
        2);
    if (timestampMicros_ != 0L) {
      output.writeInt64(4, timestampMicros_);
    }
    if (previousTimestampMicros_ != 0L) {
      output.writeInt64(5, previousTimestampMicros_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(date_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, date_);
    }
    if (java.lang.Double.doubleToRawLongBits(valueInUsd_) != 0) {
      output.writeDouble(7, valueInUsd_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> entry
         : internalGetParams().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue>
      params__ = ParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, params__);
    }
    if (timestampMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, timestampMicros_);
    }
    if (previousTimestampMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, previousTimestampMicros_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(date_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, date_);
    }
    if (java.lang.Double.doubleToRawLongBits(valueInUsd_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, valueInUsd_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.events.firebase.analytics.v1.EventDimensions)) {
      return super.equals(obj);
    }
    com.google.events.firebase.analytics.v1.EventDimensions other = (com.google.events.firebase.analytics.v1.EventDimensions) obj;

    if (!getDate()
        .equals(other.getDate())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!internalGetParams().equals(
        other.internalGetParams())) return false;
    if (getTimestampMicros()
        != other.getTimestampMicros()) return false;
    if (getPreviousTimestampMicros()
        != other.getPreviousTimestampMicros()) return false;
    if (java.lang.Double.doubleToLongBits(getValueInUsd())
        != java.lang.Double.doubleToLongBits(
            other.getValueInUsd())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DATE_FIELD_NUMBER;
    hash = (53 * hash) + getDate().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (!internalGetParams().getMap().isEmpty()) {
      hash = (37 * hash) + PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetParams().hashCode();
    }
    hash = (37 * hash) + TIMESTAMP_MICROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestampMicros());
    hash = (37 * hash) + PREVIOUS_TIMESTAMP_MICROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPreviousTimestampMicros());
    hash = (37 * hash) + VALUE_IN_USD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getValueInUsd()));
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.events.firebase.analytics.v1.EventDimensions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.events.firebase.analytics.v1.EventDimensions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Message containing information pertaining to the event.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.analytics.v1.EventDimensions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.analytics.v1.EventDimensions)
      com.google.events.firebase.analytics.v1.EventDimensionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_EventDimensions_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetParams();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableParams();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_EventDimensions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.firebase.analytics.v1.EventDimensions.class, com.google.events.firebase.analytics.v1.EventDimensions.Builder.class);
    }

    // Construct using com.google.events.firebase.analytics.v1.EventDimensions.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      date_ = "";

      name_ = "";

      internalGetMutableParams().clear();
      timestampMicros_ = 0L;

      previousTimestampMicros_ = 0L;

      valueInUsd_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_EventDimensions_descriptor;
    }

    @java.lang.Override
    public com.google.events.firebase.analytics.v1.EventDimensions getDefaultInstanceForType() {
      return com.google.events.firebase.analytics.v1.EventDimensions.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.events.firebase.analytics.v1.EventDimensions build() {
      com.google.events.firebase.analytics.v1.EventDimensions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.events.firebase.analytics.v1.EventDimensions buildPartial() {
      com.google.events.firebase.analytics.v1.EventDimensions result = new com.google.events.firebase.analytics.v1.EventDimensions(this);
      int from_bitField0_ = bitField0_;
      result.date_ = date_;
      result.name_ = name_;
      result.params_ = internalGetParams();
      result.params_.makeImmutable();
      result.timestampMicros_ = timestampMicros_;
      result.previousTimestampMicros_ = previousTimestampMicros_;
      result.valueInUsd_ = valueInUsd_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.events.firebase.analytics.v1.EventDimensions) {
        return mergeFrom((com.google.events.firebase.analytics.v1.EventDimensions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.events.firebase.analytics.v1.EventDimensions other) {
      if (other == com.google.events.firebase.analytics.v1.EventDimensions.getDefaultInstance()) return this;
      if (!other.getDate().isEmpty()) {
        date_ = other.date_;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      internalGetMutableParams().mergeFrom(
          other.internalGetParams());
      if (other.getTimestampMicros() != 0L) {
        setTimestampMicros(other.getTimestampMicros());
      }
      if (other.getPreviousTimestampMicros() != 0L) {
        setPreviousTimestampMicros(other.getPreviousTimestampMicros());
      }
      if (other.getValueInUsd() != 0D) {
        setValueInUsd(other.getValueInUsd());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 18: {
              com.google.protobuf.MapEntry<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue>
              params__ = input.readMessage(
                  ParamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableParams().getMutableMap().put(
                  params__.getKey(), params__.getValue());
              break;
            } // case 18
            case 32: {
              timestampMicros_ = input.readInt64();

              break;
            } // case 32
            case 40: {
              previousTimestampMicros_ = input.readInt64();

              break;
            } // case 40
            case 50: {
              date_ = input.readStringRequireUtf8();

              break;
            } // case 50
            case 57: {
              valueInUsd_ = input.readDouble();

              break;
            } // case 57
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object date_ = "";
    /**
     * <pre>
     * The date on which this event was logged.
     * (YYYYMMDD format in the registered timezone of your app.)
     * </pre>
     *
     * <code>string date = 6;</code>
     * @return The date.
     */
    public java.lang.String getDate() {
      java.lang.Object ref = date_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        date_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The date on which this event was logged.
     * (YYYYMMDD format in the registered timezone of your app.)
     * </pre>
     *
     * <code>string date = 6;</code>
     * @return The bytes for date.
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      java.lang.Object ref = date_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The date on which this event was logged.
     * (YYYYMMDD format in the registered timezone of your app.)
     * </pre>
     *
     * <code>string date = 6;</code>
     * @param value The date to set.
     * @return This builder for chaining.
     */
    public Builder setDate(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      date_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The date on which this event was logged.
     * (YYYYMMDD format in the registered timezone of your app.)
     * </pre>
     *
     * <code>string date = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDate() {
      
      date_ = getDefaultInstance().getDate();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The date on which this event was logged.
     * (YYYYMMDD format in the registered timezone of your app.)
     * </pre>
     *
     * <code>string date = 6;</code>
     * @param value The bytes for date to set.
     * @return This builder for chaining.
     */
    public Builder setDateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      date_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of this event.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of this event.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of this event.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of this event.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of this event.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> params_;
    private com.google.protobuf.MapField<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue>
    internalGetParams() {
      if (params_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParamsDefaultEntryHolder.defaultEntry);
      }
      return params_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue>
    internalGetMutableParams() {
      onChanged();;
      if (params_ == null) {
        params_ = com.google.protobuf.MapField.newMapField(
            ParamsDefaultEntryHolder.defaultEntry);
      }
      if (!params_.isMutable()) {
        params_ = params_.copy();
      }
      return params_;
    }

    public int getParamsCount() {
      return internalGetParams().getMap().size();
    }
    /**
     * <pre>
     * A repeated record of the parameters associated with this event.
     * </pre>
     *
     * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
     */

    @java.lang.Override
    public boolean containsParams(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetParams().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> getParams() {
      return getParamsMap();
    }
    /**
     * <pre>
     * A repeated record of the parameters associated with this event.
     * </pre>
     *
     * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> getParamsMap() {
      return internalGetParams().getMap();
    }
    /**
     * <pre>
     * A repeated record of the parameters associated with this event.
     * </pre>
     *
     * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
     */
    @java.lang.Override

    public com.google.events.firebase.analytics.v1.AnalyticsValue getParamsOrDefault(
        java.lang.String key,
        com.google.events.firebase.analytics.v1.AnalyticsValue defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> map =
          internalGetParams().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A repeated record of the parameters associated with this event.
     * </pre>
     *
     * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
     */
    @java.lang.Override

    public com.google.events.firebase.analytics.v1.AnalyticsValue getParamsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> map =
          internalGetParams().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearParams() {
      internalGetMutableParams().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A repeated record of the parameters associated with this event.
     * </pre>
     *
     * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
     */

    public Builder removeParams(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableParams().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue>
    getMutableParams() {
      return internalGetMutableParams().getMutableMap();
    }
    /**
     * <pre>
     * A repeated record of the parameters associated with this event.
     * </pre>
     *
     * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
     */
    public Builder putParams(
        java.lang.String key,
        com.google.events.firebase.analytics.v1.AnalyticsValue value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableParams().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * A repeated record of the parameters associated with this event.
     * </pre>
     *
     * <code>map&lt;string, .google.events.firebase.analytics.v1.AnalyticsValue&gt; params = 2;</code>
     */

    public Builder putAllParams(
        java.util.Map<java.lang.String, com.google.events.firebase.analytics.v1.AnalyticsValue> values) {
      internalGetMutableParams().getMutableMap()
          .putAll(values);
      return this;
    }

    private long timestampMicros_ ;
    /**
     * <pre>
     * UTC client time when the event happened.
     * </pre>
     *
     * <code>int64 timestamp_micros = 4;</code>
     * @return The timestampMicros.
     */
    @java.lang.Override
    public long getTimestampMicros() {
      return timestampMicros_;
    }
    /**
     * <pre>
     * UTC client time when the event happened.
     * </pre>
     *
     * <code>int64 timestamp_micros = 4;</code>
     * @param value The timestampMicros to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampMicros(long value) {
      
      timestampMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UTC client time when the event happened.
     * </pre>
     *
     * <code>int64 timestamp_micros = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampMicros() {
      
      timestampMicros_ = 0L;
      onChanged();
      return this;
    }

    private long previousTimestampMicros_ ;
    /**
     * <pre>
     * UTC client time when the previous event happened.
     * </pre>
     *
     * <code>int64 previous_timestamp_micros = 5;</code>
     * @return The previousTimestampMicros.
     */
    @java.lang.Override
    public long getPreviousTimestampMicros() {
      return previousTimestampMicros_;
    }
    /**
     * <pre>
     * UTC client time when the previous event happened.
     * </pre>
     *
     * <code>int64 previous_timestamp_micros = 5;</code>
     * @param value The previousTimestampMicros to set.
     * @return This builder for chaining.
     */
    public Builder setPreviousTimestampMicros(long value) {
      
      previousTimestampMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UTC client time when the previous event happened.
     * </pre>
     *
     * <code>int64 previous_timestamp_micros = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreviousTimestampMicros() {
      
      previousTimestampMicros_ = 0L;
      onChanged();
      return this;
    }

    private double valueInUsd_ ;
    /**
     * <pre>
     * Value param in USD.
     * </pre>
     *
     * <code>double value_in_usd = 7;</code>
     * @return The valueInUsd.
     */
    @java.lang.Override
    public double getValueInUsd() {
      return valueInUsd_;
    }
    /**
     * <pre>
     * Value param in USD.
     * </pre>
     *
     * <code>double value_in_usd = 7;</code>
     * @param value The valueInUsd to set.
     * @return This builder for chaining.
     */
    public Builder setValueInUsd(double value) {
      
      valueInUsd_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Value param in USD.
     * </pre>
     *
     * <code>double value_in_usd = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearValueInUsd() {
      
      valueInUsd_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.events.firebase.analytics.v1.EventDimensions)
  }

  // @@protoc_insertion_point(class_scope:google.events.firebase.analytics.v1.EventDimensions)
  private static final com.google.events.firebase.analytics.v1.EventDimensions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.events.firebase.analytics.v1.EventDimensions();
  }

  public static com.google.events.firebase.analytics.v1.EventDimensions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EventDimensions>
      PARSER = new com.google.protobuf.AbstractParser<EventDimensions>() {
    @java.lang.Override
    public EventDimensions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EventDimensions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EventDimensions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.events.firebase.analytics.v1.EventDimensions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

