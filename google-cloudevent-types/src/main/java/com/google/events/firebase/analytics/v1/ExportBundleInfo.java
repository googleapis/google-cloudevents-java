// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/analytics/v1/data.proto

package com.google.events.firebase.analytics.v1;

/**
 * <pre>
 * Message containing information regarding the bundle in which these
 * events were uploaded.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.analytics.v1.ExportBundleInfo}
 */
public final class ExportBundleInfo extends com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.events.firebase.analytics.v1.ExportBundleInfo)
        ExportBundleInfoOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use ExportBundleInfo.newBuilder() to construct.
    private ExportBundleInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private ExportBundleInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({ "unused" })
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new ExportBundleInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_ExportBundleInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_ExportBundleInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(com.google.events.firebase.analytics.v1.ExportBundleInfo.class,
                        com.google.events.firebase.analytics.v1.ExportBundleInfo.Builder.class);
    }

    public static final int BUNDLE_SEQUENCE_ID_FIELD_NUMBER = 1;
    private int bundleSequenceId_;

    /**
     * <pre>
     * Monotonically increasing index for each bundle set by SDK.
     * </pre>
     *
     * <code>int32 bundle_sequence_id = 1;</code>
     *
     * @return The bundleSequenceId.
     */
    @java.lang.Override
    public int getBundleSequenceId() {
        return bundleSequenceId_;
    }

    public static final int SERVER_TIMESTAMP_OFFSET_MICROS_FIELD_NUMBER = 2;
    private long serverTimestampOffsetMicros_;

    /**
     * <pre>
     * Timestamp offset between collection time and upload time.
     * </pre>
     *
     * <code>int64 server_timestamp_offset_micros = 2;</code>
     *
     * @return The serverTimestampOffsetMicros.
     */
    @java.lang.Override
    public long getServerTimestampOffsetMicros() {
        return serverTimestampOffsetMicros_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1)
            return true;
        if (isInitialized == 0)
            return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (bundleSequenceId_ != 0) {
            output.writeInt32(1, bundleSequenceId_);
        }
        if (serverTimestampOffsetMicros_ != 0L) {
            output.writeInt64(2, serverTimestampOffsetMicros_);
        }
        getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1)
            return size;

        size = 0;
        if (bundleSequenceId_ != 0) {
            size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, bundleSequenceId_);
        }
        if (serverTimestampOffsetMicros_ != 0L) {
            size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, serverTimestampOffsetMicros_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof com.google.events.firebase.analytics.v1.ExportBundleInfo)) {
            return super.equals(obj);
        }
        com.google.events.firebase.analytics.v1.ExportBundleInfo other = (com.google.events.firebase.analytics.v1.ExportBundleInfo) obj;

        if (getBundleSequenceId() != other.getBundleSequenceId())
            return false;
        if (getServerTimestampOffsetMicros() != other.getServerTimestampOffsetMicros())
            return false;
        if (!getUnknownFields().equals(other.getUnknownFields()))
            return false;
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + BUNDLE_SEQUENCE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getBundleSequenceId();
        hash = (37 * hash) + SERVER_TIMESTAMP_OFFSET_MICROS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getServerTimestampOffsetMicros());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
            com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
            com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseDelimitedFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
            com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
            com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.google.events.firebase.analytics.v1.ExportBundleInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * Message containing information regarding the bundle in which these
     * events were uploaded.
     * </pre>
     *
     * Protobuf type {@code google.events.firebase.analytics.v1.ExportBundleInfo}
     */
    public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:google.events.firebase.analytics.v1.ExportBundleInfo)
            com.google.events.firebase.analytics.v1.ExportBundleInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_ExportBundleInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_ExportBundleInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(com.google.events.firebase.analytics.v1.ExportBundleInfo.class,
                            com.google.events.firebase.analytics.v1.ExportBundleInfo.Builder.class);
        }

        // Construct using com.google.events.firebase.analytics.v1.ExportBundleInfo.newBuilder()
        private Builder() {

        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            bundleSequenceId_ = 0;

            serverTimestampOffsetMicros_ = 0L;

            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
            return com.google.events.firebase.analytics.v1.Data.internal_static_google_events_firebase_analytics_v1_ExportBundleInfo_descriptor;
        }

        @java.lang.Override
        public com.google.events.firebase.analytics.v1.ExportBundleInfo getDefaultInstanceForType() {
            return com.google.events.firebase.analytics.v1.ExportBundleInfo.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.events.firebase.analytics.v1.ExportBundleInfo build() {
            com.google.events.firebase.analytics.v1.ExportBundleInfo result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public com.google.events.firebase.analytics.v1.ExportBundleInfo buildPartial() {
            com.google.events.firebase.analytics.v1.ExportBundleInfo result = new com.google.events.firebase.analytics.v1.ExportBundleInfo(
                    this);
            result.bundleSequenceId_ = bundleSequenceId_;
            result.serverTimestampOffsetMicros_ = serverTimestampOffsetMicros_;
            onBuilt();
            return result;
        }

        @java.lang.Override
        public Builder clone() {
            return super.clone();
        }

        @java.lang.Override
        public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
                java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.google.events.firebase.analytics.v1.ExportBundleInfo) {
                return mergeFrom((com.google.events.firebase.analytics.v1.ExportBundleInfo) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(com.google.events.firebase.analytics.v1.ExportBundleInfo other) {
            if (other == com.google.events.firebase.analytics.v1.ExportBundleInfo.getDefaultInstance())
                return this;
            if (other.getBundleSequenceId() != 0) {
                setBundleSequenceId(other.getBundleSequenceId());
            }
            if (other.getServerTimestampOffsetMicros() != 0L) {
                setServerTimestampOffsetMicros(other.getServerTimestampOffsetMicros());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 8: {
                        bundleSequenceId_ = input.readInt32();

                        break;
                    } // case 8
                    case 16: {
                        serverTimestampOffsetMicros_ = input.readInt64();

                        break;
                    } // case 16
                    default: {
                        if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                            done = true; // was an endgroup tag
                        }
                        break;
                    } // default:
                    } // switch (tag)
                } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.unwrapIOException();
            } finally {
                onChanged();
            } // finally
            return this;
        }

        private int bundleSequenceId_;

        /**
         * <pre>
         * Monotonically increasing index for each bundle set by SDK.
         * </pre>
         *
         * <code>int32 bundle_sequence_id = 1;</code>
         *
         * @return The bundleSequenceId.
         */
        @java.lang.Override
        public int getBundleSequenceId() {
            return bundleSequenceId_;
        }

        /**
         * <pre>
         * Monotonically increasing index for each bundle set by SDK.
         * </pre>
         *
         * <code>int32 bundle_sequence_id = 1;</code>
         *
         * @param value
         *            The bundleSequenceId to set.
         *
         * @return This builder for chaining.
         */
        public Builder setBundleSequenceId(int value) {

            bundleSequenceId_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Monotonically increasing index for each bundle set by SDK.
         * </pre>
         *
         * <code>int32 bundle_sequence_id = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearBundleSequenceId() {

            bundleSequenceId_ = 0;
            onChanged();
            return this;
        }

        private long serverTimestampOffsetMicros_;

        /**
         * <pre>
         * Timestamp offset between collection time and upload time.
         * </pre>
         *
         * <code>int64 server_timestamp_offset_micros = 2;</code>
         *
         * @return The serverTimestampOffsetMicros.
         */
        @java.lang.Override
        public long getServerTimestampOffsetMicros() {
            return serverTimestampOffsetMicros_;
        }

        /**
         * <pre>
         * Timestamp offset between collection time and upload time.
         * </pre>
         *
         * <code>int64 server_timestamp_offset_micros = 2;</code>
         *
         * @param value
         *            The serverTimestampOffsetMicros to set.
         *
         * @return This builder for chaining.
         */
        public Builder setServerTimestampOffsetMicros(long value) {

            serverTimestampOffsetMicros_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Timestamp offset between collection time and upload time.
         * </pre>
         *
         * <code>int64 server_timestamp_offset_micros = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearServerTimestampOffsetMicros() {

            serverTimestampOffsetMicros_ = 0L;
            onChanged();
            return this;
        }

        @java.lang.Override
        public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.events.firebase.analytics.v1.ExportBundleInfo)
    }

    // @@protoc_insertion_point(class_scope:google.events.firebase.analytics.v1.ExportBundleInfo)
    private static final com.google.events.firebase.analytics.v1.ExportBundleInfo DEFAULT_INSTANCE;
    static {
        DEFAULT_INSTANCE = new com.google.events.firebase.analytics.v1.ExportBundleInfo();
    }

    public static com.google.events.firebase.analytics.v1.ExportBundleInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExportBundleInfo> PARSER = new com.google.protobuf.AbstractParser<ExportBundleInfo>() {
        @java.lang.Override
        public ExportBundleInfo parsePartialFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
                builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                        .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
        }
    };

    public static com.google.protobuf.Parser<ExportBundleInfo> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExportBundleInfo> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.events.firebase.analytics.v1.ExportBundleInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}
