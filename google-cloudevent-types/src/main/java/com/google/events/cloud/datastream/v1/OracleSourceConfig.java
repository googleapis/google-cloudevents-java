/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/datastream/v1/data.proto

package com.google.events.cloud.datastream.v1;

/**
 *
 *
 * <pre>
 * Oracle data source configuration
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.datastream.v1.OracleSourceConfig}
 */
public final class OracleSourceConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.datastream.v1.OracleSourceConfig)
    OracleSourceConfigOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use OracleSourceConfig.newBuilder() to construct.
  private OracleSourceConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private OracleSourceConfig() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new OracleSourceConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.events.cloud.datastream.v1.Data
        .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.events.cloud.datastream.v1.Data
        .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.events.cloud.datastream.v1.OracleSourceConfig.class,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.Builder.class);
  }

  public interface DropLargeObjectsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
      com.google.protobuf.MessageOrBuilder {}

  /**
   *
   *
   * <pre>
   * Configuration to drop large object values.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects}
   */
  public static final class DropLargeObjects extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
      DropLargeObjectsOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use DropLargeObjects.newBuilder() to construct.
    private DropLargeObjects(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private DropLargeObjects() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new DropLargeObjects();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.events.cloud.datastream.v1.Data
          .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_DropLargeObjects_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.cloud.datastream.v1.Data
          .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_DropLargeObjects_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.class,
              com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.Builder
                  .class);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)) {
        return super.equals(obj);
      }
      com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects other =
          (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * Configuration to drop large object values.
     * </pre>
     *
     * Protobuf type {@code google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
        com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjectsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.events.cloud.datastream.v1.Data
            .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_DropLargeObjects_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.events.cloud.datastream.v1.Data
            .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_DropLargeObjects_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.class,
                com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.Builder
                    .class);
      }

      // Construct using
      // com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.events.cloud.datastream.v1.Data
            .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_DropLargeObjects_descriptor;
      }

      @java.lang.Override
      public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
          getDefaultInstanceForType() {
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects build() {
        com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
          buildPartial() {
        com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects result =
            new com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects) {
          return mergeFrom(
              (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects other) {
        if (other
            == com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                .getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
    }

    // @@protoc_insertion_point(class_scope:google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
    private static final com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects();
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DropLargeObjects> PARSER =
        new com.google.protobuf.AbstractParser<DropLargeObjects>() {
          @java.lang.Override
          public DropLargeObjects parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<DropLargeObjects> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DropLargeObjects> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface StreamLargeObjectsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
      com.google.protobuf.MessageOrBuilder {}

  /**
   *
   *
   * <pre>
   * Configuration to stream large object values.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects}
   */
  public static final class StreamLargeObjects extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
      StreamLargeObjectsOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use StreamLargeObjects.newBuilder() to construct.
    private StreamLargeObjects(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private StreamLargeObjects() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new StreamLargeObjects();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.events.cloud.datastream.v1.Data
          .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_StreamLargeObjects_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.cloud.datastream.v1.Data
          .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_StreamLargeObjects_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.class,
              com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.Builder
                  .class);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)) {
        return super.equals(obj);
      }
      com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects other =
          (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * Configuration to stream large object values.
     * </pre>
     *
     * Protobuf type {@code google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
        com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjectsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.events.cloud.datastream.v1.Data
            .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_StreamLargeObjects_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.events.cloud.datastream.v1.Data
            .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_StreamLargeObjects_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.class,
                com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.Builder
                    .class);
      }

      // Construct using
      // com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.events.cloud.datastream.v1.Data
            .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_StreamLargeObjects_descriptor;
      }

      @java.lang.Override
      public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
          getDefaultInstanceForType() {
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects build() {
        com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
          buildPartial() {
        com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects result =
            new com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects) {
          return mergeFrom(
              (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects other) {
        if (other
            == com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                .getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
    }

    // @@protoc_insertion_point(class_scope:google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
    private static final com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects();
    }

    public static com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StreamLargeObjects> PARSER =
        new com.google.protobuf.AbstractParser<StreamLargeObjects>() {
          @java.lang.Override
          public StreamLargeObjects parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<StreamLargeObjects> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StreamLargeObjects> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int largeObjectsHandlingCase_ = 0;
  private java.lang.Object largeObjectsHandling_;

  public enum LargeObjectsHandlingCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    DROP_LARGE_OBJECTS(100),
    STREAM_LARGE_OBJECTS(102),
    LARGEOBJECTSHANDLING_NOT_SET(0);
    private final int value;

    private LargeObjectsHandlingCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LargeObjectsHandlingCase valueOf(int value) {
      return forNumber(value);
    }

    public static LargeObjectsHandlingCase forNumber(int value) {
      switch (value) {
        case 100:
          return DROP_LARGE_OBJECTS;
        case 102:
          return STREAM_LARGE_OBJECTS;
        case 0:
          return LARGEOBJECTSHANDLING_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public LargeObjectsHandlingCase getLargeObjectsHandlingCase() {
    return LargeObjectsHandlingCase.forNumber(largeObjectsHandlingCase_);
  }

  public static final int INCLUDE_OBJECTS_FIELD_NUMBER = 1;
  private com.google.events.cloud.datastream.v1.OracleRdbms includeObjects_;

  /**
   *
   *
   * <pre>
   * Oracle objects to include in the stream.
   * </pre>
   *
   * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
   *
   * @return Whether the includeObjects field is set.
   */
  @java.lang.Override
  public boolean hasIncludeObjects() {
    return includeObjects_ != null;
  }

  /**
   *
   *
   * <pre>
   * Oracle objects to include in the stream.
   * </pre>
   *
   * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
   *
   * @return The includeObjects.
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleRdbms getIncludeObjects() {
    return includeObjects_ == null
        ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
        : includeObjects_;
  }

  /**
   *
   *
   * <pre>
   * Oracle objects to include in the stream.
   * </pre>
   *
   * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder getIncludeObjectsOrBuilder() {
    return includeObjects_ == null
        ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
        : includeObjects_;
  }

  public static final int EXCLUDE_OBJECTS_FIELD_NUMBER = 2;
  private com.google.events.cloud.datastream.v1.OracleRdbms excludeObjects_;

  /**
   *
   *
   * <pre>
   * Oracle objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
   *
   * @return Whether the excludeObjects field is set.
   */
  @java.lang.Override
  public boolean hasExcludeObjects() {
    return excludeObjects_ != null;
  }

  /**
   *
   *
   * <pre>
   * Oracle objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
   *
   * @return The excludeObjects.
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleRdbms getExcludeObjects() {
    return excludeObjects_ == null
        ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
        : excludeObjects_;
  }

  /**
   *
   *
   * <pre>
   * Oracle objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder getExcludeObjectsOrBuilder() {
    return excludeObjects_ == null
        ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
        : excludeObjects_;
  }

  public static final int MAX_CONCURRENT_CDC_TASKS_FIELD_NUMBER = 3;
  private int maxConcurrentCdcTasks_ = 0;

  /**
   *
   *
   * <pre>
   * Maximum number of concurrent CDC tasks. The number should be non negative.
   * If not set (or set to 0), the system's default value will be used.
   * </pre>
   *
   * <code>int32 max_concurrent_cdc_tasks = 3;</code>
   *
   * @return The maxConcurrentCdcTasks.
   */
  @java.lang.Override
  public int getMaxConcurrentCdcTasks() {
    return maxConcurrentCdcTasks_;
  }

  public static final int DROP_LARGE_OBJECTS_FIELD_NUMBER = 100;

  /**
   *
   *
   * <pre>
   * Drop large object values.
   * </pre>
   *
   * <code>
   * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
   * </code>
   *
   * @return Whether the dropLargeObjects field is set.
   */
  @java.lang.Override
  public boolean hasDropLargeObjects() {
    return largeObjectsHandlingCase_ == 100;
  }

  /**
   *
   *
   * <pre>
   * Drop large object values.
   * </pre>
   *
   * <code>
   * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
   * </code>
   *
   * @return The dropLargeObjects.
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
      getDropLargeObjects() {
    if (largeObjectsHandlingCase_ == 100) {
      return (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
          largeObjectsHandling_;
    }
    return com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        .getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Drop large object values.
   * </pre>
   *
   * <code>
   * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
   * </code>
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjectsOrBuilder
      getDropLargeObjectsOrBuilder() {
    if (largeObjectsHandlingCase_ == 100) {
      return (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
          largeObjectsHandling_;
    }
    return com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        .getDefaultInstance();
  }

  public static final int STREAM_LARGE_OBJECTS_FIELD_NUMBER = 102;

  /**
   *
   *
   * <pre>
   * Stream large object values. NOTE: This feature is currently experimental.
   * </pre>
   *
   * <code>
   * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
   * </code>
   *
   * @return Whether the streamLargeObjects field is set.
   */
  @java.lang.Override
  public boolean hasStreamLargeObjects() {
    return largeObjectsHandlingCase_ == 102;
  }

  /**
   *
   *
   * <pre>
   * Stream large object values. NOTE: This feature is currently experimental.
   * </pre>
   *
   * <code>
   * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
   * </code>
   *
   * @return The streamLargeObjects.
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
      getStreamLargeObjects() {
    if (largeObjectsHandlingCase_ == 102) {
      return (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
          largeObjectsHandling_;
    }
    return com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        .getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Stream large object values. NOTE: This feature is currently experimental.
   * </pre>
   *
   * <code>
   * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
   * </code>
   */
  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjectsOrBuilder
      getStreamLargeObjectsOrBuilder() {
    if (largeObjectsHandlingCase_ == 102) {
      return (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
          largeObjectsHandling_;
    }
    return com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        .getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (includeObjects_ != null) {
      output.writeMessage(1, getIncludeObjects());
    }
    if (excludeObjects_ != null) {
      output.writeMessage(2, getExcludeObjects());
    }
    if (maxConcurrentCdcTasks_ != 0) {
      output.writeInt32(3, maxConcurrentCdcTasks_);
    }
    if (largeObjectsHandlingCase_ == 100) {
      output.writeMessage(
          100,
          (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
              largeObjectsHandling_);
    }
    if (largeObjectsHandlingCase_ == 102) {
      output.writeMessage(
          102,
          (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
              largeObjectsHandling_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (includeObjects_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getIncludeObjects());
    }
    if (excludeObjects_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getExcludeObjects());
    }
    if (maxConcurrentCdcTasks_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, maxConcurrentCdcTasks_);
    }
    if (largeObjectsHandlingCase_ == 100) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              100,
              (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
                  largeObjectsHandling_);
    }
    if (largeObjectsHandlingCase_ == 102) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              102,
              (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
                  largeObjectsHandling_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.events.cloud.datastream.v1.OracleSourceConfig)) {
      return super.equals(obj);
    }
    com.google.events.cloud.datastream.v1.OracleSourceConfig other =
        (com.google.events.cloud.datastream.v1.OracleSourceConfig) obj;

    if (hasIncludeObjects() != other.hasIncludeObjects()) return false;
    if (hasIncludeObjects()) {
      if (!getIncludeObjects().equals(other.getIncludeObjects())) return false;
    }
    if (hasExcludeObjects() != other.hasExcludeObjects()) return false;
    if (hasExcludeObjects()) {
      if (!getExcludeObjects().equals(other.getExcludeObjects())) return false;
    }
    if (getMaxConcurrentCdcTasks() != other.getMaxConcurrentCdcTasks()) return false;
    if (!getLargeObjectsHandlingCase().equals(other.getLargeObjectsHandlingCase())) return false;
    switch (largeObjectsHandlingCase_) {
      case 100:
        if (!getDropLargeObjects().equals(other.getDropLargeObjects())) return false;
        break;
      case 102:
        if (!getStreamLargeObjects().equals(other.getStreamLargeObjects())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasIncludeObjects()) {
      hash = (37 * hash) + INCLUDE_OBJECTS_FIELD_NUMBER;
      hash = (53 * hash) + getIncludeObjects().hashCode();
    }
    if (hasExcludeObjects()) {
      hash = (37 * hash) + EXCLUDE_OBJECTS_FIELD_NUMBER;
      hash = (53 * hash) + getExcludeObjects().hashCode();
    }
    hash = (37 * hash) + MAX_CONCURRENT_CDC_TASKS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxConcurrentCdcTasks();
    switch (largeObjectsHandlingCase_) {
      case 100:
        hash = (37 * hash) + DROP_LARGE_OBJECTS_FIELD_NUMBER;
        hash = (53 * hash) + getDropLargeObjects().hashCode();
        break;
      case 102:
        hash = (37 * hash) + STREAM_LARGE_OBJECTS_FIELD_NUMBER;
        hash = (53 * hash) + getStreamLargeObjects().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.events.cloud.datastream.v1.OracleSourceConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Oracle data source configuration
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.datastream.v1.OracleSourceConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.datastream.v1.OracleSourceConfig)
      com.google.events.cloud.datastream.v1.OracleSourceConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.events.cloud.datastream.v1.Data
          .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.cloud.datastream.v1.Data
          .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.cloud.datastream.v1.OracleSourceConfig.class,
              com.google.events.cloud.datastream.v1.OracleSourceConfig.Builder.class);
    }

    // Construct using com.google.events.cloud.datastream.v1.OracleSourceConfig.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      includeObjects_ = null;
      if (includeObjectsBuilder_ != null) {
        includeObjectsBuilder_.dispose();
        includeObjectsBuilder_ = null;
      }
      excludeObjects_ = null;
      if (excludeObjectsBuilder_ != null) {
        excludeObjectsBuilder_.dispose();
        excludeObjectsBuilder_ = null;
      }
      maxConcurrentCdcTasks_ = 0;
      if (dropLargeObjectsBuilder_ != null) {
        dropLargeObjectsBuilder_.clear();
      }
      if (streamLargeObjectsBuilder_ != null) {
        streamLargeObjectsBuilder_.clear();
      }
      largeObjectsHandlingCase_ = 0;
      largeObjectsHandling_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.events.cloud.datastream.v1.Data
          .internal_static_google_events_cloud_datastream_v1_OracleSourceConfig_descriptor;
    }

    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig getDefaultInstanceForType() {
      return com.google.events.cloud.datastream.v1.OracleSourceConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig build() {
      com.google.events.cloud.datastream.v1.OracleSourceConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig buildPartial() {
      com.google.events.cloud.datastream.v1.OracleSourceConfig result =
          new com.google.events.cloud.datastream.v1.OracleSourceConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.events.cloud.datastream.v1.OracleSourceConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.includeObjects_ =
            includeObjectsBuilder_ == null ? includeObjects_ : includeObjectsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.excludeObjects_ =
            excludeObjectsBuilder_ == null ? excludeObjects_ : excludeObjectsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.maxConcurrentCdcTasks_ = maxConcurrentCdcTasks_;
      }
    }

    private void buildPartialOneofs(
        com.google.events.cloud.datastream.v1.OracleSourceConfig result) {
      result.largeObjectsHandlingCase_ = largeObjectsHandlingCase_;
      result.largeObjectsHandling_ = this.largeObjectsHandling_;
      if (largeObjectsHandlingCase_ == 100 && dropLargeObjectsBuilder_ != null) {
        result.largeObjectsHandling_ = dropLargeObjectsBuilder_.build();
      }
      if (largeObjectsHandlingCase_ == 102 && streamLargeObjectsBuilder_ != null) {
        result.largeObjectsHandling_ = streamLargeObjectsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.events.cloud.datastream.v1.OracleSourceConfig) {
        return mergeFrom((com.google.events.cloud.datastream.v1.OracleSourceConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.events.cloud.datastream.v1.OracleSourceConfig other) {
      if (other == com.google.events.cloud.datastream.v1.OracleSourceConfig.getDefaultInstance())
        return this;
      if (other.hasIncludeObjects()) {
        mergeIncludeObjects(other.getIncludeObjects());
      }
      if (other.hasExcludeObjects()) {
        mergeExcludeObjects(other.getExcludeObjects());
      }
      if (other.getMaxConcurrentCdcTasks() != 0) {
        setMaxConcurrentCdcTasks(other.getMaxConcurrentCdcTasks());
      }
      switch (other.getLargeObjectsHandlingCase()) {
        case DROP_LARGE_OBJECTS:
          {
            mergeDropLargeObjects(other.getDropLargeObjects());
            break;
          }
        case STREAM_LARGE_OBJECTS:
          {
            mergeStreamLargeObjects(other.getStreamLargeObjects());
            break;
          }
        case LARGEOBJECTSHANDLING_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getIncludeObjectsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getExcludeObjectsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 24:
              {
                maxConcurrentCdcTasks_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 802:
              {
                input.readMessage(
                    getDropLargeObjectsFieldBuilder().getBuilder(), extensionRegistry);
                largeObjectsHandlingCase_ = 100;
                break;
              } // case 802
            case 818:
              {
                input.readMessage(
                    getStreamLargeObjectsFieldBuilder().getBuilder(), extensionRegistry);
                largeObjectsHandlingCase_ = 102;
                break;
              } // case 818
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int largeObjectsHandlingCase_ = 0;
    private java.lang.Object largeObjectsHandling_;

    public LargeObjectsHandlingCase getLargeObjectsHandlingCase() {
      return LargeObjectsHandlingCase.forNumber(largeObjectsHandlingCase_);
    }

    public Builder clearLargeObjectsHandling() {
      largeObjectsHandlingCase_ = 0;
      largeObjectsHandling_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.events.cloud.datastream.v1.OracleRdbms includeObjects_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleRdbms,
            com.google.events.cloud.datastream.v1.OracleRdbms.Builder,
            com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder>
        includeObjectsBuilder_;

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     *
     * @return Whether the includeObjects field is set.
     */
    public boolean hasIncludeObjects() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     *
     * @return The includeObjects.
     */
    public com.google.events.cloud.datastream.v1.OracleRdbms getIncludeObjects() {
      if (includeObjectsBuilder_ == null) {
        return includeObjects_ == null
            ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
            : includeObjects_;
      } else {
        return includeObjectsBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     */
    public Builder setIncludeObjects(com.google.events.cloud.datastream.v1.OracleRdbms value) {
      if (includeObjectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        includeObjects_ = value;
      } else {
        includeObjectsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     */
    public Builder setIncludeObjects(
        com.google.events.cloud.datastream.v1.OracleRdbms.Builder builderForValue) {
      if (includeObjectsBuilder_ == null) {
        includeObjects_ = builderForValue.build();
      } else {
        includeObjectsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     */
    public Builder mergeIncludeObjects(com.google.events.cloud.datastream.v1.OracleRdbms value) {
      if (includeObjectsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && includeObjects_ != null
            && includeObjects_
                != com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()) {
          getIncludeObjectsBuilder().mergeFrom(value);
        } else {
          includeObjects_ = value;
        }
      } else {
        includeObjectsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     */
    public Builder clearIncludeObjects() {
      bitField0_ = (bitField0_ & ~0x00000001);
      includeObjects_ = null;
      if (includeObjectsBuilder_ != null) {
        includeObjectsBuilder_.dispose();
        includeObjectsBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     */
    public com.google.events.cloud.datastream.v1.OracleRdbms.Builder getIncludeObjectsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getIncludeObjectsFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     */
    public com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder getIncludeObjectsOrBuilder() {
      if (includeObjectsBuilder_ != null) {
        return includeObjectsBuilder_.getMessageOrBuilder();
      } else {
        return includeObjects_ == null
            ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
            : includeObjects_;
      }
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to include in the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms include_objects = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleRdbms,
            com.google.events.cloud.datastream.v1.OracleRdbms.Builder,
            com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder>
        getIncludeObjectsFieldBuilder() {
      if (includeObjectsBuilder_ == null) {
        includeObjectsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.datastream.v1.OracleRdbms,
                com.google.events.cloud.datastream.v1.OracleRdbms.Builder,
                com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder>(
                getIncludeObjects(), getParentForChildren(), isClean());
        includeObjects_ = null;
      }
      return includeObjectsBuilder_;
    }

    private com.google.events.cloud.datastream.v1.OracleRdbms excludeObjects_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleRdbms,
            com.google.events.cloud.datastream.v1.OracleRdbms.Builder,
            com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder>
        excludeObjectsBuilder_;

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     *
     * @return Whether the excludeObjects field is set.
     */
    public boolean hasExcludeObjects() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     *
     * @return The excludeObjects.
     */
    public com.google.events.cloud.datastream.v1.OracleRdbms getExcludeObjects() {
      if (excludeObjectsBuilder_ == null) {
        return excludeObjects_ == null
            ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
            : excludeObjects_;
      } else {
        return excludeObjectsBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     */
    public Builder setExcludeObjects(com.google.events.cloud.datastream.v1.OracleRdbms value) {
      if (excludeObjectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        excludeObjects_ = value;
      } else {
        excludeObjectsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     */
    public Builder setExcludeObjects(
        com.google.events.cloud.datastream.v1.OracleRdbms.Builder builderForValue) {
      if (excludeObjectsBuilder_ == null) {
        excludeObjects_ = builderForValue.build();
      } else {
        excludeObjectsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     */
    public Builder mergeExcludeObjects(com.google.events.cloud.datastream.v1.OracleRdbms value) {
      if (excludeObjectsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && excludeObjects_ != null
            && excludeObjects_
                != com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()) {
          getExcludeObjectsBuilder().mergeFrom(value);
        } else {
          excludeObjects_ = value;
        }
      } else {
        excludeObjectsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     */
    public Builder clearExcludeObjects() {
      bitField0_ = (bitField0_ & ~0x00000002);
      excludeObjects_ = null;
      if (excludeObjectsBuilder_ != null) {
        excludeObjectsBuilder_.dispose();
        excludeObjectsBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     */
    public com.google.events.cloud.datastream.v1.OracleRdbms.Builder getExcludeObjectsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getExcludeObjectsFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     */
    public com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder getExcludeObjectsOrBuilder() {
      if (excludeObjectsBuilder_ != null) {
        return excludeObjectsBuilder_.getMessageOrBuilder();
      } else {
        return excludeObjects_ == null
            ? com.google.events.cloud.datastream.v1.OracleRdbms.getDefaultInstance()
            : excludeObjects_;
      }
    }

    /**
     *
     *
     * <pre>
     * Oracle objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.events.cloud.datastream.v1.OracleRdbms exclude_objects = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleRdbms,
            com.google.events.cloud.datastream.v1.OracleRdbms.Builder,
            com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder>
        getExcludeObjectsFieldBuilder() {
      if (excludeObjectsBuilder_ == null) {
        excludeObjectsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.datastream.v1.OracleRdbms,
                com.google.events.cloud.datastream.v1.OracleRdbms.Builder,
                com.google.events.cloud.datastream.v1.OracleRdbmsOrBuilder>(
                getExcludeObjects(), getParentForChildren(), isClean());
        excludeObjects_ = null;
      }
      return excludeObjectsBuilder_;
    }

    private int maxConcurrentCdcTasks_;

    /**
     *
     *
     * <pre>
     * Maximum number of concurrent CDC tasks. The number should be non negative.
     * If not set (or set to 0), the system's default value will be used.
     * </pre>
     *
     * <code>int32 max_concurrent_cdc_tasks = 3;</code>
     *
     * @return The maxConcurrentCdcTasks.
     */
    @java.lang.Override
    public int getMaxConcurrentCdcTasks() {
      return maxConcurrentCdcTasks_;
    }

    /**
     *
     *
     * <pre>
     * Maximum number of concurrent CDC tasks. The number should be non negative.
     * If not set (or set to 0), the system's default value will be used.
     * </pre>
     *
     * <code>int32 max_concurrent_cdc_tasks = 3;</code>
     *
     * @param value The maxConcurrentCdcTasks to set.
     * @return This builder for chaining.
     */
    public Builder setMaxConcurrentCdcTasks(int value) {

      maxConcurrentCdcTasks_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Maximum number of concurrent CDC tasks. The number should be non negative.
     * If not set (or set to 0), the system's default value will be used.
     * </pre>
     *
     * <code>int32 max_concurrent_cdc_tasks = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxConcurrentCdcTasks() {
      bitField0_ = (bitField0_ & ~0x00000004);
      maxConcurrentCdcTasks_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.Builder,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjectsOrBuilder>
        dropLargeObjectsBuilder_;

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     *
     * @return Whether the dropLargeObjects field is set.
     */
    @java.lang.Override
    public boolean hasDropLargeObjects() {
      return largeObjectsHandlingCase_ == 100;
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     *
     * @return The dropLargeObjects.
     */
    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
        getDropLargeObjects() {
      if (dropLargeObjectsBuilder_ == null) {
        if (largeObjectsHandlingCase_ == 100) {
          return (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
              largeObjectsHandling_;
        }
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
            .getDefaultInstance();
      } else {
        if (largeObjectsHandlingCase_ == 100) {
          return dropLargeObjectsBuilder_.getMessage();
        }
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     */
    public Builder setDropLargeObjects(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects value) {
      if (dropLargeObjectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        largeObjectsHandling_ = value;
        onChanged();
      } else {
        dropLargeObjectsBuilder_.setMessage(value);
      }
      largeObjectsHandlingCase_ = 100;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     */
    public Builder setDropLargeObjects(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.Builder
            builderForValue) {
      if (dropLargeObjectsBuilder_ == null) {
        largeObjectsHandling_ = builderForValue.build();
        onChanged();
      } else {
        dropLargeObjectsBuilder_.setMessage(builderForValue.build());
      }
      largeObjectsHandlingCase_ = 100;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     */
    public Builder mergeDropLargeObjects(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects value) {
      if (dropLargeObjectsBuilder_ == null) {
        if (largeObjectsHandlingCase_ == 100
            && largeObjectsHandling_
                != com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                    .getDefaultInstance()) {
          largeObjectsHandling_ =
              com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.newBuilder(
                      (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
                          largeObjectsHandling_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          largeObjectsHandling_ = value;
        }
        onChanged();
      } else {
        if (largeObjectsHandlingCase_ == 100) {
          dropLargeObjectsBuilder_.mergeFrom(value);
        } else {
          dropLargeObjectsBuilder_.setMessage(value);
        }
      }
      largeObjectsHandlingCase_ = 100;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     */
    public Builder clearDropLargeObjects() {
      if (dropLargeObjectsBuilder_ == null) {
        if (largeObjectsHandlingCase_ == 100) {
          largeObjectsHandlingCase_ = 0;
          largeObjectsHandling_ = null;
          onChanged();
        }
      } else {
        if (largeObjectsHandlingCase_ == 100) {
          largeObjectsHandlingCase_ = 0;
          largeObjectsHandling_ = null;
        }
        dropLargeObjectsBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     */
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.Builder
        getDropLargeObjectsBuilder() {
      return getDropLargeObjectsFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     */
    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjectsOrBuilder
        getDropLargeObjectsOrBuilder() {
      if ((largeObjectsHandlingCase_ == 100) && (dropLargeObjectsBuilder_ != null)) {
        return dropLargeObjectsBuilder_.getMessageOrBuilder();
      } else {
        if (largeObjectsHandlingCase_ == 100) {
          return (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
              largeObjectsHandling_;
        }
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Drop large object values.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects drop_large_objects = 100;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.Builder,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjectsOrBuilder>
        getDropLargeObjectsFieldBuilder() {
      if (dropLargeObjectsBuilder_ == null) {
        if (!(largeObjectsHandlingCase_ == 100)) {
          largeObjectsHandling_ =
              com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects
                  .getDefaultInstance();
        }
        dropLargeObjectsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects,
                com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects.Builder,
                com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjectsOrBuilder>(
                (com.google.events.cloud.datastream.v1.OracleSourceConfig.DropLargeObjects)
                    largeObjectsHandling_,
                getParentForChildren(),
                isClean());
        largeObjectsHandling_ = null;
      }
      largeObjectsHandlingCase_ = 100;
      onChanged();
      return dropLargeObjectsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.Builder,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjectsOrBuilder>
        streamLargeObjectsBuilder_;

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     *
     * @return Whether the streamLargeObjects field is set.
     */
    @java.lang.Override
    public boolean hasStreamLargeObjects() {
      return largeObjectsHandlingCase_ == 102;
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     *
     * @return The streamLargeObjects.
     */
    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
        getStreamLargeObjects() {
      if (streamLargeObjectsBuilder_ == null) {
        if (largeObjectsHandlingCase_ == 102) {
          return (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
              largeObjectsHandling_;
        }
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
            .getDefaultInstance();
      } else {
        if (largeObjectsHandlingCase_ == 102) {
          return streamLargeObjectsBuilder_.getMessage();
        }
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     */
    public Builder setStreamLargeObjects(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects value) {
      if (streamLargeObjectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        largeObjectsHandling_ = value;
        onChanged();
      } else {
        streamLargeObjectsBuilder_.setMessage(value);
      }
      largeObjectsHandlingCase_ = 102;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     */
    public Builder setStreamLargeObjects(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.Builder
            builderForValue) {
      if (streamLargeObjectsBuilder_ == null) {
        largeObjectsHandling_ = builderForValue.build();
        onChanged();
      } else {
        streamLargeObjectsBuilder_.setMessage(builderForValue.build());
      }
      largeObjectsHandlingCase_ = 102;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     */
    public Builder mergeStreamLargeObjects(
        com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects value) {
      if (streamLargeObjectsBuilder_ == null) {
        if (largeObjectsHandlingCase_ == 102
            && largeObjectsHandling_
                != com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                    .getDefaultInstance()) {
          largeObjectsHandling_ =
              com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                  .newBuilder(
                      (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
                          largeObjectsHandling_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          largeObjectsHandling_ = value;
        }
        onChanged();
      } else {
        if (largeObjectsHandlingCase_ == 102) {
          streamLargeObjectsBuilder_.mergeFrom(value);
        } else {
          streamLargeObjectsBuilder_.setMessage(value);
        }
      }
      largeObjectsHandlingCase_ = 102;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     */
    public Builder clearStreamLargeObjects() {
      if (streamLargeObjectsBuilder_ == null) {
        if (largeObjectsHandlingCase_ == 102) {
          largeObjectsHandlingCase_ = 0;
          largeObjectsHandling_ = null;
          onChanged();
        }
      } else {
        if (largeObjectsHandlingCase_ == 102) {
          largeObjectsHandlingCase_ = 0;
          largeObjectsHandling_ = null;
        }
        streamLargeObjectsBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     */
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.Builder
        getStreamLargeObjectsBuilder() {
      return getStreamLargeObjectsFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     */
    @java.lang.Override
    public com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjectsOrBuilder
        getStreamLargeObjectsOrBuilder() {
      if ((largeObjectsHandlingCase_ == 102) && (streamLargeObjectsBuilder_ != null)) {
        return streamLargeObjectsBuilder_.getMessageOrBuilder();
      } else {
        if (largeObjectsHandlingCase_ == 102) {
          return (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
              largeObjectsHandling_;
        }
        return com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Stream large object values. NOTE: This feature is currently experimental.
     * </pre>
     *
     * <code>
     * .google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects stream_large_objects = 102;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.Builder,
            com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjectsOrBuilder>
        getStreamLargeObjectsFieldBuilder() {
      if (streamLargeObjectsBuilder_ == null) {
        if (!(largeObjectsHandlingCase_ == 102)) {
          largeObjectsHandling_ =
              com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects
                  .getDefaultInstance();
        }
        streamLargeObjectsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects,
                com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects.Builder,
                com.google.events.cloud.datastream.v1.OracleSourceConfig
                    .StreamLargeObjectsOrBuilder>(
                (com.google.events.cloud.datastream.v1.OracleSourceConfig.StreamLargeObjects)
                    largeObjectsHandling_,
                getParentForChildren(),
                isClean());
        largeObjectsHandling_ = null;
      }
      largeObjectsHandlingCase_ = 102;
      onChanged();
      return streamLargeObjectsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.datastream.v1.OracleSourceConfig)
  }

  // @@protoc_insertion_point(class_scope:google.events.cloud.datastream.v1.OracleSourceConfig)
  private static final com.google.events.cloud.datastream.v1.OracleSourceConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.events.cloud.datastream.v1.OracleSourceConfig();
  }

  public static com.google.events.cloud.datastream.v1.OracleSourceConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OracleSourceConfig> PARSER =
      new com.google.protobuf.AbstractParser<OracleSourceConfig>() {
        @java.lang.Override
        public OracleSourceConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<OracleSourceConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OracleSourceConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.events.cloud.datastream.v1.OracleSourceConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
