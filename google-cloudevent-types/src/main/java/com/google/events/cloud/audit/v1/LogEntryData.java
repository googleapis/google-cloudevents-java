// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/audit/v1/data.proto

package com.google.events.cloud.audit.v1;

/**
 * <pre>
 * The data within all Cloud Audit Logs log entry events.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.audit.v1.LogEntryData}
 */
public final class LogEntryData extends com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.events.cloud.audit.v1.LogEntryData)
        LogEntryDataOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use LogEntryData.newBuilder() to construct.
    private LogEntryData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private LogEntryData() {
        logName_ = "";
        insertId_ = "";
        severity_ = 0;
        trace_ = "";
        spanId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({ "unused" })
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new LogEntryData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.events.cloud.audit.v1.Data.internal_static_google_events_cloud_audit_v1_LogEntryData_descriptor;
    }

    @SuppressWarnings({ "rawtypes" })
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(int number) {
        switch (number) {
        case 11:
            return internalGetLabels();
        default:
            throw new RuntimeException("Invalid map field number: " + number);
        }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.google.events.cloud.audit.v1.Data.internal_static_google_events_cloud_audit_v1_LogEntryData_fieldAccessorTable
                .ensureFieldAccessorsInitialized(com.google.events.cloud.audit.v1.LogEntryData.class,
                        com.google.events.cloud.audit.v1.LogEntryData.Builder.class);
    }

    public static final int LOG_NAME_FIELD_NUMBER = 12;
    private volatile java.lang.Object logName_;

    /**
     * <pre>
     * The resource name of the log to which this log entry belongs.
     * </pre>
     *
     * <code>string log_name = 12;</code>
     *
     * @return The logName.
     */
    @java.lang.Override
    public java.lang.String getLogName() {
        java.lang.Object ref = logName_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            logName_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * The resource name of the log to which this log entry belongs.
     * </pre>
     *
     * <code>string log_name = 12;</code>
     *
     * @return The bytes for logName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLogNameBytes() {
        java.lang.Object ref = logName_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            logName_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int RESOURCE_FIELD_NUMBER = 8;
    private com.google.api.MonitoredResource resource_;

    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.google.api.MonitoredResource resource = 8;</code>
     *
     * @return Whether the resource field is set.
     */
    @java.lang.Override
    public boolean hasResource() {
        return resource_ != null;
    }

    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.google.api.MonitoredResource resource = 8;</code>
     *
     * @return The resource.
     */
    @java.lang.Override
    public com.google.api.MonitoredResource getResource() {
        return resource_ == null ? com.google.api.MonitoredResource.getDefaultInstance() : resource_;
    }

    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.google.api.MonitoredResource resource = 8;</code>
     */
    @java.lang.Override
    public com.google.api.MonitoredResourceOrBuilder getResourceOrBuilder() {
        return getResource();
    }

    public static final int PROTO_PAYLOAD_FIELD_NUMBER = 2;
    private com.google.events.cloud.audit.v1.AuditLog protoPayload_;

    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     *
     * @return Whether the protoPayload field is set.
     */
    @java.lang.Override
    public boolean hasProtoPayload() {
        return protoPayload_ != null;
    }

    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     *
     * @return The protoPayload.
     */
    @java.lang.Override
    public com.google.events.cloud.audit.v1.AuditLog getProtoPayload() {
        return protoPayload_ == null ? com.google.events.cloud.audit.v1.AuditLog.getDefaultInstance() : protoPayload_;
    }

    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     */
    @java.lang.Override
    public com.google.events.cloud.audit.v1.AuditLogOrBuilder getProtoPayloadOrBuilder() {
        return getProtoPayload();
    }

    public static final int INSERT_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object insertId_;

    /**
     * <pre>
     * A unique identifier for the log entry.
     * </pre>
     *
     * <code>string insert_id = 4;</code>
     *
     * @return The insertId.
     */
    @java.lang.Override
    public java.lang.String getInsertId() {
        java.lang.Object ref = insertId_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            insertId_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * A unique identifier for the log entry.
     * </pre>
     *
     * <code>string insert_id = 4;</code>
     *
     * @return The bytes for insertId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getInsertIdBytes() {
        java.lang.Object ref = insertId_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            insertId_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int LABELS_FIELD_NUMBER = 11;

    private static final class LabelsDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry = com.google.protobuf.MapEntry.<java.lang.String, java.lang.String> newDefaultInstance(
                com.google.events.cloud.audit.v1.Data.internal_static_google_events_cloud_audit_v1_LogEntryData_LabelsEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING, "", com.google.protobuf.WireFormat.FieldType.STRING,
                "");
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> labels_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetLabels() {
        if (labels_ == null) {
            return com.google.protobuf.MapField.emptyMapField(LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
    }

    public int getLabelsCount() {
        return internalGetLabels().getMap().size();
    }

    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */

    @java.lang.Override
    public boolean containsLabels(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        return internalGetLabels().getMap().containsKey(key);
    }

    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
    }

    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
    }

    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(java.lang.String key, java.lang.String defaultValue) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
        if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
    }

    public static final int OPERATION_FIELD_NUMBER = 15;
    private com.google.events.cloud.audit.v1.LogEntryOperation operation_;

    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     *
     * @return Whether the operation field is set.
     */
    @java.lang.Override
    public boolean hasOperation() {
        return operation_ != null;
    }

    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     *
     * @return The operation.
     */
    @java.lang.Override
    public com.google.events.cloud.audit.v1.LogEntryOperation getOperation() {
        return operation_ == null ? com.google.events.cloud.audit.v1.LogEntryOperation.getDefaultInstance()
                : operation_;
    }

    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     */
    @java.lang.Override
    public com.google.events.cloud.audit.v1.LogEntryOperationOrBuilder getOperationOrBuilder() {
        return getOperation();
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 9;
    private com.google.protobuf.Timestamp timestamp_;

    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     *
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
        return timestamp_ != null;
    }

    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     *
     * @return The timestamp.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
        return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        return getTimestamp();
    }

    public static final int RECEIVE_TIMESTAMP_FIELD_NUMBER = 24;
    private com.google.protobuf.Timestamp receiveTimestamp_;

    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     *
     * @return Whether the receiveTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasReceiveTimestamp() {
        return receiveTimestamp_ != null;
    }

    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     *
     * @return The receiveTimestamp.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getReceiveTimestamp() {
        return receiveTimestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : receiveTimestamp_;
    }

    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getReceiveTimestampOrBuilder() {
        return getReceiveTimestamp();
    }

    public static final int SEVERITY_FIELD_NUMBER = 10;
    private int severity_;

    /**
     * <pre>
     * The severity of the log entry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
     *
     * @return The enum numeric value on the wire for severity.
     */
    @java.lang.Override
    public int getSeverityValue() {
        return severity_;
    }

    /**
     * <pre>
     * The severity of the log entry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
     *
     * @return The severity.
     */
    @java.lang.Override
    public com.google.events.cloud.audit.v1.LogSeverity getSeverity() {
        @SuppressWarnings("deprecation")
        com.google.events.cloud.audit.v1.LogSeverity result = com.google.events.cloud.audit.v1.LogSeverity
                .valueOf(severity_);
        return result == null ? com.google.events.cloud.audit.v1.LogSeverity.UNRECOGNIZED : result;
    }

    public static final int TRACE_FIELD_NUMBER = 22;
    private volatile java.lang.Object trace_;

    /**
     * <pre>
     * Resource name of the trace associated with the log entry, if any. If it
     * contains a relative resource name, the name is assumed to be relative to
     * `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     * </pre>
     *
     * <code>string trace = 22;</code>
     *
     * @return The trace.
     */
    @java.lang.Override
    public java.lang.String getTrace() {
        java.lang.Object ref = trace_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            trace_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * Resource name of the trace associated with the log entry, if any. If it
     * contains a relative resource name, the name is assumed to be relative to
     * `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     * </pre>
     *
     * <code>string trace = 22;</code>
     *
     * @return The bytes for trace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTraceBytes() {
        java.lang.Object ref = trace_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            trace_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int SPAN_ID_FIELD_NUMBER = 27;
    private volatile java.lang.Object spanId_;

    /**
     * <pre>
     * The span ID within the trace associated with the log entry, if any.
     * For Trace spans, this is the same format that the Trace API v2 uses: a
     * 16-character hexadecimal encoding of an 8-byte array, such as
     * `000000000000004a`.
     * </pre>
     *
     * <code>string span_id = 27;</code>
     *
     * @return The spanId.
     */
    @java.lang.Override
    public java.lang.String getSpanId() {
        java.lang.Object ref = spanId_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            spanId_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * The span ID within the trace associated with the log entry, if any.
     * For Trace spans, this is the same format that the Trace API v2 uses: a
     * 16-character hexadecimal encoding of an 8-byte array, such as
     * `000000000000004a`.
     * </pre>
     *
     * <code>string span_id = 27;</code>
     *
     * @return The bytes for spanId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSpanIdBytes() {
        java.lang.Object ref = spanId_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            spanId_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int SPLIT_FIELD_NUMBER = 35;
    private com.google.events.cloud.audit.v1.LogSplit split_;

    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     *
     * @return Whether the split field is set.
     */
    @java.lang.Override
    public boolean hasSplit() {
        return split_ != null;
    }

    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     *
     * @return The split.
     */
    @java.lang.Override
    public com.google.events.cloud.audit.v1.LogSplit getSplit() {
        return split_ == null ? com.google.events.cloud.audit.v1.LogSplit.getDefaultInstance() : split_;
    }

    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     */
    @java.lang.Override
    public com.google.events.cloud.audit.v1.LogSplitOrBuilder getSplitOrBuilder() {
        return getSplit();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1)
            return true;
        if (isInitialized == 0)
            return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (protoPayload_ != null) {
            output.writeMessage(2, getProtoPayload());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(insertId_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 4, insertId_);
        }
        if (resource_ != null) {
            output.writeMessage(8, getResource());
        }
        if (timestamp_ != null) {
            output.writeMessage(9, getTimestamp());
        }
        if (severity_ != com.google.events.cloud.audit.v1.LogSeverity.DEFAULT.getNumber()) {
            output.writeEnum(10, severity_);
        }
        com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(output, internalGetLabels(),
                LabelsDefaultEntryHolder.defaultEntry, 11);
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logName_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 12, logName_);
        }
        if (operation_ != null) {
            output.writeMessage(15, getOperation());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(trace_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 22, trace_);
        }
        if (receiveTimestamp_ != null) {
            output.writeMessage(24, getReceiveTimestamp());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(spanId_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 27, spanId_);
        }
        if (split_ != null) {
            output.writeMessage(35, getSplit());
        }
        getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1)
            return size;

        size = 0;
        if (protoPayload_ != null) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getProtoPayload());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(insertId_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, insertId_);
        }
        if (resource_ != null) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getResource());
        }
        if (timestamp_ != null) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getTimestamp());
        }
        if (severity_ != com.google.events.cloud.audit.v1.LogSeverity.DEFAULT.getNumber()) {
            size += com.google.protobuf.CodedOutputStream.computeEnumSize(10, severity_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : internalGetLabels().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String> labels__ = LabelsDefaultEntryHolder.defaultEntry
                    .newBuilderForType().setKey(entry.getKey()).setValue(entry.getValue()).build();
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, labels__);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logName_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, logName_);
        }
        if (operation_ != null) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(15, getOperation());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(trace_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, trace_);
        }
        if (receiveTimestamp_ != null) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(24, getReceiveTimestamp());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(spanId_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(27, spanId_);
        }
        if (split_ != null) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(35, getSplit());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof com.google.events.cloud.audit.v1.LogEntryData)) {
            return super.equals(obj);
        }
        com.google.events.cloud.audit.v1.LogEntryData other = (com.google.events.cloud.audit.v1.LogEntryData) obj;

        if (!getLogName().equals(other.getLogName()))
            return false;
        if (hasResource() != other.hasResource())
            return false;
        if (hasResource()) {
            if (!getResource().equals(other.getResource()))
                return false;
        }
        if (hasProtoPayload() != other.hasProtoPayload())
            return false;
        if (hasProtoPayload()) {
            if (!getProtoPayload().equals(other.getProtoPayload()))
                return false;
        }
        if (!getInsertId().equals(other.getInsertId()))
            return false;
        if (!internalGetLabels().equals(other.internalGetLabels()))
            return false;
        if (hasOperation() != other.hasOperation())
            return false;
        if (hasOperation()) {
            if (!getOperation().equals(other.getOperation()))
                return false;
        }
        if (hasTimestamp() != other.hasTimestamp())
            return false;
        if (hasTimestamp()) {
            if (!getTimestamp().equals(other.getTimestamp()))
                return false;
        }
        if (hasReceiveTimestamp() != other.hasReceiveTimestamp())
            return false;
        if (hasReceiveTimestamp()) {
            if (!getReceiveTimestamp().equals(other.getReceiveTimestamp()))
                return false;
        }
        if (severity_ != other.severity_)
            return false;
        if (!getTrace().equals(other.getTrace()))
            return false;
        if (!getSpanId().equals(other.getSpanId()))
            return false;
        if (hasSplit() != other.hasSplit())
            return false;
        if (hasSplit()) {
            if (!getSplit().equals(other.getSplit()))
                return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields()))
            return false;
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LOG_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLogName().hashCode();
        if (hasResource()) {
            hash = (37 * hash) + RESOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getResource().hashCode();
        }
        if (hasProtoPayload()) {
            hash = (37 * hash) + PROTO_PAYLOAD_FIELD_NUMBER;
            hash = (53 * hash) + getProtoPayload().hashCode();
        }
        hash = (37 * hash) + INSERT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getInsertId().hashCode();
        if (!internalGetLabels().getMap().isEmpty()) {
            hash = (37 * hash) + LABELS_FIELD_NUMBER;
            hash = (53 * hash) + internalGetLabels().hashCode();
        }
        if (hasOperation()) {
            hash = (37 * hash) + OPERATION_FIELD_NUMBER;
            hash = (53 * hash) + getOperation().hashCode();
        }
        if (hasTimestamp()) {
            hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
            hash = (53 * hash) + getTimestamp().hashCode();
        }
        if (hasReceiveTimestamp()) {
            hash = (37 * hash) + RECEIVE_TIMESTAMP_FIELD_NUMBER;
            hash = (53 * hash) + getReceiveTimestamp().hashCode();
        }
        hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
        hash = (53 * hash) + severity_;
        hash = (37 * hash) + TRACE_FIELD_NUMBER;
        hash = (53 * hash) + getTrace().hashCode();
        hash = (37 * hash) + SPAN_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSpanId().hashCode();
        if (hasSplit()) {
            hash = (37 * hash) + SPLIT_FIELD_NUMBER;
            hash = (53 * hash) + getSplit().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseDelimitedFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.events.cloud.audit.v1.LogEntryData parseFrom(com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.google.events.cloud.audit.v1.LogEntryData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * The data within all Cloud Audit Logs log entry events.
     * </pre>
     *
     * Protobuf type {@code google.events.cloud.audit.v1.LogEntryData}
     */
    public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:google.events.cloud.audit.v1.LogEntryData)
            com.google.events.cloud.audit.v1.LogEntryDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.google.events.cloud.audit.v1.Data.internal_static_google_events_cloud_audit_v1_LogEntryData_descriptor;
        }

        @SuppressWarnings({ "rawtypes" })
        protected com.google.protobuf.MapField internalGetMapField(int number) {
            switch (number) {
            case 11:
                return internalGetLabels();
            default:
                throw new RuntimeException("Invalid map field number: " + number);
            }
        }

        @SuppressWarnings({ "rawtypes" })
        protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
            switch (number) {
            case 11:
                return internalGetMutableLabels();
            default:
                throw new RuntimeException("Invalid map field number: " + number);
            }
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.google.events.cloud.audit.v1.Data.internal_static_google_events_cloud_audit_v1_LogEntryData_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(com.google.events.cloud.audit.v1.LogEntryData.class,
                            com.google.events.cloud.audit.v1.LogEntryData.Builder.class);
        }

        // Construct using com.google.events.cloud.audit.v1.LogEntryData.newBuilder()
        private Builder() {

        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            logName_ = "";

            if (resourceBuilder_ == null) {
                resource_ = null;
            } else {
                resource_ = null;
                resourceBuilder_ = null;
            }
            if (protoPayloadBuilder_ == null) {
                protoPayload_ = null;
            } else {
                protoPayload_ = null;
                protoPayloadBuilder_ = null;
            }
            insertId_ = "";

            internalGetMutableLabels().clear();
            if (operationBuilder_ == null) {
                operation_ = null;
            } else {
                operation_ = null;
                operationBuilder_ = null;
            }
            if (timestampBuilder_ == null) {
                timestamp_ = null;
            } else {
                timestamp_ = null;
                timestampBuilder_ = null;
            }
            if (receiveTimestampBuilder_ == null) {
                receiveTimestamp_ = null;
            } else {
                receiveTimestamp_ = null;
                receiveTimestampBuilder_ = null;
            }
            severity_ = 0;

            trace_ = "";

            spanId_ = "";

            if (splitBuilder_ == null) {
                split_ = null;
            } else {
                split_ = null;
                splitBuilder_ = null;
            }
            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
            return com.google.events.cloud.audit.v1.Data.internal_static_google_events_cloud_audit_v1_LogEntryData_descriptor;
        }

        @java.lang.Override
        public com.google.events.cloud.audit.v1.LogEntryData getDefaultInstanceForType() {
            return com.google.events.cloud.audit.v1.LogEntryData.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.events.cloud.audit.v1.LogEntryData build() {
            com.google.events.cloud.audit.v1.LogEntryData result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public com.google.events.cloud.audit.v1.LogEntryData buildPartial() {
            com.google.events.cloud.audit.v1.LogEntryData result = new com.google.events.cloud.audit.v1.LogEntryData(
                    this);
            int from_bitField0_ = bitField0_;
            result.logName_ = logName_;
            if (resourceBuilder_ == null) {
                result.resource_ = resource_;
            } else {
                result.resource_ = resourceBuilder_.build();
            }
            if (protoPayloadBuilder_ == null) {
                result.protoPayload_ = protoPayload_;
            } else {
                result.protoPayload_ = protoPayloadBuilder_.build();
            }
            result.insertId_ = insertId_;
            result.labels_ = internalGetLabels();
            result.labels_.makeImmutable();
            if (operationBuilder_ == null) {
                result.operation_ = operation_;
            } else {
                result.operation_ = operationBuilder_.build();
            }
            if (timestampBuilder_ == null) {
                result.timestamp_ = timestamp_;
            } else {
                result.timestamp_ = timestampBuilder_.build();
            }
            if (receiveTimestampBuilder_ == null) {
                result.receiveTimestamp_ = receiveTimestamp_;
            } else {
                result.receiveTimestamp_ = receiveTimestampBuilder_.build();
            }
            result.severity_ = severity_;
            result.trace_ = trace_;
            result.spanId_ = spanId_;
            if (splitBuilder_ == null) {
                result.split_ = split_;
            } else {
                result.split_ = splitBuilder_.build();
            }
            onBuilt();
            return result;
        }

        @java.lang.Override
        public Builder clone() {
            return super.clone();
        }

        @java.lang.Override
        public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
                java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.google.events.cloud.audit.v1.LogEntryData) {
                return mergeFrom((com.google.events.cloud.audit.v1.LogEntryData) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(com.google.events.cloud.audit.v1.LogEntryData other) {
            if (other == com.google.events.cloud.audit.v1.LogEntryData.getDefaultInstance())
                return this;
            if (!other.getLogName().isEmpty()) {
                logName_ = other.logName_;
                onChanged();
            }
            if (other.hasResource()) {
                mergeResource(other.getResource());
            }
            if (other.hasProtoPayload()) {
                mergeProtoPayload(other.getProtoPayload());
            }
            if (!other.getInsertId().isEmpty()) {
                insertId_ = other.insertId_;
                onChanged();
            }
            internalGetMutableLabels().mergeFrom(other.internalGetLabels());
            if (other.hasOperation()) {
                mergeOperation(other.getOperation());
            }
            if (other.hasTimestamp()) {
                mergeTimestamp(other.getTimestamp());
            }
            if (other.hasReceiveTimestamp()) {
                mergeReceiveTimestamp(other.getReceiveTimestamp());
            }
            if (other.severity_ != 0) {
                setSeverityValue(other.getSeverityValue());
            }
            if (!other.getTrace().isEmpty()) {
                trace_ = other.trace_;
                onChanged();
            }
            if (!other.getSpanId().isEmpty()) {
                spanId_ = other.spanId_;
                onChanged();
            }
            if (other.hasSplit()) {
                mergeSplit(other.getSplit());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 18: {
                        input.readMessage(getProtoPayloadFieldBuilder().getBuilder(), extensionRegistry);

                        break;
                    } // case 18
                    case 34: {
                        insertId_ = input.readStringRequireUtf8();

                        break;
                    } // case 34
                    case 66: {
                        input.readMessage(getResourceFieldBuilder().getBuilder(), extensionRegistry);

                        break;
                    } // case 66
                    case 74: {
                        input.readMessage(getTimestampFieldBuilder().getBuilder(), extensionRegistry);

                        break;
                    } // case 74
                    case 80: {
                        severity_ = input.readEnum();

                        break;
                    } // case 80
                    case 90: {
                        com.google.protobuf.MapEntry<java.lang.String, java.lang.String> labels__ = input.readMessage(
                                LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                        internalGetMutableLabels().getMutableMap().put(labels__.getKey(), labels__.getValue());
                        break;
                    } // case 90
                    case 98: {
                        logName_ = input.readStringRequireUtf8();

                        break;
                    } // case 98
                    case 122: {
                        input.readMessage(getOperationFieldBuilder().getBuilder(), extensionRegistry);

                        break;
                    } // case 122
                    case 178: {
                        trace_ = input.readStringRequireUtf8();

                        break;
                    } // case 178
                    case 194: {
                        input.readMessage(getReceiveTimestampFieldBuilder().getBuilder(), extensionRegistry);

                        break;
                    } // case 194
                    case 218: {
                        spanId_ = input.readStringRequireUtf8();

                        break;
                    } // case 218
                    case 282: {
                        input.readMessage(getSplitFieldBuilder().getBuilder(), extensionRegistry);

                        break;
                    } // case 282
                    default: {
                        if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                            done = true; // was an endgroup tag
                        }
                        break;
                    } // default:
                    } // switch (tag)
                } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.unwrapIOException();
            } finally {
                onChanged();
            } // finally
            return this;
        }

        private int bitField0_;

        private java.lang.Object logName_ = "";

        /**
         * <pre>
         * The resource name of the log to which this log entry belongs.
         * </pre>
         *
         * <code>string log_name = 12;</code>
         *
         * @return The logName.
         */
        public java.lang.String getLogName() {
            java.lang.Object ref = logName_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                logName_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * The resource name of the log to which this log entry belongs.
         * </pre>
         *
         * <code>string log_name = 12;</code>
         *
         * @return The bytes for logName.
         */
        public com.google.protobuf.ByteString getLogNameBytes() {
            java.lang.Object ref = logName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                logName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * The resource name of the log to which this log entry belongs.
         * </pre>
         *
         * <code>string log_name = 12;</code>
         *
         * @param value
         *            The logName to set.
         *
         * @return This builder for chaining.
         */
        public Builder setLogName(java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            logName_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The resource name of the log to which this log entry belongs.
         * </pre>
         *
         * <code>string log_name = 12;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearLogName() {

            logName_ = getDefaultInstance().getLogName();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The resource name of the log to which this log entry belongs.
         * </pre>
         *
         * <code>string log_name = 12;</code>
         *
         * @param value
         *            The bytes for logName to set.
         *
         * @return This builder for chaining.
         */
        public Builder setLogNameBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            logName_ = value;
            onChanged();
            return this;
        }

        private com.google.api.MonitoredResource resource_;
        private com.google.protobuf.SingleFieldBuilderV3<com.google.api.MonitoredResource, com.google.api.MonitoredResource.Builder, com.google.api.MonitoredResourceOrBuilder> resourceBuilder_;

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         *
         * @return Whether the resource field is set.
         */
        public boolean hasResource() {
            return resourceBuilder_ != null || resource_ != null;
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         *
         * @return The resource.
         */
        public com.google.api.MonitoredResource getResource() {
            if (resourceBuilder_ == null) {
                return resource_ == null ? com.google.api.MonitoredResource.getDefaultInstance() : resource_;
            } else {
                return resourceBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         */
        public Builder setResource(com.google.api.MonitoredResource value) {
            if (resourceBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                resource_ = value;
                onChanged();
            } else {
                resourceBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         */
        public Builder setResource(com.google.api.MonitoredResource.Builder builderForValue) {
            if (resourceBuilder_ == null) {
                resource_ = builderForValue.build();
                onChanged();
            } else {
                resourceBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         */
        public Builder mergeResource(com.google.api.MonitoredResource value) {
            if (resourceBuilder_ == null) {
                if (resource_ != null) {
                    resource_ = com.google.api.MonitoredResource.newBuilder(resource_).mergeFrom(value).buildPartial();
                } else {
                    resource_ = value;
                }
                onChanged();
            } else {
                resourceBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         */
        public Builder clearResource() {
            if (resourceBuilder_ == null) {
                resource_ = null;
                onChanged();
            } else {
                resource_ = null;
                resourceBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         */
        public com.google.api.MonitoredResource.Builder getResourceBuilder() {

            onChanged();
            return getResourceFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         */
        public com.google.api.MonitoredResourceOrBuilder getResourceOrBuilder() {
            if (resourceBuilder_ != null) {
                return resourceBuilder_.getMessageOrBuilder();
            } else {
                return resource_ == null ? com.google.api.MonitoredResource.getDefaultInstance() : resource_;
            }
        }

        /**
         * <pre>
         * The monitored resource that produced this log entry.
         * Example: a log entry that reports a database error would be associated with
         * the monitored resource designating the particular database that reported
         * the error.
         * </pre>
         *
         * <code>.google.api.MonitoredResource resource = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<com.google.api.MonitoredResource, com.google.api.MonitoredResource.Builder, com.google.api.MonitoredResourceOrBuilder> getResourceFieldBuilder() {
            if (resourceBuilder_ == null) {
                resourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.google.api.MonitoredResource, com.google.api.MonitoredResource.Builder, com.google.api.MonitoredResourceOrBuilder>(
                        getResource(), getParentForChildren(), isClean());
                resource_ = null;
            }
            return resourceBuilder_;
        }

        private com.google.events.cloud.audit.v1.AuditLog protoPayload_;
        private com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.AuditLog, com.google.events.cloud.audit.v1.AuditLog.Builder, com.google.events.cloud.audit.v1.AuditLogOrBuilder> protoPayloadBuilder_;

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         *
         * @return Whether the protoPayload field is set.
         */
        public boolean hasProtoPayload() {
            return protoPayloadBuilder_ != null || protoPayload_ != null;
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         *
         * @return The protoPayload.
         */
        public com.google.events.cloud.audit.v1.AuditLog getProtoPayload() {
            if (protoPayloadBuilder_ == null) {
                return protoPayload_ == null ? com.google.events.cloud.audit.v1.AuditLog.getDefaultInstance()
                        : protoPayload_;
            } else {
                return protoPayloadBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         */
        public Builder setProtoPayload(com.google.events.cloud.audit.v1.AuditLog value) {
            if (protoPayloadBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                protoPayload_ = value;
                onChanged();
            } else {
                protoPayloadBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         */
        public Builder setProtoPayload(com.google.events.cloud.audit.v1.AuditLog.Builder builderForValue) {
            if (protoPayloadBuilder_ == null) {
                protoPayload_ = builderForValue.build();
                onChanged();
            } else {
                protoPayloadBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         */
        public Builder mergeProtoPayload(com.google.events.cloud.audit.v1.AuditLog value) {
            if (protoPayloadBuilder_ == null) {
                if (protoPayload_ != null) {
                    protoPayload_ = com.google.events.cloud.audit.v1.AuditLog.newBuilder(protoPayload_).mergeFrom(value)
                            .buildPartial();
                } else {
                    protoPayload_ = value;
                }
                onChanged();
            } else {
                protoPayloadBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         */
        public Builder clearProtoPayload() {
            if (protoPayloadBuilder_ == null) {
                protoPayload_ = null;
                onChanged();
            } else {
                protoPayload_ = null;
                protoPayloadBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         */
        public com.google.events.cloud.audit.v1.AuditLog.Builder getProtoPayloadBuilder() {

            onChanged();
            return getProtoPayloadFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         */
        public com.google.events.cloud.audit.v1.AuditLogOrBuilder getProtoPayloadOrBuilder() {
            if (protoPayloadBuilder_ != null) {
                return protoPayloadBuilder_.getMessageOrBuilder();
            } else {
                return protoPayload_ == null ? com.google.events.cloud.audit.v1.AuditLog.getDefaultInstance()
                        : protoPayload_;
            }
        }

        /**
         * <pre>
         * The log entry payload, which is always an AuditLog for Cloud Audit Log
         * events.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.AuditLog, com.google.events.cloud.audit.v1.AuditLog.Builder, com.google.events.cloud.audit.v1.AuditLogOrBuilder> getProtoPayloadFieldBuilder() {
            if (protoPayloadBuilder_ == null) {
                protoPayloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.AuditLog, com.google.events.cloud.audit.v1.AuditLog.Builder, com.google.events.cloud.audit.v1.AuditLogOrBuilder>(
                        getProtoPayload(), getParentForChildren(), isClean());
                protoPayload_ = null;
            }
            return protoPayloadBuilder_;
        }

        private java.lang.Object insertId_ = "";

        /**
         * <pre>
         * A unique identifier for the log entry.
         * </pre>
         *
         * <code>string insert_id = 4;</code>
         *
         * @return The insertId.
         */
        public java.lang.String getInsertId() {
            java.lang.Object ref = insertId_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                insertId_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * A unique identifier for the log entry.
         * </pre>
         *
         * <code>string insert_id = 4;</code>
         *
         * @return The bytes for insertId.
         */
        public com.google.protobuf.ByteString getInsertIdBytes() {
            java.lang.Object ref = insertId_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                insertId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * A unique identifier for the log entry.
         * </pre>
         *
         * <code>string insert_id = 4;</code>
         *
         * @param value
         *            The insertId to set.
         *
         * @return This builder for chaining.
         */
        public Builder setInsertId(java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            insertId_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * A unique identifier for the log entry.
         * </pre>
         *
         * <code>string insert_id = 4;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearInsertId() {

            insertId_ = getDefaultInstance().getInsertId();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * A unique identifier for the log entry.
         * </pre>
         *
         * <code>string insert_id = 4;</code>
         *
         * @param value
         *            The bytes for insertId to set.
         *
         * @return This builder for chaining.
         */
        public Builder setInsertIdBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            insertId_ = value;
            onChanged();
            return this;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.String> labels_;

        private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetLabels() {
            if (labels_ == null) {
                return com.google.protobuf.MapField.emptyMapField(LabelsDefaultEntryHolder.defaultEntry);
            }
            return labels_;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetMutableLabels() {
            onChanged();
            ;
            if (labels_ == null) {
                labels_ = com.google.protobuf.MapField.newMapField(LabelsDefaultEntryHolder.defaultEntry);
            }
            if (!labels_.isMutable()) {
                labels_ = labels_.copy();
            }
            return labels_;
        }

        public int getLabelsCount() {
            return internalGetLabels().getMap().size();
        }

        /**
         * <pre>
         * A set of user-defined (key, value) data that provides additional
         * information about the log entry.
         * </pre>
         *
         * <code>map&lt;string, string&gt; labels = 11;</code>
         */

        @java.lang.Override
        public boolean containsLabels(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            return internalGetLabels().getMap().containsKey(key);
        }

        /**
         * Use {@link #getLabelsMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getLabels() {
            return getLabelsMap();
        }

        /**
         * <pre>
         * A set of user-defined (key, value) data that provides additional
         * information about the log entry.
         * </pre>
         *
         * <code>map&lt;string, string&gt; labels = 11;</code>
         */
        @java.lang.Override

        public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
            return internalGetLabels().getMap();
        }

        /**
         * <pre>
         * A set of user-defined (key, value) data that provides additional
         * information about the log entry.
         * </pre>
         *
         * <code>map&lt;string, string&gt; labels = 11;</code>
         */
        @java.lang.Override

        public java.lang.String getLabelsOrDefault(java.lang.String key, java.lang.String defaultValue) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <pre>
         * A set of user-defined (key, value) data that provides additional
         * information about the log entry.
         * </pre>
         *
         * <code>map&lt;string, string&gt; labels = 11;</code>
         */
        @java.lang.Override

        public java.lang.String getLabelsOrThrow(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public Builder clearLabels() {
            internalGetMutableLabels().getMutableMap().clear();
            return this;
        }

        /**
         * <pre>
         * A set of user-defined (key, value) data that provides additional
         * information about the log entry.
         * </pre>
         *
         * <code>map&lt;string, string&gt; labels = 11;</code>
         */

        public Builder removeLabels(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableLabels().getMutableMap().remove(key);
            return this;
        }

        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMutableLabels() {
            return internalGetMutableLabels().getMutableMap();
        }

        /**
         * <pre>
         * A set of user-defined (key, value) data that provides additional
         * information about the log entry.
         * </pre>
         *
         * <code>map&lt;string, string&gt; labels = 11;</code>
         */
        public Builder putLabels(java.lang.String key, java.lang.String value) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            if (value == null) {
                throw new NullPointerException("map value");
            }

            internalGetMutableLabels().getMutableMap().put(key, value);
            return this;
        }

        /**
         * <pre>
         * A set of user-defined (key, value) data that provides additional
         * information about the log entry.
         * </pre>
         *
         * <code>map&lt;string, string&gt; labels = 11;</code>
         */

        public Builder putAllLabels(java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableLabels().getMutableMap().putAll(values);
            return this;
        }

        private com.google.events.cloud.audit.v1.LogEntryOperation operation_;
        private com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.LogEntryOperation, com.google.events.cloud.audit.v1.LogEntryOperation.Builder, com.google.events.cloud.audit.v1.LogEntryOperationOrBuilder> operationBuilder_;

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         *
         * @return Whether the operation field is set.
         */
        public boolean hasOperation() {
            return operationBuilder_ != null || operation_ != null;
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         *
         * @return The operation.
         */
        public com.google.events.cloud.audit.v1.LogEntryOperation getOperation() {
            if (operationBuilder_ == null) {
                return operation_ == null ? com.google.events.cloud.audit.v1.LogEntryOperation.getDefaultInstance()
                        : operation_;
            } else {
                return operationBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         */
        public Builder setOperation(com.google.events.cloud.audit.v1.LogEntryOperation value) {
            if (operationBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                operation_ = value;
                onChanged();
            } else {
                operationBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         */
        public Builder setOperation(com.google.events.cloud.audit.v1.LogEntryOperation.Builder builderForValue) {
            if (operationBuilder_ == null) {
                operation_ = builderForValue.build();
                onChanged();
            } else {
                operationBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         */
        public Builder mergeOperation(com.google.events.cloud.audit.v1.LogEntryOperation value) {
            if (operationBuilder_ == null) {
                if (operation_ != null) {
                    operation_ = com.google.events.cloud.audit.v1.LogEntryOperation.newBuilder(operation_)
                            .mergeFrom(value).buildPartial();
                } else {
                    operation_ = value;
                }
                onChanged();
            } else {
                operationBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         */
        public Builder clearOperation() {
            if (operationBuilder_ == null) {
                operation_ = null;
                onChanged();
            } else {
                operation_ = null;
                operationBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         */
        public com.google.events.cloud.audit.v1.LogEntryOperation.Builder getOperationBuilder() {

            onChanged();
            return getOperationFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         */
        public com.google.events.cloud.audit.v1.LogEntryOperationOrBuilder getOperationOrBuilder() {
            if (operationBuilder_ != null) {
                return operationBuilder_.getMessageOrBuilder();
            } else {
                return operation_ == null ? com.google.events.cloud.audit.v1.LogEntryOperation.getDefaultInstance()
                        : operation_;
            }
        }

        /**
         * <pre>
         * Information about an operation associated with the log entry, if
         * applicable.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.LogEntryOperation, com.google.events.cloud.audit.v1.LogEntryOperation.Builder, com.google.events.cloud.audit.v1.LogEntryOperationOrBuilder> getOperationFieldBuilder() {
            if (operationBuilder_ == null) {
                operationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.LogEntryOperation, com.google.events.cloud.audit.v1.LogEntryOperation.Builder, com.google.events.cloud.audit.v1.LogEntryOperationOrBuilder>(
                        getOperation(), getParentForChildren(), isClean());
                operation_ = null;
            }
            return operationBuilder_;
        }

        private com.google.protobuf.Timestamp timestamp_;
        private com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         *
         * @return Whether the timestamp field is set.
         */
        public boolean hasTimestamp() {
            return timestampBuilder_ != null || timestamp_ != null;
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         *
         * @return The timestamp.
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            if (timestampBuilder_ == null) {
                return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
            } else {
                return timestampBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         */
        public Builder setTimestamp(com.google.protobuf.Timestamp value) {
            if (timestampBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                timestamp_ = value;
                onChanged();
            } else {
                timestampBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         */
        public Builder setTimestamp(com.google.protobuf.Timestamp.Builder builderForValue) {
            if (timestampBuilder_ == null) {
                timestamp_ = builderForValue.build();
                onChanged();
            } else {
                timestampBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         */
        public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
            if (timestampBuilder_ == null) {
                if (timestamp_ != null) {
                    timestamp_ = com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                } else {
                    timestamp_ = value;
                }
                onChanged();
            } else {
                timestampBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         */
        public Builder clearTimestamp() {
            if (timestampBuilder_ == null) {
                timestamp_ = null;
                onChanged();
            } else {
                timestamp_ = null;
                timestampBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         */
        public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

            onChanged();
            return getTimestampFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            if (timestampBuilder_ != null) {
                return timestampBuilder_.getMessageOrBuilder();
            } else {
                return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
            }
        }

        /**
         * <pre>
         * The time the event described by the log entry occurred.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> getTimestampFieldBuilder() {
            if (timestampBuilder_ == null) {
                timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                        getTimestamp(), getParentForChildren(), isClean());
                timestamp_ = null;
            }
            return timestampBuilder_;
        }

        private com.google.protobuf.Timestamp receiveTimestamp_;
        private com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> receiveTimestampBuilder_;

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         *
         * @return Whether the receiveTimestamp field is set.
         */
        public boolean hasReceiveTimestamp() {
            return receiveTimestampBuilder_ != null || receiveTimestamp_ != null;
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         *
         * @return The receiveTimestamp.
         */
        public com.google.protobuf.Timestamp getReceiveTimestamp() {
            if (receiveTimestampBuilder_ == null) {
                return receiveTimestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance()
                        : receiveTimestamp_;
            } else {
                return receiveTimestampBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         */
        public Builder setReceiveTimestamp(com.google.protobuf.Timestamp value) {
            if (receiveTimestampBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                receiveTimestamp_ = value;
                onChanged();
            } else {
                receiveTimestampBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         */
        public Builder setReceiveTimestamp(com.google.protobuf.Timestamp.Builder builderForValue) {
            if (receiveTimestampBuilder_ == null) {
                receiveTimestamp_ = builderForValue.build();
                onChanged();
            } else {
                receiveTimestampBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         */
        public Builder mergeReceiveTimestamp(com.google.protobuf.Timestamp value) {
            if (receiveTimestampBuilder_ == null) {
                if (receiveTimestamp_ != null) {
                    receiveTimestamp_ = com.google.protobuf.Timestamp.newBuilder(receiveTimestamp_).mergeFrom(value)
                            .buildPartial();
                } else {
                    receiveTimestamp_ = value;
                }
                onChanged();
            } else {
                receiveTimestampBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         */
        public Builder clearReceiveTimestamp() {
            if (receiveTimestampBuilder_ == null) {
                receiveTimestamp_ = null;
                onChanged();
            } else {
                receiveTimestamp_ = null;
                receiveTimestampBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         */
        public com.google.protobuf.Timestamp.Builder getReceiveTimestampBuilder() {

            onChanged();
            return getReceiveTimestampFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getReceiveTimestampOrBuilder() {
            if (receiveTimestampBuilder_ != null) {
                return receiveTimestampBuilder_.getMessageOrBuilder();
            } else {
                return receiveTimestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance()
                        : receiveTimestamp_;
            }
        }

        /**
         * <pre>
         * The time the log entry was received by Logging.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> getReceiveTimestampFieldBuilder() {
            if (receiveTimestampBuilder_ == null) {
                receiveTimestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                        getReceiveTimestamp(), getParentForChildren(), isClean());
                receiveTimestamp_ = null;
            }
            return receiveTimestampBuilder_;
        }

        private int severity_ = 0;

        /**
         * <pre>
         * The severity of the log entry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
         *
         * @return The enum numeric value on the wire for severity.
         */
        @java.lang.Override
        public int getSeverityValue() {
            return severity_;
        }

        /**
         * <pre>
         * The severity of the log entry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
         *
         * @param value
         *            The enum numeric value on the wire for severity to set.
         *
         * @return This builder for chaining.
         */
        public Builder setSeverityValue(int value) {

            severity_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The severity of the log entry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
         *
         * @return The severity.
         */
        @java.lang.Override
        public com.google.events.cloud.audit.v1.LogSeverity getSeverity() {
            @SuppressWarnings("deprecation")
            com.google.events.cloud.audit.v1.LogSeverity result = com.google.events.cloud.audit.v1.LogSeverity
                    .valueOf(severity_);
            return result == null ? com.google.events.cloud.audit.v1.LogSeverity.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * The severity of the log entry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
         *
         * @param value
         *            The severity to set.
         *
         * @return This builder for chaining.
         */
        public Builder setSeverity(com.google.events.cloud.audit.v1.LogSeverity value) {
            if (value == null) {
                throw new NullPointerException();
            }

            severity_ = value.getNumber();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The severity of the log entry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearSeverity() {

            severity_ = 0;
            onChanged();
            return this;
        }

        private java.lang.Object trace_ = "";

        /**
         * <pre>
         * Resource name of the trace associated with the log entry, if any. If it
         * contains a relative resource name, the name is assumed to be relative to
         * `//tracing.googleapis.com`. Example:
         * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
         * </pre>
         *
         * <code>string trace = 22;</code>
         *
         * @return The trace.
         */
        public java.lang.String getTrace() {
            java.lang.Object ref = trace_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                trace_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * Resource name of the trace associated with the log entry, if any. If it
         * contains a relative resource name, the name is assumed to be relative to
         * `//tracing.googleapis.com`. Example:
         * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
         * </pre>
         *
         * <code>string trace = 22;</code>
         *
         * @return The bytes for trace.
         */
        public com.google.protobuf.ByteString getTraceBytes() {
            java.lang.Object ref = trace_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                trace_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Resource name of the trace associated with the log entry, if any. If it
         * contains a relative resource name, the name is assumed to be relative to
         * `//tracing.googleapis.com`. Example:
         * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
         * </pre>
         *
         * <code>string trace = 22;</code>
         *
         * @param value
         *            The trace to set.
         *
         * @return This builder for chaining.
         */
        public Builder setTrace(java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            trace_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Resource name of the trace associated with the log entry, if any. If it
         * contains a relative resource name, the name is assumed to be relative to
         * `//tracing.googleapis.com`. Example:
         * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
         * </pre>
         *
         * <code>string trace = 22;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTrace() {

            trace_ = getDefaultInstance().getTrace();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Resource name of the trace associated with the log entry, if any. If it
         * contains a relative resource name, the name is assumed to be relative to
         * `//tracing.googleapis.com`. Example:
         * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
         * </pre>
         *
         * <code>string trace = 22;</code>
         *
         * @param value
         *            The bytes for trace to set.
         *
         * @return This builder for chaining.
         */
        public Builder setTraceBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            trace_ = value;
            onChanged();
            return this;
        }

        private java.lang.Object spanId_ = "";

        /**
         * <pre>
         * The span ID within the trace associated with the log entry, if any.
         * For Trace spans, this is the same format that the Trace API v2 uses: a
         * 16-character hexadecimal encoding of an 8-byte array, such as
         * `000000000000004a`.
         * </pre>
         *
         * <code>string span_id = 27;</code>
         *
         * @return The spanId.
         */
        public java.lang.String getSpanId() {
            java.lang.Object ref = spanId_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                spanId_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * The span ID within the trace associated with the log entry, if any.
         * For Trace spans, this is the same format that the Trace API v2 uses: a
         * 16-character hexadecimal encoding of an 8-byte array, such as
         * `000000000000004a`.
         * </pre>
         *
         * <code>string span_id = 27;</code>
         *
         * @return The bytes for spanId.
         */
        public com.google.protobuf.ByteString getSpanIdBytes() {
            java.lang.Object ref = spanId_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                spanId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * The span ID within the trace associated with the log entry, if any.
         * For Trace spans, this is the same format that the Trace API v2 uses: a
         * 16-character hexadecimal encoding of an 8-byte array, such as
         * `000000000000004a`.
         * </pre>
         *
         * <code>string span_id = 27;</code>
         *
         * @param value
         *            The spanId to set.
         *
         * @return This builder for chaining.
         */
        public Builder setSpanId(java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            spanId_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The span ID within the trace associated with the log entry, if any.
         * For Trace spans, this is the same format that the Trace API v2 uses: a
         * 16-character hexadecimal encoding of an 8-byte array, such as
         * `000000000000004a`.
         * </pre>
         *
         * <code>string span_id = 27;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearSpanId() {

            spanId_ = getDefaultInstance().getSpanId();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The span ID within the trace associated with the log entry, if any.
         * For Trace spans, this is the same format that the Trace API v2 uses: a
         * 16-character hexadecimal encoding of an 8-byte array, such as
         * `000000000000004a`.
         * </pre>
         *
         * <code>string span_id = 27;</code>
         *
         * @param value
         *            The bytes for spanId to set.
         *
         * @return This builder for chaining.
         */
        public Builder setSpanIdBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            spanId_ = value;
            onChanged();
            return this;
        }

        private com.google.events.cloud.audit.v1.LogSplit split_;
        private com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.LogSplit, com.google.events.cloud.audit.v1.LogSplit.Builder, com.google.events.cloud.audit.v1.LogSplitOrBuilder> splitBuilder_;

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         *
         * @return Whether the split field is set.
         */
        public boolean hasSplit() {
            return splitBuilder_ != null || split_ != null;
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         *
         * @return The split.
         */
        public com.google.events.cloud.audit.v1.LogSplit getSplit() {
            if (splitBuilder_ == null) {
                return split_ == null ? com.google.events.cloud.audit.v1.LogSplit.getDefaultInstance() : split_;
            } else {
                return splitBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         */
        public Builder setSplit(com.google.events.cloud.audit.v1.LogSplit value) {
            if (splitBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                split_ = value;
                onChanged();
            } else {
                splitBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         */
        public Builder setSplit(com.google.events.cloud.audit.v1.LogSplit.Builder builderForValue) {
            if (splitBuilder_ == null) {
                split_ = builderForValue.build();
                onChanged();
            } else {
                splitBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         */
        public Builder mergeSplit(com.google.events.cloud.audit.v1.LogSplit value) {
            if (splitBuilder_ == null) {
                if (split_ != null) {
                    split_ = com.google.events.cloud.audit.v1.LogSplit.newBuilder(split_).mergeFrom(value)
                            .buildPartial();
                } else {
                    split_ = value;
                }
                onChanged();
            } else {
                splitBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         */
        public Builder clearSplit() {
            if (splitBuilder_ == null) {
                split_ = null;
                onChanged();
            } else {
                split_ = null;
                splitBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         */
        public com.google.events.cloud.audit.v1.LogSplit.Builder getSplitBuilder() {

            onChanged();
            return getSplitFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         */
        public com.google.events.cloud.audit.v1.LogSplitOrBuilder getSplitOrBuilder() {
            if (splitBuilder_ != null) {
                return splitBuilder_.getMessageOrBuilder();
            } else {
                return split_ == null ? com.google.events.cloud.audit.v1.LogSplit.getDefaultInstance() : split_;
            }
        }

        /**
         * <pre>
         * Information indicating this LogEntry is part of a sequence of multiple logs
         * split from a single LogEntry.
         * </pre>
         *
         * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.LogSplit, com.google.events.cloud.audit.v1.LogSplit.Builder, com.google.events.cloud.audit.v1.LogSplitOrBuilder> getSplitFieldBuilder() {
            if (splitBuilder_ == null) {
                splitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.google.events.cloud.audit.v1.LogSplit, com.google.events.cloud.audit.v1.LogSplit.Builder, com.google.events.cloud.audit.v1.LogSplitOrBuilder>(
                        getSplit(), getParentForChildren(), isClean());
                split_ = null;
            }
            return splitBuilder_;
        }

        @java.lang.Override
        public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.events.cloud.audit.v1.LogEntryData)
    }

    // @@protoc_insertion_point(class_scope:google.events.cloud.audit.v1.LogEntryData)
    private static final com.google.events.cloud.audit.v1.LogEntryData DEFAULT_INSTANCE;
    static {
        DEFAULT_INSTANCE = new com.google.events.cloud.audit.v1.LogEntryData();
    }

    public static com.google.events.cloud.audit.v1.LogEntryData getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogEntryData> PARSER = new com.google.protobuf.AbstractParser<LogEntryData>() {
        @java.lang.Override
        public LogEntryData parsePartialFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
                builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                        .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
        }
    };

    public static com.google.protobuf.Parser<LogEntryData> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogEntryData> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.events.cloud.audit.v1.LogEntryData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}
