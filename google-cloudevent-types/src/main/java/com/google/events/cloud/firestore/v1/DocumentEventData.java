/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/firestore/v1/data.proto

package com.google.events.cloud.firestore.v1;

/**
 *
 *
 * <pre>
 * The data within all Firestore document events.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.firestore.v1.DocumentEventData}
 */
public final class DocumentEventData extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.firestore.v1.DocumentEventData)
    DocumentEventDataOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use DocumentEventData.newBuilder() to construct.
  private DocumentEventData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private DocumentEventData() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new DocumentEventData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.events.cloud.firestore.v1.Data
        .internal_static_google_events_cloud_firestore_v1_DocumentEventData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.events.cloud.firestore.v1.Data
        .internal_static_google_events_cloud_firestore_v1_DocumentEventData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.events.cloud.firestore.v1.DocumentEventData.class,
            com.google.events.cloud.firestore.v1.DocumentEventData.Builder.class);
  }

  public static final int VALUE_FIELD_NUMBER = 1;
  private com.google.events.cloud.firestore.v1.Document value_;

  /**
   *
   *
   * <pre>
   * A Document object containing a post-operation document snapshot.
   * This is not populated for delete events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
   *
   * @return Whether the value field is set.
   */
  @java.lang.Override
  public boolean hasValue() {
    return value_ != null;
  }

  /**
   *
   *
   * <pre>
   * A Document object containing a post-operation document snapshot.
   * This is not populated for delete events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
   *
   * @return The value.
   */
  @java.lang.Override
  public com.google.events.cloud.firestore.v1.Document getValue() {
    return value_ == null
        ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
        : value_;
  }

  /**
   *
   *
   * <pre>
   * A Document object containing a post-operation document snapshot.
   * This is not populated for delete events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
   */
  @java.lang.Override
  public com.google.events.cloud.firestore.v1.DocumentOrBuilder getValueOrBuilder() {
    return value_ == null
        ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
        : value_;
  }

  public static final int OLD_VALUE_FIELD_NUMBER = 2;
  private com.google.events.cloud.firestore.v1.Document oldValue_;

  /**
   *
   *
   * <pre>
   * A Document object containing a pre-operation document snapshot.
   * This is only populated for update and delete events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
   *
   * @return Whether the oldValue field is set.
   */
  @java.lang.Override
  public boolean hasOldValue() {
    return oldValue_ != null;
  }

  /**
   *
   *
   * <pre>
   * A Document object containing a pre-operation document snapshot.
   * This is only populated for update and delete events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
   *
   * @return The oldValue.
   */
  @java.lang.Override
  public com.google.events.cloud.firestore.v1.Document getOldValue() {
    return oldValue_ == null
        ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
        : oldValue_;
  }

  /**
   *
   *
   * <pre>
   * A Document object containing a pre-operation document snapshot.
   * This is only populated for update and delete events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
   */
  @java.lang.Override
  public com.google.events.cloud.firestore.v1.DocumentOrBuilder getOldValueOrBuilder() {
    return oldValue_ == null
        ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
        : oldValue_;
  }

  public static final int UPDATE_MASK_FIELD_NUMBER = 3;
  private com.google.events.cloud.firestore.v1.DocumentMask updateMask_;

  /**
   *
   *
   * <pre>
   * A DocumentMask object that lists changed fields.
   * This is only populated for update events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
   *
   * @return Whether the updateMask field is set.
   */
  @java.lang.Override
  public boolean hasUpdateMask() {
    return updateMask_ != null;
  }

  /**
   *
   *
   * <pre>
   * A DocumentMask object that lists changed fields.
   * This is only populated for update events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
   *
   * @return The updateMask.
   */
  @java.lang.Override
  public com.google.events.cloud.firestore.v1.DocumentMask getUpdateMask() {
    return updateMask_ == null
        ? com.google.events.cloud.firestore.v1.DocumentMask.getDefaultInstance()
        : updateMask_;
  }

  /**
   *
   *
   * <pre>
   * A DocumentMask object that lists changed fields.
   * This is only populated for update events.
   * </pre>
   *
   * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
   */
  @java.lang.Override
  public com.google.events.cloud.firestore.v1.DocumentMaskOrBuilder getUpdateMaskOrBuilder() {
    return updateMask_ == null
        ? com.google.events.cloud.firestore.v1.DocumentMask.getDefaultInstance()
        : updateMask_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (value_ != null) {
      output.writeMessage(1, getValue());
    }
    if (oldValue_ != null) {
      output.writeMessage(2, getOldValue());
    }
    if (updateMask_ != null) {
      output.writeMessage(3, getUpdateMask());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (value_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getValue());
    }
    if (oldValue_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getOldValue());
    }
    if (updateMask_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getUpdateMask());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.events.cloud.firestore.v1.DocumentEventData)) {
      return super.equals(obj);
    }
    com.google.events.cloud.firestore.v1.DocumentEventData other =
        (com.google.events.cloud.firestore.v1.DocumentEventData) obj;

    if (hasValue() != other.hasValue()) return false;
    if (hasValue()) {
      if (!getValue().equals(other.getValue())) return false;
    }
    if (hasOldValue() != other.hasOldValue()) return false;
    if (hasOldValue()) {
      if (!getOldValue().equals(other.getOldValue())) return false;
    }
    if (hasUpdateMask() != other.hasUpdateMask()) return false;
    if (hasUpdateMask()) {
      if (!getUpdateMask().equals(other.getUpdateMask())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasValue()) {
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
    }
    if (hasOldValue()) {
      hash = (37 * hash) + OLD_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getOldValue().hashCode();
    }
    if (hasUpdateMask()) {
      hash = (37 * hash) + UPDATE_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateMask().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.events.cloud.firestore.v1.DocumentEventData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * The data within all Firestore document events.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.firestore.v1.DocumentEventData}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.firestore.v1.DocumentEventData)
      com.google.events.cloud.firestore.v1.DocumentEventDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.events.cloud.firestore.v1.Data
          .internal_static_google_events_cloud_firestore_v1_DocumentEventData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.cloud.firestore.v1.Data
          .internal_static_google_events_cloud_firestore_v1_DocumentEventData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.cloud.firestore.v1.DocumentEventData.class,
              com.google.events.cloud.firestore.v1.DocumentEventData.Builder.class);
    }

    // Construct using com.google.events.cloud.firestore.v1.DocumentEventData.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      value_ = null;
      if (valueBuilder_ != null) {
        valueBuilder_.dispose();
        valueBuilder_ = null;
      }
      oldValue_ = null;
      if (oldValueBuilder_ != null) {
        oldValueBuilder_.dispose();
        oldValueBuilder_ = null;
      }
      updateMask_ = null;
      if (updateMaskBuilder_ != null) {
        updateMaskBuilder_.dispose();
        updateMaskBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.events.cloud.firestore.v1.Data
          .internal_static_google_events_cloud_firestore_v1_DocumentEventData_descriptor;
    }

    @java.lang.Override
    public com.google.events.cloud.firestore.v1.DocumentEventData getDefaultInstanceForType() {
      return com.google.events.cloud.firestore.v1.DocumentEventData.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.events.cloud.firestore.v1.DocumentEventData build() {
      com.google.events.cloud.firestore.v1.DocumentEventData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.events.cloud.firestore.v1.DocumentEventData buildPartial() {
      com.google.events.cloud.firestore.v1.DocumentEventData result =
          new com.google.events.cloud.firestore.v1.DocumentEventData(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.events.cloud.firestore.v1.DocumentEventData result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.value_ = valueBuilder_ == null ? value_ : valueBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.oldValue_ = oldValueBuilder_ == null ? oldValue_ : oldValueBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.updateMask_ = updateMaskBuilder_ == null ? updateMask_ : updateMaskBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.events.cloud.firestore.v1.DocumentEventData) {
        return mergeFrom((com.google.events.cloud.firestore.v1.DocumentEventData) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.events.cloud.firestore.v1.DocumentEventData other) {
      if (other == com.google.events.cloud.firestore.v1.DocumentEventData.getDefaultInstance())
        return this;
      if (other.hasValue()) {
        mergeValue(other.getValue());
      }
      if (other.hasOldValue()) {
        mergeOldValue(other.getOldValue());
      }
      if (other.hasUpdateMask()) {
        mergeUpdateMask(other.getUpdateMask());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getValueFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getOldValueFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getUpdateMaskFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.events.cloud.firestore.v1.Document value_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.firestore.v1.Document,
            com.google.events.cloud.firestore.v1.Document.Builder,
            com.google.events.cloud.firestore.v1.DocumentOrBuilder>
        valueBuilder_;

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     *
     * @return Whether the value field is set.
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     *
     * @return The value.
     */
    public com.google.events.cloud.firestore.v1.Document getValue() {
      if (valueBuilder_ == null) {
        return value_ == null
            ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
            : value_;
      } else {
        return valueBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     */
    public Builder setValue(com.google.events.cloud.firestore.v1.Document value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
      } else {
        valueBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     */
    public Builder setValue(com.google.events.cloud.firestore.v1.Document.Builder builderForValue) {
      if (valueBuilder_ == null) {
        value_ = builderForValue.build();
      } else {
        valueBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     */
    public Builder mergeValue(com.google.events.cloud.firestore.v1.Document value) {
      if (valueBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && value_ != null
            && value_ != com.google.events.cloud.firestore.v1.Document.getDefaultInstance()) {
          getValueBuilder().mergeFrom(value);
        } else {
          value_ = value;
        }
      } else {
        valueBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     */
    public Builder clearValue() {
      bitField0_ = (bitField0_ & ~0x00000001);
      value_ = null;
      if (valueBuilder_ != null) {
        valueBuilder_.dispose();
        valueBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     */
    public com.google.events.cloud.firestore.v1.Document.Builder getValueBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getValueFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     */
    public com.google.events.cloud.firestore.v1.DocumentOrBuilder getValueOrBuilder() {
      if (valueBuilder_ != null) {
        return valueBuilder_.getMessageOrBuilder();
      } else {
        return value_ == null
            ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
            : value_;
      }
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a post-operation document snapshot.
     * This is not populated for delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document value = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.firestore.v1.Document,
            com.google.events.cloud.firestore.v1.Document.Builder,
            com.google.events.cloud.firestore.v1.DocumentOrBuilder>
        getValueFieldBuilder() {
      if (valueBuilder_ == null) {
        valueBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.firestore.v1.Document,
                com.google.events.cloud.firestore.v1.Document.Builder,
                com.google.events.cloud.firestore.v1.DocumentOrBuilder>(
                getValue(), getParentForChildren(), isClean());
        value_ = null;
      }
      return valueBuilder_;
    }

    private com.google.events.cloud.firestore.v1.Document oldValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.firestore.v1.Document,
            com.google.events.cloud.firestore.v1.Document.Builder,
            com.google.events.cloud.firestore.v1.DocumentOrBuilder>
        oldValueBuilder_;

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     *
     * @return Whether the oldValue field is set.
     */
    public boolean hasOldValue() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     *
     * @return The oldValue.
     */
    public com.google.events.cloud.firestore.v1.Document getOldValue() {
      if (oldValueBuilder_ == null) {
        return oldValue_ == null
            ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
            : oldValue_;
      } else {
        return oldValueBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     */
    public Builder setOldValue(com.google.events.cloud.firestore.v1.Document value) {
      if (oldValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        oldValue_ = value;
      } else {
        oldValueBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     */
    public Builder setOldValue(
        com.google.events.cloud.firestore.v1.Document.Builder builderForValue) {
      if (oldValueBuilder_ == null) {
        oldValue_ = builderForValue.build();
      } else {
        oldValueBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     */
    public Builder mergeOldValue(com.google.events.cloud.firestore.v1.Document value) {
      if (oldValueBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && oldValue_ != null
            && oldValue_ != com.google.events.cloud.firestore.v1.Document.getDefaultInstance()) {
          getOldValueBuilder().mergeFrom(value);
        } else {
          oldValue_ = value;
        }
      } else {
        oldValueBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     */
    public Builder clearOldValue() {
      bitField0_ = (bitField0_ & ~0x00000002);
      oldValue_ = null;
      if (oldValueBuilder_ != null) {
        oldValueBuilder_.dispose();
        oldValueBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     */
    public com.google.events.cloud.firestore.v1.Document.Builder getOldValueBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getOldValueFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     */
    public com.google.events.cloud.firestore.v1.DocumentOrBuilder getOldValueOrBuilder() {
      if (oldValueBuilder_ != null) {
        return oldValueBuilder_.getMessageOrBuilder();
      } else {
        return oldValue_ == null
            ? com.google.events.cloud.firestore.v1.Document.getDefaultInstance()
            : oldValue_;
      }
    }

    /**
     *
     *
     * <pre>
     * A Document object containing a pre-operation document snapshot.
     * This is only populated for update and delete events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.Document old_value = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.firestore.v1.Document,
            com.google.events.cloud.firestore.v1.Document.Builder,
            com.google.events.cloud.firestore.v1.DocumentOrBuilder>
        getOldValueFieldBuilder() {
      if (oldValueBuilder_ == null) {
        oldValueBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.firestore.v1.Document,
                com.google.events.cloud.firestore.v1.Document.Builder,
                com.google.events.cloud.firestore.v1.DocumentOrBuilder>(
                getOldValue(), getParentForChildren(), isClean());
        oldValue_ = null;
      }
      return oldValueBuilder_;
    }

    private com.google.events.cloud.firestore.v1.DocumentMask updateMask_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.firestore.v1.DocumentMask,
            com.google.events.cloud.firestore.v1.DocumentMask.Builder,
            com.google.events.cloud.firestore.v1.DocumentMaskOrBuilder>
        updateMaskBuilder_;

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     *
     * @return Whether the updateMask field is set.
     */
    public boolean hasUpdateMask() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     *
     * @return The updateMask.
     */
    public com.google.events.cloud.firestore.v1.DocumentMask getUpdateMask() {
      if (updateMaskBuilder_ == null) {
        return updateMask_ == null
            ? com.google.events.cloud.firestore.v1.DocumentMask.getDefaultInstance()
            : updateMask_;
      } else {
        return updateMaskBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     */
    public Builder setUpdateMask(com.google.events.cloud.firestore.v1.DocumentMask value) {
      if (updateMaskBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        updateMask_ = value;
      } else {
        updateMaskBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     */
    public Builder setUpdateMask(
        com.google.events.cloud.firestore.v1.DocumentMask.Builder builderForValue) {
      if (updateMaskBuilder_ == null) {
        updateMask_ = builderForValue.build();
      } else {
        updateMaskBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     */
    public Builder mergeUpdateMask(com.google.events.cloud.firestore.v1.DocumentMask value) {
      if (updateMaskBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && updateMask_ != null
            && updateMask_
                != com.google.events.cloud.firestore.v1.DocumentMask.getDefaultInstance()) {
          getUpdateMaskBuilder().mergeFrom(value);
        } else {
          updateMask_ = value;
        }
      } else {
        updateMaskBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     */
    public Builder clearUpdateMask() {
      bitField0_ = (bitField0_ & ~0x00000004);
      updateMask_ = null;
      if (updateMaskBuilder_ != null) {
        updateMaskBuilder_.dispose();
        updateMaskBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     */
    public com.google.events.cloud.firestore.v1.DocumentMask.Builder getUpdateMaskBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getUpdateMaskFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     */
    public com.google.events.cloud.firestore.v1.DocumentMaskOrBuilder getUpdateMaskOrBuilder() {
      if (updateMaskBuilder_ != null) {
        return updateMaskBuilder_.getMessageOrBuilder();
      } else {
        return updateMask_ == null
            ? com.google.events.cloud.firestore.v1.DocumentMask.getDefaultInstance()
            : updateMask_;
      }
    }

    /**
     *
     *
     * <pre>
     * A DocumentMask object that lists changed fields.
     * This is only populated for update events.
     * </pre>
     *
     * <code>.google.events.cloud.firestore.v1.DocumentMask update_mask = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.firestore.v1.DocumentMask,
            com.google.events.cloud.firestore.v1.DocumentMask.Builder,
            com.google.events.cloud.firestore.v1.DocumentMaskOrBuilder>
        getUpdateMaskFieldBuilder() {
      if (updateMaskBuilder_ == null) {
        updateMaskBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.firestore.v1.DocumentMask,
                com.google.events.cloud.firestore.v1.DocumentMask.Builder,
                com.google.events.cloud.firestore.v1.DocumentMaskOrBuilder>(
                getUpdateMask(), getParentForChildren(), isClean());
        updateMask_ = null;
      }
      return updateMaskBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.firestore.v1.DocumentEventData)
  }

  // @@protoc_insertion_point(class_scope:google.events.cloud.firestore.v1.DocumentEventData)
  private static final com.google.events.cloud.firestore.v1.DocumentEventData DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.events.cloud.firestore.v1.DocumentEventData();
  }

  public static com.google.events.cloud.firestore.v1.DocumentEventData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DocumentEventData> PARSER =
      new com.google.protobuf.AbstractParser<DocumentEventData>() {
        @java.lang.Override
        public DocumentEventData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<DocumentEventData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DocumentEventData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.events.cloud.firestore.v1.DocumentEventData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
