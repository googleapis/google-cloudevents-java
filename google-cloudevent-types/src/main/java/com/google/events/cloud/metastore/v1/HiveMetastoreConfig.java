/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/metastore/v1/data.proto

package com.google.events.cloud.metastore.v1;

/**
 *
 *
 * <pre>
 * Specifies configuration information specific to running Hive metastore
 * software as the metastore service.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.metastore.v1.HiveMetastoreConfig}
 */
public final class HiveMetastoreConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.metastore.v1.HiveMetastoreConfig)
    HiveMetastoreConfigOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use HiveMetastoreConfig.newBuilder() to construct.
  private HiveMetastoreConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private HiveMetastoreConfig() {
    version_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new HiveMetastoreConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.events.cloud.metastore.v1.Data
        .internal_static_google_events_cloud_metastore_v1_HiveMetastoreConfig_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(int number) {
    switch (number) {
      case 2:
        return internalGetConfigOverrides();
      case 5:
        return internalGetAuxiliaryVersions();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.events.cloud.metastore.v1.Data
        .internal_static_google_events_cloud_metastore_v1_HiveMetastoreConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.events.cloud.metastore.v1.HiveMetastoreConfig.class,
            com.google.events.cloud.metastore.v1.HiveMetastoreConfig.Builder.class);
  }

  public static final int VERSION_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object version_ = "";

  /**
   *
   *
   * <pre>
   * Immutable. The Hive metastore schema version.
   * </pre>
   *
   * <code>string version = 1;</code>
   *
   * @return The version.
   */
  @java.lang.Override
  public java.lang.String getVersion() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      version_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Immutable. The Hive metastore schema version.
   * </pre>
   *
   * <code>string version = 1;</code>
   *
   * @return The bytes for version.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getVersionBytes() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      version_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONFIG_OVERRIDES_FIELD_NUMBER = 2;

  private static final class ConfigOverridesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            com.google.events.cloud.metastore.v1.Data
                .internal_static_google_events_cloud_metastore_v1_HiveMetastoreConfig_ConfigOverridesEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING,
            "",
            com.google.protobuf.WireFormat.FieldType.STRING,
            "");
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<java.lang.String, java.lang.String> configOverrides_;

  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetConfigOverrides() {
    if (configOverrides_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ConfigOverridesDefaultEntryHolder.defaultEntry);
    }
    return configOverrides_;
  }

  public int getConfigOverridesCount() {
    return internalGetConfigOverrides().getMap().size();
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore configuration key-value pairs to apply to the
   * Hive metastore (configured in `hive-site.xml`). The mappings
   * override system defaults (some keys cannot be overridden). These
   * overrides are also applied to auxiliary versions and can be further
   * customized in the auxiliary version's `AuxiliaryVersionConfig`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; config_overrides = 2;</code>
   */
  @java.lang.Override
  public boolean containsConfigOverrides(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetConfigOverrides().getMap().containsKey(key);
  }

  /** Use {@link #getConfigOverridesMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getConfigOverrides() {
    return getConfigOverridesMap();
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore configuration key-value pairs to apply to the
   * Hive metastore (configured in `hive-site.xml`). The mappings
   * override system defaults (some keys cannot be overridden). These
   * overrides are also applied to auxiliary versions and can be further
   * customized in the auxiliary version's `AuxiliaryVersionConfig`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; config_overrides = 2;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getConfigOverridesMap() {
    return internalGetConfigOverrides().getMap();
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore configuration key-value pairs to apply to the
   * Hive metastore (configured in `hive-site.xml`). The mappings
   * override system defaults (some keys cannot be overridden). These
   * overrides are also applied to auxiliary versions and can be further
   * customized in the auxiliary version's `AuxiliaryVersionConfig`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; config_overrides = 2;</code>
   */
  @java.lang.Override
  public /* nullable */ java.lang.String getConfigOverridesOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigOverrides().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore configuration key-value pairs to apply to the
   * Hive metastore (configured in `hive-site.xml`). The mappings
   * override system defaults (some keys cannot be overridden). These
   * overrides are also applied to auxiliary versions and can be further
   * customized in the auxiliary version's `AuxiliaryVersionConfig`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; config_overrides = 2;</code>
   */
  @java.lang.Override
  public java.lang.String getConfigOverridesOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigOverrides().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int KERBEROS_CONFIG_FIELD_NUMBER = 3;
  private com.google.events.cloud.metastore.v1.KerberosConfig kerberosConfig_;

  /**
   *
   *
   * <pre>
   * Information used to configure the Hive metastore service as a service
   * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
   * method and specify this field's path
   * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
   * while omitting this field from the request's `service`.
   * </pre>
   *
   * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
   *
   * @return Whether the kerberosConfig field is set.
   */
  @java.lang.Override
  public boolean hasKerberosConfig() {
    return kerberosConfig_ != null;
  }

  /**
   *
   *
   * <pre>
   * Information used to configure the Hive metastore service as a service
   * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
   * method and specify this field's path
   * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
   * while omitting this field from the request's `service`.
   * </pre>
   *
   * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
   *
   * @return The kerberosConfig.
   */
  @java.lang.Override
  public com.google.events.cloud.metastore.v1.KerberosConfig getKerberosConfig() {
    return kerberosConfig_ == null
        ? com.google.events.cloud.metastore.v1.KerberosConfig.getDefaultInstance()
        : kerberosConfig_;
  }

  /**
   *
   *
   * <pre>
   * Information used to configure the Hive metastore service as a service
   * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
   * method and specify this field's path
   * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
   * while omitting this field from the request's `service`.
   * </pre>
   *
   * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
   */
  @java.lang.Override
  public com.google.events.cloud.metastore.v1.KerberosConfigOrBuilder getKerberosConfigOrBuilder() {
    return kerberosConfig_ == null
        ? com.google.events.cloud.metastore.v1.KerberosConfig.getDefaultInstance()
        : kerberosConfig_;
  }

  public static final int AUXILIARY_VERSIONS_FIELD_NUMBER = 5;

  private static final class AuxiliaryVersionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
                    newDefaultInstance(
                        com.google.events.cloud.metastore.v1.Data
                            .internal_static_google_events_cloud_metastore_v1_HiveMetastoreConfig_AuxiliaryVersionsEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig
                            .getDefaultInstance());
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
          java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
      auxiliaryVersions_;

  private com.google.protobuf.MapField<
          java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
      internalGetAuxiliaryVersions() {
    if (auxiliaryVersions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AuxiliaryVersionsDefaultEntryHolder.defaultEntry);
    }
    return auxiliaryVersions_;
  }

  public int getAuxiliaryVersionsCount() {
    return internalGetAuxiliaryVersions().getMap().size();
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore version to the auxiliary version
   * configuration. When specified, a secondary Hive metastore service is
   * created along with the primary service. All auxiliary versions must be less
   * than the service's primary version. The key is the auxiliary service name
   * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
   * means that the first character must be a lowercase letter, and all the
   * following characters must be hyphens, lowercase letters, or digits, except
   * the last character, which cannot be a hyphen.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
   * </code>
   */
  @java.lang.Override
  public boolean containsAuxiliaryVersions(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetAuxiliaryVersions().getMap().containsKey(key);
  }

  /** Use {@link #getAuxiliaryVersionsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
      getAuxiliaryVersions() {
    return getAuxiliaryVersionsMap();
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore version to the auxiliary version
   * configuration. When specified, a secondary Hive metastore service is
   * created along with the primary service. All auxiliary versions must be less
   * than the service's primary version. The key is the auxiliary service name
   * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
   * means that the first character must be a lowercase letter, and all the
   * following characters must be hyphens, lowercase letters, or digits, except
   * the last character, which cannot be a hyphen.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
   * </code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
      getAuxiliaryVersionsMap() {
    return internalGetAuxiliaryVersions().getMap();
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore version to the auxiliary version
   * configuration. When specified, a secondary Hive metastore service is
   * created along with the primary service. All auxiliary versions must be less
   * than the service's primary version. The key is the auxiliary service name
   * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
   * means that the first character must be a lowercase letter, and all the
   * following characters must be hyphens, lowercase letters, or digits, except
   * the last character, which cannot be a hyphen.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
   * </code>
   */
  @java.lang.Override
  public /* nullable */ com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig
      getAuxiliaryVersionsOrDefault(
          java.lang.String key,
          /* nullable */
          com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        map = internalGetAuxiliaryVersions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }

  /**
   *
   *
   * <pre>
   * A mapping of Hive metastore version to the auxiliary version
   * configuration. When specified, a secondary Hive metastore service is
   * created along with the primary service. All auxiliary versions must be less
   * than the service's primary version. The key is the auxiliary service name
   * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
   * means that the first character must be a lowercase letter, and all the
   * following characters must be hyphens, lowercase letters, or digits, except
   * the last character, which cannot be a hyphen.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
   * </code>
   */
  @java.lang.Override
  public com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig getAuxiliaryVersionsOrThrow(
      java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        map = internalGetAuxiliaryVersions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetConfigOverrides(), ConfigOverridesDefaultEntryHolder.defaultEntry, 2);
    if (kerberosConfig_ != null) {
      output.writeMessage(3, getKerberosConfig());
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output,
        internalGetAuxiliaryVersions(),
        AuxiliaryVersionsDefaultEntryHolder.defaultEntry,
        5);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
        internalGetConfigOverrides().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> configOverrides__ =
          ConfigOverridesDefaultEntryHolder.defaultEntry
              .newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, configOverrides__);
    }
    if (kerberosConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getKerberosConfig());
    }
    for (java.util.Map.Entry<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        entry : internalGetAuxiliaryVersions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
          auxiliaryVersions__ =
              AuxiliaryVersionsDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, auxiliaryVersions__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.events.cloud.metastore.v1.HiveMetastoreConfig)) {
      return super.equals(obj);
    }
    com.google.events.cloud.metastore.v1.HiveMetastoreConfig other =
        (com.google.events.cloud.metastore.v1.HiveMetastoreConfig) obj;

    if (!getVersion().equals(other.getVersion())) return false;
    if (!internalGetConfigOverrides().equals(other.internalGetConfigOverrides())) return false;
    if (hasKerberosConfig() != other.hasKerberosConfig()) return false;
    if (hasKerberosConfig()) {
      if (!getKerberosConfig().equals(other.getKerberosConfig())) return false;
    }
    if (!internalGetAuxiliaryVersions().equals(other.internalGetAuxiliaryVersions())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion().hashCode();
    if (!internalGetConfigOverrides().getMap().isEmpty()) {
      hash = (37 * hash) + CONFIG_OVERRIDES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetConfigOverrides().hashCode();
    }
    if (hasKerberosConfig()) {
      hash = (37 * hash) + KERBEROS_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getKerberosConfig().hashCode();
    }
    if (!internalGetAuxiliaryVersions().getMap().isEmpty()) {
      hash = (37 * hash) + AUXILIARY_VERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAuxiliaryVersions().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.events.cloud.metastore.v1.HiveMetastoreConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Specifies configuration information specific to running Hive metastore
   * software as the metastore service.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.metastore.v1.HiveMetastoreConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.metastore.v1.HiveMetastoreConfig)
      com.google.events.cloud.metastore.v1.HiveMetastoreConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.events.cloud.metastore.v1.Data
          .internal_static_google_events_cloud_metastore_v1_HiveMetastoreConfig_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 2:
          return internalGetConfigOverrides();
        case 5:
          return internalGetAuxiliaryVersions();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
      switch (number) {
        case 2:
          return internalGetMutableConfigOverrides();
        case 5:
          return internalGetMutableAuxiliaryVersions();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.events.cloud.metastore.v1.Data
          .internal_static_google_events_cloud_metastore_v1_HiveMetastoreConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.events.cloud.metastore.v1.HiveMetastoreConfig.class,
              com.google.events.cloud.metastore.v1.HiveMetastoreConfig.Builder.class);
    }

    // Construct using com.google.events.cloud.metastore.v1.HiveMetastoreConfig.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      version_ = "";
      internalGetMutableConfigOverrides().clear();
      kerberosConfig_ = null;
      if (kerberosConfigBuilder_ != null) {
        kerberosConfigBuilder_.dispose();
        kerberosConfigBuilder_ = null;
      }
      internalGetMutableAuxiliaryVersions().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.events.cloud.metastore.v1.Data
          .internal_static_google_events_cloud_metastore_v1_HiveMetastoreConfig_descriptor;
    }

    @java.lang.Override
    public com.google.events.cloud.metastore.v1.HiveMetastoreConfig getDefaultInstanceForType() {
      return com.google.events.cloud.metastore.v1.HiveMetastoreConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.events.cloud.metastore.v1.HiveMetastoreConfig build() {
      com.google.events.cloud.metastore.v1.HiveMetastoreConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.events.cloud.metastore.v1.HiveMetastoreConfig buildPartial() {
      com.google.events.cloud.metastore.v1.HiveMetastoreConfig result =
          new com.google.events.cloud.metastore.v1.HiveMetastoreConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.events.cloud.metastore.v1.HiveMetastoreConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.version_ = version_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.configOverrides_ = internalGetConfigOverrides();
        result.configOverrides_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.kerberosConfig_ =
            kerberosConfigBuilder_ == null ? kerberosConfig_ : kerberosConfigBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.auxiliaryVersions_ = internalGetAuxiliaryVersions();
        result.auxiliaryVersions_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.events.cloud.metastore.v1.HiveMetastoreConfig) {
        return mergeFrom((com.google.events.cloud.metastore.v1.HiveMetastoreConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.events.cloud.metastore.v1.HiveMetastoreConfig other) {
      if (other == com.google.events.cloud.metastore.v1.HiveMetastoreConfig.getDefaultInstance())
        return this;
      if (!other.getVersion().isEmpty()) {
        version_ = other.version_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      internalGetMutableConfigOverrides().mergeFrom(other.internalGetConfigOverrides());
      bitField0_ |= 0x00000002;
      if (other.hasKerberosConfig()) {
        mergeKerberosConfig(other.getKerberosConfig());
      }
      internalGetMutableAuxiliaryVersions().mergeFrom(other.internalGetAuxiliaryVersions());
      bitField0_ |= 0x00000008;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                version_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String> configOverrides__ =
                    input.readMessage(
                        ConfigOverridesDefaultEntryHolder.defaultEntry.getParserForType(),
                        extensionRegistry);
                internalGetMutableConfigOverrides()
                    .getMutableMap()
                    .put(configOverrides__.getKey(), configOverrides__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getKerberosConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 42:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
                    auxiliaryVersions__ =
                        input.readMessage(
                            AuxiliaryVersionsDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableAuxiliaryVersions()
                    .getMutableMap()
                    .put(auxiliaryVersions__.getKey(), auxiliaryVersions__.getValue());
                bitField0_ |= 0x00000008;
                break;
              } // case 42
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object version_ = "";

    /**
     *
     *
     * <pre>
     * Immutable. The Hive metastore schema version.
     * </pre>
     *
     * <code>string version = 1;</code>
     *
     * @return The version.
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Immutable. The Hive metastore schema version.
     * </pre>
     *
     * <code>string version = 1;</code>
     *
     * @return The bytes for version.
     */
    public com.google.protobuf.ByteString getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Immutable. The Hive metastore schema version.
     * </pre>
     *
     * <code>string version = 1;</code>
     *
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      version_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Immutable. The Hive metastore schema version.
     * </pre>
     *
     * <code>string version = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      version_ = getDefaultInstance().getVersion();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Immutable. The Hive metastore schema version.
     * </pre>
     *
     * <code>string version = 1;</code>
     *
     * @param value The bytes for version to set.
     * @return This builder for chaining.
     */
    public Builder setVersionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      version_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> configOverrides_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetConfigOverrides() {
      if (configOverrides_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConfigOverridesDefaultEntryHolder.defaultEntry);
      }
      return configOverrides_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableConfigOverrides() {
      if (configOverrides_ == null) {
        configOverrides_ =
            com.google.protobuf.MapField.newMapField(
                ConfigOverridesDefaultEntryHolder.defaultEntry);
      }
      if (!configOverrides_.isMutable()) {
        configOverrides_ = configOverrides_.copy();
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return configOverrides_;
    }

    public int getConfigOverridesCount() {
      return internalGetConfigOverrides().getMap().size();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore configuration key-value pairs to apply to the
     * Hive metastore (configured in `hive-site.xml`). The mappings
     * override system defaults (some keys cannot be overridden). These
     * overrides are also applied to auxiliary versions and can be further
     * customized in the auxiliary version's `AuxiliaryVersionConfig`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; config_overrides = 2;</code>
     */
    @java.lang.Override
    public boolean containsConfigOverrides(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetConfigOverrides().getMap().containsKey(key);
    }

    /** Use {@link #getConfigOverridesMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getConfigOverrides() {
      return getConfigOverridesMap();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore configuration key-value pairs to apply to the
     * Hive metastore (configured in `hive-site.xml`). The mappings
     * override system defaults (some keys cannot be overridden). These
     * overrides are also applied to auxiliary versions and can be further
     * customized in the auxiliary version's `AuxiliaryVersionConfig`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; config_overrides = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getConfigOverridesMap() {
      return internalGetConfigOverrides().getMap();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore configuration key-value pairs to apply to the
     * Hive metastore (configured in `hive-site.xml`). The mappings
     * override system defaults (some keys cannot be overridden). These
     * overrides are also applied to auxiliary versions and can be further
     * customized in the auxiliary version's `AuxiliaryVersionConfig`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; config_overrides = 2;</code>
     */
    @java.lang.Override
    public /* nullable */ java.lang.String getConfigOverridesOrDefault(
        java.lang.String key,
        /* nullable */
        java.lang.String defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigOverrides().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore configuration key-value pairs to apply to the
     * Hive metastore (configured in `hive-site.xml`). The mappings
     * override system defaults (some keys cannot be overridden). These
     * overrides are also applied to auxiliary versions and can be further
     * customized in the auxiliary version's `AuxiliaryVersionConfig`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; config_overrides = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getConfigOverridesOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigOverrides().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearConfigOverrides() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableConfigOverrides().getMutableMap().clear();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore configuration key-value pairs to apply to the
     * Hive metastore (configured in `hive-site.xml`). The mappings
     * override system defaults (some keys cannot be overridden). These
     * overrides are also applied to auxiliary versions and can be further
     * customized in the auxiliary version's `AuxiliaryVersionConfig`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; config_overrides = 2;</code>
     */
    public Builder removeConfigOverrides(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableConfigOverrides().getMutableMap().remove(key);
      return this;
    }

    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableConfigOverrides() {
      bitField0_ |= 0x00000002;
      return internalGetMutableConfigOverrides().getMutableMap();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore configuration key-value pairs to apply to the
     * Hive metastore (configured in `hive-site.xml`). The mappings
     * override system defaults (some keys cannot be overridden). These
     * overrides are also applied to auxiliary versions and can be further
     * customized in the auxiliary version's `AuxiliaryVersionConfig`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; config_overrides = 2;</code>
     */
    public Builder putConfigOverrides(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableConfigOverrides().getMutableMap().put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore configuration key-value pairs to apply to the
     * Hive metastore (configured in `hive-site.xml`). The mappings
     * override system defaults (some keys cannot be overridden). These
     * overrides are also applied to auxiliary versions and can be further
     * customized in the auxiliary version's `AuxiliaryVersionConfig`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; config_overrides = 2;</code>
     */
    public Builder putAllConfigOverrides(java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableConfigOverrides().getMutableMap().putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }

    private com.google.events.cloud.metastore.v1.KerberosConfig kerberosConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.metastore.v1.KerberosConfig,
            com.google.events.cloud.metastore.v1.KerberosConfig.Builder,
            com.google.events.cloud.metastore.v1.KerberosConfigOrBuilder>
        kerberosConfigBuilder_;

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     *
     * @return Whether the kerberosConfig field is set.
     */
    public boolean hasKerberosConfig() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     *
     * @return The kerberosConfig.
     */
    public com.google.events.cloud.metastore.v1.KerberosConfig getKerberosConfig() {
      if (kerberosConfigBuilder_ == null) {
        return kerberosConfig_ == null
            ? com.google.events.cloud.metastore.v1.KerberosConfig.getDefaultInstance()
            : kerberosConfig_;
      } else {
        return kerberosConfigBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     */
    public Builder setKerberosConfig(com.google.events.cloud.metastore.v1.KerberosConfig value) {
      if (kerberosConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kerberosConfig_ = value;
      } else {
        kerberosConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     */
    public Builder setKerberosConfig(
        com.google.events.cloud.metastore.v1.KerberosConfig.Builder builderForValue) {
      if (kerberosConfigBuilder_ == null) {
        kerberosConfig_ = builderForValue.build();
      } else {
        kerberosConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     */
    public Builder mergeKerberosConfig(com.google.events.cloud.metastore.v1.KerberosConfig value) {
      if (kerberosConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && kerberosConfig_ != null
            && kerberosConfig_
                != com.google.events.cloud.metastore.v1.KerberosConfig.getDefaultInstance()) {
          getKerberosConfigBuilder().mergeFrom(value);
        } else {
          kerberosConfig_ = value;
        }
      } else {
        kerberosConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     */
    public Builder clearKerberosConfig() {
      bitField0_ = (bitField0_ & ~0x00000004);
      kerberosConfig_ = null;
      if (kerberosConfigBuilder_ != null) {
        kerberosConfigBuilder_.dispose();
        kerberosConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     */
    public com.google.events.cloud.metastore.v1.KerberosConfig.Builder getKerberosConfigBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getKerberosConfigFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     */
    public com.google.events.cloud.metastore.v1.KerberosConfigOrBuilder
        getKerberosConfigOrBuilder() {
      if (kerberosConfigBuilder_ != null) {
        return kerberosConfigBuilder_.getMessageOrBuilder();
      } else {
        return kerberosConfig_ == null
            ? com.google.events.cloud.metastore.v1.KerberosConfig.getDefaultInstance()
            : kerberosConfig_;
      }
    }

    /**
     *
     *
     * <pre>
     * Information used to configure the Hive metastore service as a service
     * principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
     * method and specify this field's path
     * (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
     * while omitting this field from the request's `service`.
     * </pre>
     *
     * <code>.google.events.cloud.metastore.v1.KerberosConfig kerberos_config = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.events.cloud.metastore.v1.KerberosConfig,
            com.google.events.cloud.metastore.v1.KerberosConfig.Builder,
            com.google.events.cloud.metastore.v1.KerberosConfigOrBuilder>
        getKerberosConfigFieldBuilder() {
      if (kerberosConfigBuilder_ == null) {
        kerberosConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.events.cloud.metastore.v1.KerberosConfig,
                com.google.events.cloud.metastore.v1.KerberosConfig.Builder,
                com.google.events.cloud.metastore.v1.KerberosConfigOrBuilder>(
                getKerberosConfig(), getParentForChildren(), isClean());
        kerberosConfig_ = null;
      }
      return kerberosConfigBuilder_;
    }

    private com.google.protobuf.MapField<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        auxiliaryVersions_;

    private com.google.protobuf.MapField<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        internalGetAuxiliaryVersions() {
      if (auxiliaryVersions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AuxiliaryVersionsDefaultEntryHolder.defaultEntry);
      }
      return auxiliaryVersions_;
    }

    private com.google.protobuf.MapField<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        internalGetMutableAuxiliaryVersions() {
      if (auxiliaryVersions_ == null) {
        auxiliaryVersions_ =
            com.google.protobuf.MapField.newMapField(
                AuxiliaryVersionsDefaultEntryHolder.defaultEntry);
      }
      if (!auxiliaryVersions_.isMutable()) {
        auxiliaryVersions_ = auxiliaryVersions_.copy();
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return auxiliaryVersions_;
    }

    public int getAuxiliaryVersionsCount() {
      return internalGetAuxiliaryVersions().getMap().size();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore version to the auxiliary version
     * configuration. When specified, a secondary Hive metastore service is
     * created along with the primary service. All auxiliary versions must be less
     * than the service's primary version. The key is the auxiliary service name
     * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
     * means that the first character must be a lowercase letter, and all the
     * following characters must be hyphens, lowercase letters, or digits, except
     * the last character, which cannot be a hyphen.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
     * </code>
     */
    @java.lang.Override
    public boolean containsAuxiliaryVersions(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetAuxiliaryVersions().getMap().containsKey(key);
    }

    /** Use {@link #getAuxiliaryVersionsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        getAuxiliaryVersions() {
      return getAuxiliaryVersionsMap();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore version to the auxiliary version
     * configuration. When specified, a secondary Hive metastore service is
     * created along with the primary service. All auxiliary versions must be less
     * than the service's primary version. The key is the auxiliary service name
     * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
     * means that the first character must be a lowercase letter, and all the
     * following characters must be hyphens, lowercase letters, or digits, except
     * the last character, which cannot be a hyphen.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
     * </code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        getAuxiliaryVersionsMap() {
      return internalGetAuxiliaryVersions().getMap();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore version to the auxiliary version
     * configuration. When specified, a secondary Hive metastore service is
     * created along with the primary service. All auxiliary versions must be less
     * than the service's primary version. The key is the auxiliary service name
     * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
     * means that the first character must be a lowercase letter, and all the
     * following characters must be hyphens, lowercase letters, or digits, except
     * the last character, which cannot be a hyphen.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
     * </code>
     */
    @java.lang.Override
    public /* nullable */ com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig
        getAuxiliaryVersionsOrDefault(
            java.lang.String key,
            /* nullable */
            com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
          map = internalGetAuxiliaryVersions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore version to the auxiliary version
     * configuration. When specified, a secondary Hive metastore service is
     * created along with the primary service. All auxiliary versions must be less
     * than the service's primary version. The key is the auxiliary service name
     * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
     * means that the first character must be a lowercase letter, and all the
     * following characters must be hyphens, lowercase letters, or digits, except
     * the last character, which cannot be a hyphen.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
     * </code>
     */
    @java.lang.Override
    public com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig getAuxiliaryVersionsOrThrow(
        java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
          map = internalGetAuxiliaryVersions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearAuxiliaryVersions() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableAuxiliaryVersions().getMutableMap().clear();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore version to the auxiliary version
     * configuration. When specified, a secondary Hive metastore service is
     * created along with the primary service. All auxiliary versions must be less
     * than the service's primary version. The key is the auxiliary service name
     * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
     * means that the first character must be a lowercase letter, and all the
     * following characters must be hyphens, lowercase letters, or digits, except
     * the last character, which cannot be a hyphen.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
     * </code>
     */
    public Builder removeAuxiliaryVersions(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableAuxiliaryVersions().getMutableMap().remove(key);
      return this;
    }

    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
        getMutableAuxiliaryVersions() {
      bitField0_ |= 0x00000008;
      return internalGetMutableAuxiliaryVersions().getMutableMap();
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore version to the auxiliary version
     * configuration. When specified, a secondary Hive metastore service is
     * created along with the primary service. All auxiliary versions must be less
     * than the service's primary version. The key is the auxiliary service name
     * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
     * means that the first character must be a lowercase letter, and all the
     * following characters must be hyphens, lowercase letters, or digits, except
     * the last character, which cannot be a hyphen.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
     * </code>
     */
    public Builder putAuxiliaryVersions(
        java.lang.String key, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableAuxiliaryVersions().getMutableMap().put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A mapping of Hive metastore version to the auxiliary version
     * configuration. When specified, a secondary Hive metastore service is
     * created along with the primary service. All auxiliary versions must be less
     * than the service's primary version. The key is the auxiliary service name
     * and it must match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. This
     * means that the first character must be a lowercase letter, and all the
     * following characters must be hyphens, lowercase letters, or digits, except
     * the last character, which cannot be a hyphen.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.events.cloud.metastore.v1.AuxiliaryVersionConfig&gt; auxiliary_versions = 5;
     * </code>
     */
    public Builder putAllAuxiliaryVersions(
        java.util.Map<java.lang.String, com.google.events.cloud.metastore.v1.AuxiliaryVersionConfig>
            values) {
      internalGetMutableAuxiliaryVersions().getMutableMap().putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.metastore.v1.HiveMetastoreConfig)
  }

  // @@protoc_insertion_point(class_scope:google.events.cloud.metastore.v1.HiveMetastoreConfig)
  private static final com.google.events.cloud.metastore.v1.HiveMetastoreConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.events.cloud.metastore.v1.HiveMetastoreConfig();
  }

  public static com.google.events.cloud.metastore.v1.HiveMetastoreConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HiveMetastoreConfig> PARSER =
      new com.google.protobuf.AbstractParser<HiveMetastoreConfig>() {
        @java.lang.Override
        public HiveMetastoreConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<HiveMetastoreConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HiveMetastoreConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.events.cloud.metastore.v1.HiveMetastoreConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
