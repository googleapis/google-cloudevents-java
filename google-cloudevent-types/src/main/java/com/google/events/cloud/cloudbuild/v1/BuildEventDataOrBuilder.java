// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/cloudbuild/v1/data.proto

package com.google.events.cloud.cloudbuild.v1;

public interface BuildEventDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.events.cloud.cloudbuild.v1.BuildEventData)
        com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique identifier of the build.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @return The id.
     */
    java.lang.String getId();

    /**
     * <pre>
     * Unique identifier of the build.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString getIdBytes();

    /**
     * <pre>
     * ID of the project.
     * </pre>
     *
     * <code>string project_id = 16;</code>
     *
     * @return The projectId.
     */
    java.lang.String getProjectId();

    /**
     * <pre>
     * ID of the project.
     * </pre>
     *
     * <code>string project_id = 16;</code>
     *
     * @return The bytes for projectId.
     */
    com.google.protobuf.ByteString getProjectIdBytes();

    /**
     * <pre>
     * Status of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
     *
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();

    /**
     * <pre>
     * Status of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
     *
     * @return The status.
     */
    com.google.events.cloud.cloudbuild.v1.BuildEventData.Status getStatus();

    /**
     * <pre>
     * Customer-readable message about the current status.
     * </pre>
     *
     * <code>string status_detail = 24;</code>
     *
     * @return The statusDetail.
     */
    java.lang.String getStatusDetail();

    /**
     * <pre>
     * Customer-readable message about the current status.
     * </pre>
     *
     * <code>string status_detail = 24;</code>
     *
     * @return The bytes for statusDetail.
     */
    com.google.protobuf.ByteString getStatusDetailBytes();

    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     *
     * @return Whether the source field is set.
     */
    boolean hasSource();

    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     *
     * @return The source.
     */
    com.google.events.cloud.cloudbuild.v1.Source getSource();

    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     */
    com.google.events.cloud.cloudbuild.v1.SourceOrBuilder getSourceOrBuilder();

    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    java.util.List<com.google.events.cloud.cloudbuild.v1.BuildStep> getStepsList();

    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    com.google.events.cloud.cloudbuild.v1.BuildStep getSteps(int index);

    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    int getStepsCount();

    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    java.util.List<? extends com.google.events.cloud.cloudbuild.v1.BuildStepOrBuilder> getStepsOrBuilderList();

    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    com.google.events.cloud.cloudbuild.v1.BuildStepOrBuilder getStepsOrBuilder(int index);

    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     *
     * @return Whether the results field is set.
     */
    boolean hasResults();

    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     *
     * @return The results.
     */
    com.google.events.cloud.cloudbuild.v1.Results getResults();

    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     */
    com.google.events.cloud.cloudbuild.v1.ResultsOrBuilder getResultsOrBuilder();

    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     *
     * @return Whether the createTime field is set.
     */
    boolean hasCreateTime();

    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     *
     * @return The createTime.
     */
    com.google.protobuf.Timestamp getCreateTime();

    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     *
     * @return Whether the startTime field is set.
     */
    boolean hasStartTime();

    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     *
     * @return The startTime.
     */
    com.google.protobuf.Timestamp getStartTime();

    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     */
    com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();

    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     *
     * @return Whether the finishTime field is set.
     */
    boolean hasFinishTime();

    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     *
     * @return The finishTime.
     */
    com.google.protobuf.Timestamp getFinishTime();

    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     */
    com.google.protobuf.TimestampOrBuilder getFinishTimeOrBuilder();

    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     *
     * @return Whether the timeout field is set.
     */
    boolean hasTimeout();

    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     *
     * @return The timeout.
     */
    com.google.protobuf.Duration getTimeout();

    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     */
    com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     *
     * @return A list containing the images.
     */
    java.util.List<java.lang.String> getImagesList();

    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     *
     * @return The count of images.
     */
    int getImagesCount();

    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     *
     * @param index
     *            The index of the element to return.
     *
     * @return The images at the given index.
     */
    java.lang.String getImages(int index);

    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     *
     * @param index
     *            The index of the value to return.
     *
     * @return The bytes of the images at the given index.
     */
    com.google.protobuf.ByteString getImagesBytes(int index);

    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     *
     * @return Whether the queueTtl field is set.
     */
    boolean hasQueueTtl();

    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     *
     * @return The queueTtl.
     */
    com.google.protobuf.Duration getQueueTtl();

    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     */
    com.google.protobuf.DurationOrBuilder getQueueTtlOrBuilder();

    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     *
     * @return Whether the artifacts field is set.
     */
    boolean hasArtifacts();

    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     *
     * @return The artifacts.
     */
    com.google.events.cloud.cloudbuild.v1.Artifacts getArtifacts();

    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     */
    com.google.events.cloud.cloudbuild.v1.ArtifactsOrBuilder getArtifactsOrBuilder();

    /**
     * <pre>
     * Google Cloud Storage bucket where logs should be written (see
     * [Bucket Name
     * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
     * </pre>
     *
     * <code>string logs_bucket = 19;</code>
     *
     * @return The logsBucket.
     */
    java.lang.String getLogsBucket();

    /**
     * <pre>
     * Google Cloud Storage bucket where logs should be written (see
     * [Bucket Name
     * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
     * </pre>
     *
     * <code>string logs_bucket = 19;</code>
     *
     * @return The bytes for logsBucket.
     */
    com.google.protobuf.ByteString getLogsBucketBytes();

    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     *
     * @return Whether the sourceProvenance field is set.
     */
    boolean hasSourceProvenance();

    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     *
     * @return The sourceProvenance.
     */
    com.google.events.cloud.cloudbuild.v1.SourceProvenance getSourceProvenance();

    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     */
    com.google.events.cloud.cloudbuild.v1.SourceProvenanceOrBuilder getSourceProvenanceOrBuilder();

    /**
     * <pre>
     * The ID of the `BuildTrigger` that triggered this build, if it
     * was triggered automatically.
     * </pre>
     *
     * <code>string build_trigger_id = 22;</code>
     *
     * @return The buildTriggerId.
     */
    java.lang.String getBuildTriggerId();

    /**
     * <pre>
     * The ID of the `BuildTrigger` that triggered this build, if it
     * was triggered automatically.
     * </pre>
     *
     * <code>string build_trigger_id = 22;</code>
     *
     * @return The bytes for buildTriggerId.
     */
    com.google.protobuf.ByteString getBuildTriggerIdBytes();

    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     *
     * @return Whether the options field is set.
     */
    boolean hasOptions();

    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     *
     * @return The options.
     */
    com.google.events.cloud.cloudbuild.v1.BuildOptions getOptions();

    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     */
    com.google.events.cloud.cloudbuild.v1.BuildOptionsOrBuilder getOptionsOrBuilder();

    /**
     * <pre>
     * URL to logs for this build in Google Cloud Console.
     * </pre>
     *
     * <code>string log_url = 25;</code>
     *
     * @return The logUrl.
     */
    java.lang.String getLogUrl();

    /**
     * <pre>
     * URL to logs for this build in Google Cloud Console.
     * </pre>
     *
     * <code>string log_url = 25;</code>
     *
     * @return The bytes for logUrl.
     */
    com.google.protobuf.ByteString getLogUrlBytes();

    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    int getSubstitutionsCount();

    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    boolean containsSubstitutions(java.lang.String key);

    /**
     * Use {@link #getSubstitutionsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String> getSubstitutions();

    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    java.util.Map<java.lang.String, java.lang.String> getSubstitutionsMap();

    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */

    /* nullable */
    java.lang.String getSubstitutionsOrDefault(java.lang.String key,
            /* nullable */
            java.lang.String defaultValue);

    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */

    java.lang.String getSubstitutionsOrThrow(java.lang.String key);

    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     *
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String> getTagsList();

    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     *
     * @return The count of tags.
     */
    int getTagsCount();

    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     *
     * @param index
     *            The index of the element to return.
     *
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);

    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     *
     * @param index
     *            The index of the value to return.
     *
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString getTagsBytes(int index);

    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    java.util.List<com.google.events.cloud.cloudbuild.v1.Secret> getSecretsList();

    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    com.google.events.cloud.cloudbuild.v1.Secret getSecrets(int index);

    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    int getSecretsCount();

    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    java.util.List<? extends com.google.events.cloud.cloudbuild.v1.SecretOrBuilder> getSecretsOrBuilderList();

    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    com.google.events.cloud.cloudbuild.v1.SecretOrBuilder getSecretsOrBuilder(int index);

    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    int getTimingCount();

    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    boolean containsTiming(java.lang.String key);

    /**
     * Use {@link #getTimingMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.events.cloud.cloudbuild.v1.TimeSpan> getTiming();

    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    java.util.Map<java.lang.String, com.google.events.cloud.cloudbuild.v1.TimeSpan> getTimingMap();

    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */

    /* nullable */
    com.google.events.cloud.cloudbuild.v1.TimeSpan getTimingOrDefault(java.lang.String key,
            /* nullable */
            com.google.events.cloud.cloudbuild.v1.TimeSpan defaultValue);

    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */

    com.google.events.cloud.cloudbuild.v1.TimeSpan getTimingOrThrow(java.lang.String key);
}
