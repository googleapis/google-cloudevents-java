/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/visionai/v1/data.proto

package com.google.events.cloud.visionai.v1;

public interface VideoStreamInputConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.events.cloud.visionai.v1.VideoStreamInputConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated string streams = 1;</code>
   *
   * @return A list containing the streams.
   */
  java.util.List<java.lang.String> getStreamsList();

  /**
   * <code>repeated string streams = 1;</code>
   *
   * @return The count of streams.
   */
  int getStreamsCount();

  /**
   * <code>repeated string streams = 1;</code>
   *
   * @param index The index of the element to return.
   * @return The streams at the given index.
   */
  java.lang.String getStreams(int index);

  /**
   * <code>repeated string streams = 1;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the streams at the given index.
   */
  com.google.protobuf.ByteString getStreamsBytes(int index);

  /**
   * <code>
   * repeated .google.events.cloud.visionai.v1.StreamWithAnnotation streams_with_annotation = 2;
   * </code>
   */
  java.util.List<com.google.events.cloud.visionai.v1.StreamWithAnnotation>
      getStreamsWithAnnotationList();

  /**
   * <code>
   * repeated .google.events.cloud.visionai.v1.StreamWithAnnotation streams_with_annotation = 2;
   * </code>
   */
  com.google.events.cloud.visionai.v1.StreamWithAnnotation getStreamsWithAnnotation(int index);

  /**
   * <code>
   * repeated .google.events.cloud.visionai.v1.StreamWithAnnotation streams_with_annotation = 2;
   * </code>
   */
  int getStreamsWithAnnotationCount();

  /**
   * <code>
   * repeated .google.events.cloud.visionai.v1.StreamWithAnnotation streams_with_annotation = 2;
   * </code>
   */
  java.util.List<? extends com.google.events.cloud.visionai.v1.StreamWithAnnotationOrBuilder>
      getStreamsWithAnnotationOrBuilderList();

  /**
   * <code>
   * repeated .google.events.cloud.visionai.v1.StreamWithAnnotation streams_with_annotation = 2;
   * </code>
   */
  com.google.events.cloud.visionai.v1.StreamWithAnnotationOrBuilder
      getStreamsWithAnnotationOrBuilder(int index);
}
